{"key":"listknows","source":"//document.body.style.background = 'ghostwhite'\nclickitem = function (key){\n  createMin(key).execute(`Knows.run('${key}')`);\n\tcreateEditor('editor_'+key, 'editkopen', key)\n}\n\n\nKnows.getDb().find({ key: { $exists: true } }, function (err, docs) {\n  //justShowResult(_.zip(_(docs).pluck('key'),_(docs).pluck('source')).join('\\n--\\n'))\n  //console.log(docs) \n  //return\n  var list = _(docs).chain()\n\t.map(function(v,k){\n    return `<span class=\"nav-group-item knows-item\"\nonclick=\"clickitem('${v.key}')\">\n<span class=\"icon icon-cd\"></span>\n${v.key}</span>`;})\n  .value().join('\\n');\n  \n  document.getElementById('content')\n    .innerHTML = `<style>\n.knows-item {margin:2px 0; background: #ddd; padding: 2px 10px 2px 5px;}\n.knows-item .icon {color: #009EBD;}\n</style>\n<nav class=\"nav-group\" \nstyle=\"overflow: scroll;\">${list}</nav>`\n\n})\n","_id":"2qtFnq044XlVGeJ1"}
{"key":"test21","source":"\n\nq = !(typeof q == 'boolean') || !q\ncw.setIgnoreMouseEvents(!true)\ncw.setAlwaysOnTop(true)\ncw.setPosition(0, 23)\ncw.setSize(300, screen.height)\n\nwn = -1\ntpl = jade.compile(`\nstyle\n  :stylus\n    .aa\n      font-size: 30px\n    .wrap\n      //margin-right: -40px\n\n    body\n      background: none\n      opacity: .83\n      zoom: 1\n      overvlow: hidden\n    .scre\n      width: 600px\n      //height: 100px\n    .wxyp\n      position: absolute\n      width: 100%\n      //background: rgba(30,233,99,1)\n      color: black\n      //background: #9E9E9E\n      margin: 0 5px\n      & img\n        width:100%\n      & span\n        width: 100px\n        text-overflow: ellipsis\n      \n    .dblrow    \n      //background: #607D8B\n      //font-family: monospace;\n      display: inline-block\n      line-height: 1em\n      position: relative;\n\n      & .sub, & .sup\n        display: block;  \n        position: relative;\n        top: -0.65em;\n        font-size: 0.85em;\n        line-height: 0;\n        margin: 0 2px;\n      \n      & .sub\n        top: 0.35em;\n\ncanvas#canvas(width=\"320\" height=\"240\")\n//.dd\n  - cb = cw.getBounds()\n  - each f in files\n    - wn++\n    .wxyp.file(style=\"top:#{wn*50||cb.width}px; left:#{0}px;\")\n      //img.scre(src=\"#{f}\")\n      span.icon.icon-cd.icon-text #{f}\n//.aa ∆spirin Ʌspirin ⅄spirin ${screen} ddd\n`);\n\n/*if(typeof files==\"undefined\"){\n files = jetpack.find(remote.app.getHomeDir()+'/Desktop/', \n                     { matching: 'Screen Shot*'});\n}  \n*/\ntxt = tpl({files:files})\nsetContent(txt)\nvar face_detect = require('face-detect'),\n    Canvas = require('canvas');\n\n// ... initialize a canvas object ...\n\nvar result = face_detect.detect_objects({ \"canvas\" : document.getElementById('canvas'),\n  \"interval\" : 5,\n  \"min_neighbors\" : 1 });\n\nconsole.log('Found ' + result.length  + ' faces.');\n\nfor (var i = 0; i < result.length; i++){\n  var face =  result[i];\n  console.log(face);\n}\n","_id":"3s3PRQfnTy60NGzT"}
{"name":"selfsave","md5":"d52d53479595e8ad450f257edee15929","source":"ecode = document.querySelector('.CodeMirror-code')\necode.style.fontSize = '17.5px'; // 13px\nfp = 'file:///Users/rainerg/ajr/Aspirin/node_modules/cson/docs/index.html';\n\nObject.keys(fs)\nObject.keys(windowManager.windows)\n\nsource = editor.getValue();\nhash = md5(source)\n\nremote.app.db.insert({name:'selfsave',md5:hash,source:source})\n\n","_id":"70KNI543N6F0N0Lo"}
{"key":"inp22","source":"const electron = require('electron');\nconst remote = electron.remote;\nconst BrowserWindow = remote.BrowserWindow;\nconst clipboard = require('electron').clipboard;\n\n\nvar mainWindow;\n\n\nvar electronScreen = electron.screen;\nvar size = electronScreen.getPrimaryDisplay().workAreaSize;\n\nvar url = '/Users/rainerg/lab/_exp/electron/electron-sample-apps/file-explorer/test.js';\n\nmainWindow = new BrowserWindow({ \n  width: size.width, \n  height: size.height,\n  x:0, \n  y:0,\n  transparent:true,\n  webSecurity: false\n});\n\nvar html = `\n<script type=\"text/javascript\" src=\"${url}\"></script>\n<h1>${url}</h1>` ;\nhtml += '<pre>'+JSON.stringify(size)+'<pre/>';\n\n//mainWindow.openDevTools();\n\n//mainWindow.loadURL(\"data:text/html;charset=utf-8,\" + encodeURI(html)); \n\nmainWindow.loadUrl('file://' + __dirname + '/exec.html');\nmainWindow.webContents.on(\"did-finish-load\", function() {\n\tmainWindow.webContents.executeJavaScript(`setScript(\"${url}\");`);\n});\n","_id":"95xeOKpvgIp5vJFA"}
{"key":"secondOverlay","source":"\nq = !(typeof q == 'boolean') || !q\ncw.setIgnoreMouseEvents(true)\ncw.setAlwaysOnTop(true)\n\nXshift = 0; //1680\n\ncw.setPosition(Xshift, 0)\ncw.setSize(screen.width, screen.height)\ncw.setVisibleOnAllWorkspaces(true)\n\ninf = function(w){\n  var b = w.object.getBounds()\n  return `<sup>x${b.x}</sup><sub>y${b.y}</sub>W${b.width}H${b.height}`  \n}\n//rgba(30,233,99,1)\ntpl = jade.compile(`\nstyle\n  :stylus\n    body\n      background: rgba(22, 22, 22, 0)\n      //background: none\n      opacity: 1.5\n    .wxyp\n      position: absolute\n      background: none\n      color: yellowgreen\n      border-top: 1px dashed yellowgreen\n      border-left: 1px dashed yellowgreen\n      border-right: 1px dashed yellowgreen\n      padding-left: 5px\n      background: none\n    .dblrow    \n      //background: #607D8B\n      font-family: monospace;\n      display: inline-block\n      line-height: 1em\n      position: relative;\n\n      & .sub, & .sup\n        display: block;  \n        position: relative;\n        top: -0.65em;\n        font-size: 0.75em;\n        line-height: 0;\n        margin: 0 2px;\n      \n      & .sub\n        top: 0.25em;\n.dd\n  - each w in windows\n    - b = w.object.getBounds()\n    - if((b.x+b.width) < Xshift) continue;\n    .wxyp.file(style=\"top:#{b.y-21}px; left:#{b.x-Xshift}px; width:#{b.width}px; height:#{20}px;\")\n       span.icon.icon-cd \n       span.icon.icon-text  #{w.name}\n       .pull-right \n        span.icon.icon-info.icon-text  #{w.object.id} \n        .dblrow  \n          .sup x#{b.x}\n          .sub y#{b.y}\n        .dblrow \n          .sup w#{b.width}\n          .sub h#{b.height}\n.aa Ʌspirin v0.1.3\n`);\n\nfunction render(){\n  txt = tpl(windowManager)\n  setContent(txt)\n}\nrender();\nwindow.ri=window.ri||0;\nif(ri) clearInterval(ri);\nri = setInterval(render, 0)\n","_id":"Fn1HDnBuStaafnoH"}
{"key":"redisTest","source":"\n\nvar redis = require(\"redis\"),\n    client = redis.createClient();\n \n// if you'd like to select database 3, instead of 0 (default), call \n// client.select(3, function() { /* ... */ }); \n \nclient.on(\"error\", function (err) {\n    console.log(\"Error \" + err);\n});\n \nclient.set(\"string key\", \"string val\", redis.print);\nclient.hset(\"hash key\", \"hashtest 1\", \"some value\", redis.print);\nclient.hset([\"hash key\", \"hashtest 2\", \"some other value\"], redis.print);\nclient.hkeys(\"hash key\", function (err, replies) {\n    console.log(replies.length + \" replies:\");\n    replies.forEach(function (reply, i) {\n        console.log(\"    \" + i + \": \" + reply);\n    });\n    client.quit();\n});\n","_id":"GsVm5rxor4RBkae9"}
{"key":"showTime","source":"\ntpl = `<style type=\"text/css\">\n  body {\n    -webkit-app-region: drag;\n  }\n  #time {\n    color: white;\n    font-size: 20px;\n    font-family: monospace;\n    font-weight: 600;\n    color: #041231;\n    margin-top: 5px;\n    border-radius: 10px;\n    height: 18px;\n    width: 300px;\n    line-height: 20px;\n    text-overflow: clip;\n    padding: 0 6px;\n    background: rgba(201, 200, 100, 01);\n  }  \n\n</style>\n<div>\n  <h1 id=\"time\"> 14 : 88 </h1>\n  <h3 id=\"shit\"> 5999 min </h1>\n</div>`\n    document.body.style.background = 'none';\n    //{x: 1206, y: 345, width: 320, height: 43}\n    cw.setSize(300,50);\n    cw.setPosition(1370,2)\n    cw.setAlwaysOnTop(true);\n    cw.setIgnoreMouseEvents(true);\n    function render(){\n        var d = new Date();\n        document.getElementById('time').innerHTML = \"\" +d.toString();\n    }\n\n    window.ri=window.ri||0;\n    if(ri) clearInterval(ri);\n    ri = setInterval(render, 50)\nsetContent(tpl)","_id":"JdNiWxGeBbg7lYV8"}
{"key":"d3exp","source":"cw.setPosition(0, 0)\n//cw.setSize(700, 400)\ncw.setSize(screen.width, screen.width)\ncw.setAlwaysOnTop(true)\ncw.setIgnoreMouseEvents(!true)\n\nd3 = require('d3')\ncb = cw.getBounds()\n\ndocument.body.innerHTML = `<style>\nbody{background:rgba(255,255,255,0);}\n.node circle {\n  fill: #fff;\n  stroke: steelblue;\n  stroke-width: 1.5px;\n}\n\n.node {\n  font: 18px sans-serif;\n}\n\n.wrap {\n  zoom: 1;\n}\n.link {\n  fill: none;\n  stroke: #ccc;\n  stroke-width: 1.5px;\n}\n\n</style>\n<div class=\"wrap\">\n    <div id=\"content\" class=\"inner\">\n</div>\n</div>\n`\n\nvar width = 400,\n    height = 500;\nvar diameter = screen.width;\n\nvar tree = d3.layout.tree()\n    .size([360, diameter / 2 - 120])\n    .separation(function(a, b) { return (a.parent == b.parent ? 1 : 2) / a.depth; });\n\nvar diagonal = d3.svg.diagonal.radial()\n    .projection(function(d) { return [d.y, d.x / 180 * Math.PI]; });\n\nvar svg = d3.select(\"#content\").append(\"svg\")\n    .attr(\"width\", diameter)\n    .attr(\"height\", diameter - 150)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + diameter / 2 + \",\" + diameter / 2 + \")\");\n\nd3.json(\"../data/flare.json\", function(error, root) {\n  if (error) throw error;\n\n  var nodes = tree.nodes(root),\n      links = tree.links(nodes);\n\n  var link = svg.selectAll(\".link\")\n      .data(links)\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", diagonal);\n\n  var node = svg.selectAll(\".node\")\n      .data(nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"rotate(\" + (d.x - 90) + \")translate(\" + d.y + \")\"; })\n\n  node.append(\"circle\")\n      .attr(\"r\", 4.5);\n\n  node.append(\"text\")\n      .attr(\"dy\", \".31em\")\n      .attr(\"text-anchor\", function(d) { return d.x < 180 ? \"start\" : \"end\"; })\n      .attr(\"transform\", function(d) { return d.x < 180 ? \"translate(8)\" : \"rotate(180)translate(-8)\"; })\n      .text(function(d) { return d.name; });\n});\n\nd3.select(self.frameElement).style(\"height\", diameter - 150 + \"px\");\n","_id":"MGtcVeGPNVVqfbH3"}
{"key":"grabfocus-test","source":"\tjust.setName(warr[w.id])\n\tjustShowResult('<b style=\"color:green;\">'+w.id +' : '+ warr[w.id]+'</b>', true)","_id":"O63tOkKyVEdXkDfY"}
{"key":"fulloverlay","source":"\nq = !(typeof q == 'boolean') || !q\ncw.setIgnoreMouseEvents(true)\ncw.setAlwaysOnTop(true)\ncw.setPosition(0, 0)\ncw.setSize(screen.width, screen.height)\ncw.setVisibleOnAllWorkspaces(true)\ninf = function(w){\n  var b = w.object.getBounds()\n  return `<sup>x${b.x}</sup><sub>y${b.y}</sub>W${b.width}H${b.height}`  \n}\n//rgba(30,233,99,1)\n\ncomputeXY = function(w){\n  cb = w.object.getBounds()\n  if(cb.y<50){\n     cb.y=50;\n  }\n  return {top: cb.y-21+'px',\n          left: cb.x+'px',\n          width: cb.width+'px',\n          height: (cb.height+'px')\n         }\n}\n\n\ntpl = jade.compile(`\nmixin winitem(b)\n  - if(b.y < 50) b.y = 50;  \n  - xywh = {top: (b.y-21)+\"px\", left: b.x+\"px\", width: b.width+\"px\", height:20+\"px\"}\n  .wxyp.file(style=xywh)\n     block\n\nstyle\n  :stylus\n    body\n      background: rgba(22, 22, 22, .0)\n      opacity: .85\n      \n    .wxyp\n      position: absolute\n      background: none\n      color: yellowgreen\n      border-top: 1px dashed yellowgreen\n      border-left: 1px dashed yellowgreen\n      border-right: 1px dashed yellowgreen\n      border-bottom: 1px dashed yellowgreen\n      padding-left: 5px\n      background: none\n    .dblrow    \n      //background: #607D8B\n      font-family: monospace;\n      display: inline-block\n      line-height: 1em\n      position: relative;\n\n      & .sub, & .sup\n        display: block;  \n        position: relative;\n        top: -0.65em;\n        font-size: 0.75em;\n        line-height: 0;\n        margin: 0 2px;\n      \n      & .sub\n        top: 0.25em;\n\n\n.dd\n  - each w in windows\n    - b = w.object.getBounds()\n    - y = b.y - 21\n    //- if(y < 22) y = 22; \n\n    - xywh = {top: y+\"px\", left: b.x+\"px\", width: b.width+\"px\", height:b.height+20+\"px\"}\n    .wxyp.file(style=xywh)\n       span.icon.icon-cd \n       span.icon.icon-text  #{w.name}\n       .pull-right \n        span.icon.icon-info.icon-text  #{w.object.id} \n        .dblrow  \n          .sup x#{b.x}\n          .sub y#{b.y}\n        .dblrow \n          .sup w#{b.width}\n          .sub h#{b.height}\n    //.ii xyi \n.aa Ʌspirin v0.1.3\n`);\n\nfunction render(){\n  txt = tpl(windowManager)\n  setContent(txt)\n}\nrender();\nwindow.ri=window.ri||0;\nif(ri) clearInterval(ri);\nri = setInterval(render, 100)\n//render()","_id":"PM4UvPacDSHy6z67"}
{"key":"init","source":"\njustShowResult(van_dump(cw.getBounds()))\n","_id":"SPAGZ2lckr5CC7mF"}
{"key":"ksave","source":"if(just.name){\n\tKnows.save(just.name, editor.getValue())\n  if(w = getWin(just.name)){\n  \tw.execute(\"Knows.run('\"+just.name+\"')\")\n  \tjustShowResult('<b style=\"color:green;\">Saved and Updated window \"'+just.name+'\"</b>', true)\n  } \n}else{\n  just.run('add');\n}\n\n","_id":"TqjUpnaDV4qjE7yy"}
{"key":"editor","source":"aa1 = 'a0a0a'\nKnows.run('grabfocus')\n\n//justShowResult('-')\n//cb = cw.getBounds()\n//justShowResult(`x=${cb.x} y=${cb.y} width=${cb.width} height=${cb.height} `)\n//syncSizeLines()","_id":"URTolNNsRssn4zUP"}
{"key":"grabfocus","source":"warr = _(windowManager.windows)\n  .chain()\n  .map(function(v,k){return [v.object.id, k]})\n\t.object()\n\t.value()\n\nelName = document.querySelector('.justName');\nelName.onclick = function(){\n  document.querySelector('.header-text').classList.remove('yellow')\n  document.querySelector('.header-text').classList.add('waiting')\n  \n  remote.app.once('browser-window-focus', function(e1, w1){\n    document.querySelector('.header-text').classList.remove('waiting')\n\t  document.querySelector('.header-text').classList.add('yellow')\n    window.w=w1\n    window.e=e1\n    Knows.run('grabfocus-test')\n  });\n}\n\n\n\n","_id":"Uv7SkxzsTQXl5Z6l"}
{"key":"isotop_btn","source":"clss = 'btn btn-mini btn-isotop'; \nsd = document.getElementById('isotop');\nsd.className = clss\n//---\n\n\n// just text\n//q= 'Hello 1 word. Sentence number 2.';\nsd.classList.toggle('active');\n\n\nq = editor.getValue();\neditor.setValue(`clss = '${sd.className}'; \n` + q.substr(q.split('\\n',1)[0].length+1, q.length))\n","_id":"W8NMvDxYPirTW3ps"}
{"key":"toggletop","source":"_(windowManager.windows)\n  .reduce(function(memo, v, k, i){\n  \tv.execute(\"just.run('top');\"); \n  \tvar row = memo.length-1+memo[memo.length-1].length/70|0;\n  \tif(!memo[row])memo[row]='';\n  \t//memo[row] = memo[row]+' L'+ memo[row].length +'R'+row+'&'+k;\n  \tmemo[row] += ' #'+k;\n    return memo\n\t},['']).join('\\n')\n","_id":"XecKL7EzLILByK6J"}
{"key":"load","source":"createBrowser('http://google.com')\n\n","_id":"ZcmxyEhVLwbKTPpH"}
{"key":"bozon","source":"\ndocument.getElementById('source').innerText = 'bozontest'\n\n","_id":"gJmK1r1aGMhyyOeX"}
{"key":"idnames","source":"\na = _(windowManager.windows)\n  .chain()\n  .map(function(v,k){return [v.object.id, k]})\n\t.object()\n\t.value()\nsetContent('aa')\n","_id":"gQ5ORe5L8NTKiQ3q"}
{"key":"meta","source":"\nq = !(typeof q == 'boolean') || !q\ncw.setIgnoreMouseEvents(!true)\ncw.setAlwaysOnTop(!true)\ncw.setPosition(30, 0)\ncw.setSize(400, screen.height)\n\nwn = -1\ntpl = jade.compile(`\nstyle\n  :stylus\n    .aa\n      font-size: 30px\n    .wrap\n      //margin-right: -40px\n\n    body\n      //background: #222\n      opacity: 1.3\n      zoom: 1\n      overvlow: hidden\n    .scre\n      width: 600px\n      //height: 100px\n    .wxyp\n      position: absolute\n      width: 100%\n      //background: rgba(30,233,99,1)\n      color: black\n      //background: #9E9E9E\n      margin: 0 5px\n      & img\n        width:100%\n      & span\n        width: 100px\n        text-overflow: ellipsis\n      \n    .dblrow    \n      //background: #607D8B\n      //font-family: monospace;\n      display: inline-block\n      line-height: 1em\n      position: relative;\n\n      & .sub, & .sup\n        display: block;  \n        position: relative;\n        top: -0.65em;\n        font-size: 0.85em;\n        line-height: 0;\n        margin: 0 2px;\n      \n      & .sub\n        top: 0.35em;\n\n.dd\n  - cb = cw.getBounds()\n  - each f in files\n    - wn++\n    .wxyp.file(style=\"top:#{wn*cb.width}px; left:#{0}px;\")\n      img.scre(src=\"#{f}\")\n      span.icon.icon-cd.icon-text #{f}\n.aa ∆spirin Ʌspirin ⅄spirin ${screen} ddd\n`);\n\nif(typeof files==\"undefined\"){\n files = jetpack.find(remote.app.getHomeDir()+'/Desktop/', \n                     { matching: 'Screen Shot*'});\n}  \ntxt = tpl({files:files})\nsetContent(txt)","_id":"gjeaod2PumiiNaHf"}
{"key":"editkopen","source":"\n\njust.setName(opt);\n\njust.run('kedit');\n'loading...'\n\n","_id":"o8sCpP7YGONIxyPg"}
{"key":"getfocuswin","source":"/*if(typeof wwe == 'undefined'){\n\tjustShowResult('<b style=\"color:#FF5722;\">non faraon</b>', true)\n}else{\na = _(windowManager.windows)\n  .chain()\n  .map(function(v,k){return [v.object.id, k]})\n\t.object()\n\t.value()\njustShowResult(aa1 +'\\n<b style=\"color:#FF5722;\">'+\n               van_dump(a)+'</b>', true)\n}/**/\n\nwarr = _(windowManager.windows)\n  .chain()\n  .map(function(v,k){return [v.object.id, k]})\n\t.object()\n\t.value()\n\nremote.app.once('browser-window-focus', function(e, w){\n\tjustShowResult('<b style=\"color:green;\">'+w.id +' : '+ warr[w.id]+'</b>', true)\n});\njustShowResult('<b style=\"color:blue;\">Waiting for focus on any window</b>', true)\n","_id":"rtXcJj99XC3KqVZ3"}
{"key":"d3quadtree","source":"cw.setPosition(40, 40)\ncw.setSize(400, 300)\ncw.setAlwaysOnTop(!true)\nd3 = require('d3')\ncb = cw.getBounds()\ndocument.body.innerText = ''\n\nvar width = cb.width,\n    height = cb.height;\n\nvar data = d3.range(1000).map(function() {\n  return [Math.random() * width, Math.random() * height];\n});\n\nvar quadtree = d3.geom.quadtree()\n.extent([[-1, -1], [width + 1, height + 1]])\n(data);\n\nvar color = d3.scale.linear()\n.domain([0, 8])  // max depth of quadtree\n.range([\"#efe\", \"#060\"]);\n\nvar svg = d3.select(\"body\").append(\"div\")\n.attr(\"width\", width)\n.attr(\"height\", height)\n.on(\"click\", function (d) {\n  var xy = d3.mouse(d3.selectAll('svg')[0][0]);\n  svg.selectAll(\"#pt\")\n    .attr(\"cx\", xy[0])\n    .attr(\"cy\", xy[1]);\n  clicked();\n});\n\nvar svg = d3.select(\"body\").append(\"svg\")\n.attr(\"width\", width)\n.attr(\"height\", height)\n.on(\"click\", function (d) {\n  var xy = d3.mouse(d3.selectAll('svg')[0][0]);\n  svg.selectAll(\"#pt\")\n    .attr(\"cx\", xy[0])\n    .attr(\"cy\", xy[1]);\n  clicked();\n});\n\nvar rect = svg.selectAll(\".node\")\n.data(nodes(quadtree))\n.enter().append(\"rect\")\n.attr(\"class\", \"node\")\n.attr(\"x\", function(d) { return d.x1; })\n.attr(\"y\", function(d) { return d.y1; })\n.attr(\"width\", function(d) { return d.x2 - d.x1; })\n.attr(\"height\", function(d) { return d.y2 - d.y1; });\n\nvar point = svg.selectAll(\".point\")\n.data(data)\n.enter().append(\"circle\")\n.attr(\"class\", \"point\")\n.attr(\"cx\", function(d) { return d[0]; })\n.attr(\"cy\", function(d) { return d[1]; })\n.attr(\"r\", 3);\n\nsvg.append(\"circle\")\n  .attr(\"id\", \"pt\")\n  .attr(\"r\", 3)\n  .attr(\"cx\", width/2)\n  .attr(\"cy\", height/2)\n  .style(\"fill\", \"yellow\");\n\n// PDS Collect a list of nodes to draw rectangles, adding extent and depth data\nfunction nodes(quadtree) {\n  var nodes = [];\n  quadtree.depth = 0; // root\n  quadtree.visit(function(node, x1, y1, x2, y2) {\n    node.x1 = x1;\n    node.y1 = y1;\n    node.x2 = x2;\n    node.y2 = y2;\n    nodes.push(node);\n    for (var i=0; i<4; i++) {\n      if (node.nodes[i]) node.nodes[i].depth = node.depth+1;\n    }\n  });\n  return nodes;\n}\n\n\n// calculate euclidean distance of two points with coordinates: a(ax, ay) and b(bx, by)\nfunction euclidDistance(ax, ay, bx, by){\n  return Math.sqrt(Math.pow(ax-bx, 2) + Math.pow(ay-by, 2));\n}\n\n// calculate mindist between searchpoint and rectangle\nfunction mindist(x, y, x1, y1, x2, y2){\n  var dx1 = x - x1, dx2 = x - x2, dy1 = y - y1, dy2 = y - y2;\n\n  if (dx1*dx2 < 0) { // x is between x1 and x2\n    if (dy1*dy2 < 0) { // (x,y) is inside the rectangle\n      return 0; // return 0 as point is in rect\n    }\n    return Math.min(Math.abs(dy1),Math.abs(dy2));\n  }\n  if (dy1*dy2 < 0) { // y is between y1 and y2\n    // we don't have to test for being inside the rectangle, it's already tested.\n    return Math.min(Math.abs(dx1),Math.abs(dx2));\n  }\n  return Math.min( Math.min(euclidDistance(x,y,x1,y1),euclidDistance(x,y,x2,y2)), Math.min(euclidDistance(x,y,x1,y2),euclidDistance(x,y,x2,y1)) );\n}\n\n\n// Find the nodes within the specified rectangle.\nfunction knearest(bestqueue, resultqueue, x, y, k) {\n  // sort children according to their mindist/dist to searchpoint\n  bestqueue.sort(function(a, b){\n    // add minidst to nodes if not there already\n    [a, b].forEach(function(val, idx, array){\n      if(val.mindist == undefined){\n        val.scanned = true;\n        if(val.leaf){\n          val.point.scanned=true;\n          val.mindist = euclidDistance(x, y, val.x, val.y);\n        }else{\n          val.mindist = mindist(x, y, val.x1, val.y1, val.x2, val.y2);\n        }\n      }\n    });\n    return b.mindist - a.mindist;\n  });\n\n  // add nearest leafs if any\n  for (var i=bestqueue.length-1; i>=0; i--){\n    var elem = bestqueue[i];\n    if(elem.leaf){\n      elem.point.selected = true;\n      bestqueue.pop();\n      resultqueue.push(elem);\n    }else{\n      break;\n    }\n    if(resultqueue.length >=k){\n      break;\n    }\n  }\n\n  // check if enough points found\n  if(resultqueue.length >=k || bestqueue.length == 0){\n    // return if k neighbors found\n    return;\n  }else{\n    // add child nodes to bestqueue and recurse\n    var vistitednode = bestqueue.pop();\n    vistitednode.visited = true;\n    // add nodes to queue\n    vistitednode.nodes.forEach(function(val, idx, array){\n      bestqueue.push(val);\n    });\n    // recursion\n    knearest(bestqueue, resultqueue, x, y, k);\n  }\n}\n\n\nfunction clicked() {\n  pt = d3.selectAll('#pt');\n  var x = +pt.attr('cx'), y = +pt.attr('cy');\n\n  // TODO these values should be stored seperately so that points don't have to be visited after each query\n  // idea assign unique ids to quadtree nodes and have a separate mindist array\n  point.each(function(d) { d.scanned = d.selected = false; d.mindist = undefined; });\n  rect.each(function(d) { d.visited = false;  d.mindist = undefined;});\n\n  //get nearest neighbors\n  var bestqueue = new Array(quadtree);\n  var resultqueue = [];\n  knearest(bestqueue, resultqueue, x, y, 10);\n\n  point.classed(\"scanned\", function(d) { return d.scanned; });\n  point.classed(\"selected\", function(d) { return d.selected; });\n  rect.style('fill', function(d) { return d.visited ? color(d.depth) : 'none'; });\n}\n\nclicked();\n\n\n","_id":"uFDBwjiXKXsFqOgl"}
{"key":"min_4","source":"\nq = !(typeof q == 'boolean') || !q\n//cw.setIgnoreMouseEvents(!true)\ncw.setPosition(3000, 0)\ncw.setSize(600, screen.height)\n\nwn = 0\ntpl = jade.compile(`\nstyle\n  :stylus\n    .aa\n      font-size: 30px\n    body\n      background: #222\n      //opacity: .3\n      //zoom: 3\n    .scre\n      width: 600px\n      //height: 100px\n    .wxyp\n      position: absolute\n      width: 100%\n      //background: rgba(30,233,99,1)\n      color: black\n      background: #9E9E9E\n      margin: 0 5px\n      & span\n        width: 100px\n        text-overflow: ellipsis\n    .dblrow    \n      //background: #607D8B\n      //font-family: monospace;\n      display: inline-block\n      line-height: 1em\n      position: relative;\n\n      & .sub, & .sup\n        display: block;  \n        position: relative;\n        top: -0.65em;\n        font-size: 0.85em;\n        line-height: 0;\n        margin: 0 2px;\n      \n      & .sub\n        top: 0.35em;\n\n.dd\n  - each f in files\n    //- b = w.object.getBounds()\n    - wn++\n    .wxyp.file(style=\"top:#{wn*450}px; left:#{0}px;\")\n      img.scre(src=\"#{f}\")\n      span.icon.icon-cd.icon-text #{f}\n.aa ∆spirin Ʌspirin ⅄spirin ${screen} ddd\n`);\n\nif(typeof files==\"undefined\"){\n files = jetpack.find(remote.app.getHomeDir()+'/Desktop/', \n                     { matching: 'Screen Shot*'});\n}  \ntxt = tpl({files:files})\nsetContent(txt)","_id":"uScreW4kLFvCzcV5"}
{"key":"minxxin","source":"//document.body.style.background = 'ghostwhite'\n\nKnows.getDb().find({ key: { $exists: true } }, function (err, docs) {\n  //justShowResult(_.zip(_(docs).pluck('key'),_(docs).pluck('source')).join('\\n--\\n'))\n  //console.log(docs) \n  //return\n  var list = _(docs).chain()\n\t.map(function(v,k){\n    return `<a class=\"nav-group-item knows-item\"\nonclick=\"createEditor('editor_${v.key}', 'editkopen', '${v.key}')\">\n<span class=\"icon icon-cd\"></span>\n${v.key}</a>`;})\n  .value().join('\\n');\n  \n  document.getElementById('content')\n    .innerHTML = `<style>\n.knows-item {margin:2px 0; background: #dfd; padding: 2px 10px 2px 5px;}\n.knows-item .icon {color: #009EBD;}\n</style>\n<nav class=\"nav-group\" \nstyle=\"overflow: scroll;\">${list}</nav>`\n\n})\n","_id":"wnqeIlbxqTRXF6AO"}
{"key":"showAppDir","source":"\n\nalert(1)\n\n\n","_id":"1KIeqOOmaHDgX950"}
{"key":"showAppDir","source":"\n\n\n  var dw, name;\n  name = 'dir';\n  dw = giveWindow(name);\n  dw.object.setBounds({\n    \"x\": 1300,\n    \"y\": 55,\n    \"width\": 150,\n    \"height\": 275\n  }, true);\n\n","_id":"1KIeqOOmaHDgX950"}
{"key":"showAppDir","source":"\n\nalert(1)\n  var dw, name;\n  name = 'dir';\n  dw = giveWindow(name);\n  dw.object.setBounds({\n    \"x\": 1300,\n    \"y\": 55,\n    \"width\": 150,\n    \"height\": 275\n  }, true);\n\n","_id":"1KIeqOOmaHDgX950"}
{"key":"showAppDir","source":"\n\nalert(23)\n  var dw, name;\n  name = 'dir';\n  dw = giveWindow(name);\n  dw.object.setBounds({\n    \"x\": 1300,\n    \"y\": 55,\n    \"width\": 150,\n    \"height\": 275\n  }, true);\n\n","_id":"1KIeqOOmaHDgX950"}
{"key":"showAppDir","source":"  \n  var dw, name;\n  name = 'dir';\n  dw = giveWindow(name);\n  dw.execute(`Knows.run('${name}')`)\n  dw.object.setBounds({\n    \"x\": 1300,\n    \"y\": 55,\n    \"width\": 150,\n    \"height\": 275\n  }, true);\n\n","_id":"1KIeqOOmaHDgX950"}
{"key":"dir","source":"\n\n\n","_id":"qfuDy0MdKCHGOHpl"}
{"key":"dir","source":"\nalert(1)\n\n","_id":"qfuDy0MdKCHGOHpl"}
{"key":"showAppDir","source":"  \n  var dw, name;\n  name = 'dir';\n  dw = giveWindow(name);\n  dw.execute(`Knows.run('${name}')`)\n  dw.object.setBounds({\n    \"x\": 1500,\n    \"y\": 455,\n    \"width\": 150,\n    \"height\": 275\n  }, true);\n\n","_id":"1KIeqOOmaHDgX950"}
{"key":"showAppDir","source":"  \n  var dw, name;\n  name = 'dir';\n  dw = giveWindow(name);\n  dw.execute(`Knows.run('${name}')`)\n  dw.object.setBounds({\n    \"x\": 1515,\n    \"y\": 455,\n    \"width\": 150,\n    \"height\": 275\n  }, true);\n\n","_id":"1KIeqOOmaHDgX950"}
{"key":"showAppDir","source":"  \n  var dw, name;\n  name = 'dir';\n  dw = giveWindow(name);\n  dw.execute(`Knows.run('${name}')`)\n  dw.object.setBounds({\n    \"x\": 1415,\n    \"y\": 455,\n    \"width\": 250,\n    \"height\": 475\n  }, true);\n\n","_id":"1KIeqOOmaHDgX950"}
{"key":"dir","source":"\n\n\n","_id":"qfuDy0MdKCHGOHpl"}
{"key":"dir","source":"//document.body.style.background = 'ghostwhite'\nclickitem = function (key){\n  createMin(key).execute(`Knows.run('${key}')`);\n\tcreateEditor('editor_'+key, 'editkopen', key)\n}\n\n\nKnows.getDb().find({ key: { $exists: true } }, function (err, docs) {\n  //justShowResult(_.zip(_(docs).pluck('key'),_(docs).pluck('source')).join('\\n--\\n'))\n  //console.log(docs) \n  //return\n  var list = _(docs).chain()\n\t.map(function(v,k){\n    return `<span class=\"nav-group-item knows-item\"\nonclick=\"clickitem('${v.key}')\">\n<span class=\"icon icon-cd\"></span>\n${v.key}</span>`;})\n  .value().join('\\n');\n  \n  document.getElementById('content')\n    .innerHTML = `<style>\n.knows-item {margin:2px 0; background: #ddd; padding: 2px 10px 2px 5px;}\n.knows-item .icon {color: #009EBD;}\n</style>\n<nav class=\"nav-group\" \nstyle=\"overflow: scroll;\">${list}</nav>`\n\n})\n","_id":"qfuDy0MdKCHGOHpl"}
{"key":"showAppDir","source":"  \n  var dw, name;\n  name = 'dir';\n  dw = giveWindow(name);\n  dw.execute(`Knows.run('${name}')`)\n  dw.object.setBounds({\n    \"x\": 1415,\n    \"y\": 455,\n    \"width\": 250,\n    \"height\": 575\n  }, true);\n\n","_id":"1KIeqOOmaHDgX950"}
{"key":"dir","source":"//document.body.style.background = 'ghostwhite'\nclickitem = function (key){\n  //createMin(key).execute(`Knows.run('${key}')`);\n\tcreateEditor('editor_'+key, 'editkopen', key)\n}\n\n\nKnows.getDb().find({ key: { $exists: true } }, function (err, docs) {\n  //justShowResult(_.zip(_(docs).pluck('key'),_(docs).pluck('source')).join('\\n--\\n'))\n  //console.log(docs) \n  //return\n  var list = _(docs).chain()\n\t.map(function(v,k){\n    return `<span class=\"nav-group-item knows-item\"\nonclick=\"clickitem('${v.key}')\">\n<span class=\"icon icon-cd\"></span>\n${v.key}</span>`;})\n  .value().join('\\n');\n  \n  document.getElementById('content')\n    .innerHTML = `<style>\n.knows-item {margin:2px 0; background: #ddd; padding: 2px 10px 2px 5px;}\n.knows-item .icon {color: #009EBD;}\n</style>\n<nav class=\"nav-group\" \nstyle=\"overflow: scroll;\">${list}</nav>`\n\n})\n","_id":"qfuDy0MdKCHGOHpl"}
