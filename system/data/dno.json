{"key":"EXP_fsTreeUtils_1","source":"tree = jetpack.inspectTree('./plugin_packages', {relativePath:true});\n\ni=-1;\ntmparr = [tree];\no=[];\n\nsum = {size:0,len:0,hlen:0,type:{}};\n\nwhile((++i<=5000) && (root = tmparr.shift())){\n  let {relativePath, name, type, size, children=[]} = root;\n  let len = children.length;\n\n  sum.size +=size;\n  sum.len +=1;\n  sum.type[type] = 1+(sum.type[type]|0);\n  //console.log('root', type, len, sum, root)\n  let rec = {i, len,l:sum.len, name, type, size,  path: relativePath};\n  o.push(rec);\n  \n  sum = children.reduce((m,ch)=>{\n    //console.log('chrd', len, ch.type, {...m}, ch, )\n    if(0 || ch.type=='dir'  || len<15 ){\n      tmparr.unshift(ch);\n      return m;\n    }\n    //console.log('chrd', len, ch.type, {...m}, ch, )\n    m.size += ch.size;\n    m.len += 1;\n    m.hlen += 1;\n    m.type['h_'+ch.type] = 1+(m.type['h_'+ch.type]|0);\n    \n    return m\n  }, sum);\n\n\n  \n\n}\n\n\n\n//tree\n// ch=>({...ch,children:undefined}))\n\n\ncrop = (c = 1) => ({children, ...root}) => ({\n    ...root,\n    children: c && children\n        ? children.map(crop(--c))\n        : undefined\n});\n\n\no2=({\n  //tree: crop(0)(tree.children[0]),\n  sum,\n  i,\n  //hSum:sum, \n  arrLen:o.length,\n\n});\n\no.push({i:'I', name:'Summary', type:Object.entries(sum.type), size:sum.size, len:sum.len});\n\nvan_dump(o2)+'\\n\\n> - - -\\n'\n  +colf(o);\n//s = [...'aabbccdd'].map((v,i)=>++i+'.'+v);\n\n//s = [...'123456789'];\n//res = [...Array(2)].reduce((m,v,i)=>m.splice(++i*3,0,'   ')&&m, s)//.join('');\n//o\n//o[12]\n//o3={};\n//o3.qwe = 1 + o3.qwe|0;\n//a = 1+(o3.qwe|0)","_id":"3ZamPQgaXq0fHdGE"}
{"key":"EXP_2dMap_1","source":"\nfnMap = fn => arr => arr.map(v => fn(v));\npk =6\nN=120;\nTl = (Math.pow(N, pk)+'').length+20;\na = Array(N).fill(0).map((v,i)=>++i)//*++i*++i*++i*++i)\n\nfn = v=>({\n  v,\n  vv:vv=Math.pow(v,pk)+8,\n  l:Math.log(vv)|0,\n  l10:l10 = Math.log10(vv)|0,\n  len: len = (vv+'').length,\n  deita: len - l10,\n  l2:Math.log2(vv)|0,\n  \n  t000: ee = (-1+len)/3|0 ,\n  t0081: w = (len-1)/3 | 0,//v-1 ,\n  t0082: q = -(w+++w*3-1),\n  \n  t001: '|'+Array(Tl-len-ee).fill(' ').join('')+[...Array(ee)].reduceRight((m,v,i)=>m.splice(-(++i*3), 0, ' ')&&m, [...(vv+'')]).join(''),\n});\n\no = fnMap(fn)(a);\n\n\ncolf(o)\n","_id":"6fpjKV5TMgKGzE1F"}
{"key":"bbb","source":"jukukij","_id":"7IWKXDvyjKcQTAYq"}
{"key":"slemag_1","source":"p = \"/Users/rainerg/Documents/slemag_stats.txt\"\n\nstr = jetpack.read(p)\n\nreg = /Won \\$(\\d+\\.?\\d+)/\n\narr = str\n  .split('\\n')\n//  .filter(stroka=>stroka.trim()!=\"\")\n  .map(row=>row.split('\\t'))\n\nclean = str => parseFloat(str)\n\n\n\nmoney = arr.map((v,i)=>{\n  let value = v[2].match(reg);\n\n  //return value;\n  if(value)\n    return [i, value[1], value]\n  else\n    return [i,0]\n})\n\n//colf(res)\n//d = money[0][1][0]\n\n//clean(d)\n//*\n//lost = money.filter(v=>!v[1])//.length\n\nmoneyById = money.reduce((memo, value)=>{\n  let [id, number] = value\n  return [...memo,[id, parseFloat(number)]]\n},[])\n\n\n\no = moneyById.sort((a,b)=>+b[1]-a[1]).map(([id,n])=>[n,...arr[id]])\n\n\n//colf(o)\n/**/\n\n//money.filter(v=>!v[2])\n\n\n\n//iii = moneyById.map(v=>v[1])\ngetYear = v=>v.split('/')[2]\n\nooo = o.map(v=>[v[0], getYear(v[1])])\n\nobj = ooo.reduce((m,[amount, year])=> {\n  \n  let O = {[year]: amount + m[year]||0 };\n  \n  return Object.assign(m, O);\n},{})\n\n","_id":"7UG5aq4FzmLF8xmr"}
{"key":"matrix_works_1","source":"\nRx = require('rxjs')\np = \"/Users/rainerg/Documents/history.txt\";\nstr = jetpack.read(p);\n\ntoHash = (m, v) => Object.assign(m, {[v]: 1 + (m[v] || 0)})\nconsole.clear();\n\ntoHashNum = (m, v) => {\n\n  let pos = m[v] !== undefined ? m[v] : Object.keys(m).length;\n  //console.log(v,pos, m[v])\n  return Object.assign(m, {[v]: pos})\n}\ntoHashNum2 = ([mH,m], v) => {\n\n  let pos = m[v] !== undefined ? m[v] : Object.keys(m).length;\n  \n  \n  if(m[v] === undefined)\n    mH.push(v)\n  \n  //console.log(v,pos, m[v])\n  \n  return [mH, Object.assign(m, {[v]: pos})]\n}\n\nconsole.time('s0')\nwords = str\n  .replace(/\\t|\\n/g, ' ')\n  .split(' ')\n  .slice(0,50)\n  .map(v=>v.replace(/[^#a-zA-Zа-яА-Я]+/g,'').substring(0,25))\n  .filter(v=>v.trim());\n\nconsole.time('s0')\n\n/*\nppp = words.reduce(toHash, {})\n\niii = Object.keys(ppp).map(v => [v, parseInt(ppp[v])]).sort((a, b) => b[1] - a[1])\n\n\ncolf(iii)\n/**/\n//tst = 'AAA BBB CCC AAA BBB AAA CCC AAA CCC AAA '\n//words2 = tst.split(' ').filter(v=>v.trim());\n//*\n///////////////////\ngetflow = list=>{\n  let [index, hash] = list.reduce(toHashNum2, [[],{}]);\n  console.timeEnd('s0')\n  console.time('s1')\n  \n  toFlow = (m, curr, i)=>{\n    //console.log(m, curr, i);\n    if(i==0) \n      return[curr,[]];\n \n    let [prev, bank] = m;\n    let arr = [...bank, [hash[prev], hash[curr], prev, curr]];\n    \n    return [curr, arr];\n  }\n  \n  return {\n    list:list.reduce(toFlow, [])[1],\n    index, hash\n  };\n}\n\nconsole.timeEnd('s1')\nconsole.time('s2')\n\nflow = getflow(words);\n\nconsole.timeEnd('s2')\nconsole.time('s3')\n\nsorter = (k, asc) => (a, b) => asc ? k(a) - k(b) : k(b) - k(a);\n\noffsetMap = flow.list\n  //.map(v=>v[0])\n  //.reduce((m,v)=>( m[v] = [v, m[v]&&m[v][1]+1 || 1] , m),[])\n  .reduce((m,[L,R])=>{\n    m[L] = [L, (m[L] && m[L][1] + 1 || 1)]\n    m[R] = [R, (m[R] && m[R][1] + 1 || 1)]\n    return m;\n  },[])\n  .sort(sorter(v=>v[1]))\n\noffsetMap2 = offsetMap.map(([v0,v1],i)=>[i,v0,v1])\n  .sort(sorter(v=>v[1],1))\n\n\nsw = (v)=>{\n  return v\n  return offsetMap[v][0]\n}\n\nws = (v)=>{\n  return v\n  return offsetMap2[v][0]\n}\n\n\nlen = flow.index.length;\nmI = flow.index;\n\nmatrix = Array(len).fill().map(()=>Array(len).fill());\nma = []\nfor(l of flow.list){\n  let [x1,y1] = l;\n\n  let x = sw(x1) \n  let y = sw(y1)\n  //console.log([x,y],[sw(x),sw(y)] )\n  //ma.push([x1,y1, x,y])\n  matrix[x][y] = matrix[x][y]+1 || 1;\n}\n\nconsole.timeEnd('s3')\nconsole.time('s4')\n\n\n//*\nmtr = matrix\n  .map((v,i)=>Object.assign(\n  { name: mI[ws(i)] }, \n  v.reduce((m,v,j)=>Object.assign(m,{[mI[ws(j)]]:v}),{})))\n\n/**/\n\n//words\n\nconsole.timeEnd('s4')\nconsole.time('s5')\n\nx = matrix.map((mx,i,ml)=>({\n  in:   ml.reduce((m,v)=>m+(v[ws(i)]||0),0), \n  name: mI[ws(i)], \n  out:  mx.reduce((m,v)=>m+(v||0),0)\n})).sort(sorter(v=>v.in))\n/**/\n//colf(x)\nconsole.timeEnd('s5')\n//x\n//colf(matrix)\ncolf(x)\n//flow.list\n//mtr\n//colf(matrix)\n//JSON.stringify(matrix)\n\n//matrix.map(v=>v.join(' ')).join('\\n')\n//\n//\n//flow.index//.length\n//\n\n//colf(offsetMap)","_id":"A4IN7ItVvWuPIk3q"}
{"key":"matrix_works_3(vis)","source":"isresultHTML = 1;\n\np = \"/Users/rainerg/Documents/dump.txt\";\nstr = jetpack.read(p);\n//str = Array(500).fill().map(v=>(Math.random()*26|0 + 10).toString(36).toUpperCase().repeat(Math.random()*3|0)).join(' ');\n\nFN = (str)=>{\n  toHashNum = (m, v) => {\n\n    let pos = m[v] !== undefined ? m[v] : Object.keys(m).length;\n    //console.log(v,pos, m[v])\n    return Object.assign(m, {[v]: pos})\n  }\n  toHashNum2 = ([mH,m], v) => {\n\n    let pos = m[v] !== undefined ? m[v] : Object.keys(m).length;\n    if(m[v] === undefined)\n      mH.push(v)\n    //console.log(v,pos, m[v])\n    return [mH, Object.assign(m, {[v]: pos})]\n  }\n\n  words = str\n    .replace(/\\t|\\n/g, ' ')\n    .split(' ')\n    .slice(0,3000)\n    .map(v=>v.replace(/[^#a-zA-Zа-яА-Я0-9]+/g,''))\n    .filter(v=>v.trim());\n\n  getflow = list=>{\n\n    let [index, hash] = list.reduce(toHashNum2, [[],{}]);\n\n    toFlow = (m, curr, i)=>{\n      if(i==0) \n        return[curr,[]];\n\n      let [prev, bank] = m;\n      let arr = [...bank, [hash[prev], hash[curr], prev, curr]];\n\n      return [curr, arr];\n    }\n\n    return {\n      list:list.reduce(toFlow, [])[1],\n      index, hash\n    };\n  }\n  flow = getflow(words);\n  len = flow.index.length;\n  matrix = Array(len).fill().map(()=>Array(len).fill(0));\n\n  for(l of flow.list){\n    let [x,y] = l;\n    matrix[x][y] = matrix[x][y]+1 || 1;\n  }\n\n  points = matrix.reduce((m,r,x)=>[\n    ...m,\n    ...r.map((c,y)=>[x,y,c])\n  ],[]).filter(v=>v[2]);\n\n  //points = flow.list;\n\n\n  K = 6\n  offset = 10;\n  size = flow.index.length * K + offset*2;\n  max = points.reduce((m,v)=>Math.max(m,v[2]),1)\n  console.clear();\n\n\n  draw = ()=>{\n    var canvas = document.getElementById('cnv');\n    if (canvas.getContext) {\n      ctx = canvas.getContext('2d');\n\n      ctx.fillStyle = 'white';\n      ctx.fillRect(0, 0, size, size);\n\n\n      for(let [x,y,c] of points){\n        if(c!==null){\n\n          clr = `hsl(${(100 - 100 * (c-1) / (max-1))|0}, 80%, 35%)`;\n          //console.log(x,y,c,clr)\n          let [px, py] = [x,y].map(v=>v*K+offset);\n\n          ctx.fillStyle = clr;\n          ctx.fillRect(py, px, K, K);\n        }\n      }\n\n\n\n      durl = canvas.toDataURL();\n      document.getElementById('cimg').setAttribute('src', durl)\n    }\n  }\n\n  setTimeout(draw,50);\n}\n\nFN(str);\n\ns = `<h4>${flow.index.length}X${flow.index.length}</h4>\n<img id=\"cimg\" width=\"100%\"/>\n<hr/>\n<canvas id=\"cnv\" width=\"${size}\" height=\"${size}\" style=\"display: none; border: #5bd46d 1px solid;\"/>\n\n`\n","_id":"AGYXURHcZGH0FsAd"}
{"key":"go2","source":"new Promise((resolve, reject)=>{\nlet tpl = require('jade').compile(`\nhead\n  style \n    :stylus\n      body\n        background: #eee\n      .bar\n        width: 100%\n        height: 20px;\n        background: #ccc\n        -webkit-app-region: drag\nbody\n  .bar <-->\n  .wrap\n    #out.in\n      h1 ololoddddd\n`);\ndocument.write(tpl());\ndocument.getElementById('out').innerHTML += '<div>one more</div>'\ndocument.getElementById('out').innerHTML += '<div>and one more</div>'\nDNO.open('dno').run('test');\n\nlet magic =()=>{\n  return DNO.open('dno').run('print_text').then(printFn=>{\n    DNO.open('dno').run('input')\n      //.then(printFn)\n      .then(resolve);\n  })\n}\n\nmagic();\n\n  \n})","_id":"NhuNWdvHz1sPeAQt"}
{"key":"win1","source":"\nlet txt = `<script>window._APP_ROOT = require('electron').remote.app.aspirinRoot;\nwindow.DNO = require(_APP_ROOT+'/system/dno');\nDNO.open('dno').run('go');</script>`;\ncreateWindow('test_win2',genDataHtmlUrl(txt))\n\n","_id":"PwjFfiApgAM0hs6g"}
{"key":"win0","source":"getWin('editor_46').execute(`DNO.open('dno').save('go',editor.getValue());`)\ngetWin('editor_47').execute(`DNO.open('dno').save('test',editor.getValue());`)\ngetWin('editor_48').execute(`DNO.open('dno').save('win1',editor.getValue());`)\n\nwname = 'test_win';\n\nurl = genDataHtmlUrl('<html/>')\n\nwin = getWin(wname);\nif(!win) win = createWindow('test_win',url)//oldwin.close();\n\nwin.loadURL(url)\ncode = `\nwindow._APP_ROOT = require('electron').remote.app.aspirinRoot;\nwindow.DNO = require(_APP_ROOT+'/system/dno');\nDNO.open('dno').run('go');\n`;\nwin.execute(code)\n","_id":"V7JfEpFpfeYIs2VX"}
{"key":"functionArgumentsTester_1","source":"\ncode = `\n//lol\n//Math.sss();\ns=d\na=10+i;\nb=20+j;\n//alert(123)\nc=a+b;\nreturn c;\n\n`\narr = [];\n\nfunction testVars(src){\n  let vars = []\n\n  //E = null;\n\n  let fn;\n  let _i = 100;\n\n  while(_i--){\n    fn = new Function(...vars, src);\n    //console.log(_fn)\n    try{\n      //debugger\n      fn();\n      break;\n    }catch(e){\n      vars.push(e.message.slice(0,-15))\n      arr.push(e.message)\n    }\n  }\n  \n  return {fn:fn+'', vars};\n\n}\n\nq = testVars(code);\n\nq.fn\n//arr\n\n\n\n/**\njk = JSON.parse(localStorage.Knows)\n  .filter(v=>v&&v.sourceText)\n  .map(v=>v.sourceText);\n\njk.push(code)\n/**/\n\n//res = jk.map(testVars)","_id":"a2rKyoviqVIApxfa"}
{"key":"test","source":"alert(123)\ndocument.getElementById('out').innerHTML += '<div>_APP_ROOT='+_APP_ROOT+'</div>'\n\n","_id":"bh41vtktwcOPcOTj"}
{"key":"DNO_SAVE","source":"\n\n\n\nlet show = (data)=>{\n  if(!runOptions.silence){\n    let str = '<b style=\"color:orange;\">Saved DNO: dno: '+just.name+'</b>';\n    justShowResult(str, true)\n  }\n}\nif(just.name){\n  if(!isAutoRuned)\n    DNO.open('dno')\n      .save(just.name, editor.getValue())\n      .then(show);\n\n}else{\n  just.run('add');\n}\n'wait'\n","_id":"biywN4BWwQsTBXE4"}
{"key":"print_text","source":"\nvar fn = function (val){\n  //alert('do '+val); \n  return new Promise((resolve, reject)=>{\n    //alert('oxyeval'+val);\n\n    document.body.innerHTML \n      += '<div style=\"color:red;\">resolved: '+val+' </div>'\n    resolve(val+'is good!')\n  })\n}\nPromise.resolve(fn);  ","_id":"d42wVjjzTSSlJHnR"}
{"key":"nedb_init_liist","source":"//dir = '/Users/rainerg/work/ideals/_stage_bugdocs/';\nif(!window.dir)\n  dir = dialog.showOpenDialog({properties: ['openDirectory']})[0];\n\ndocInfo = docPath=>{\n  let realPath = path.resolve(dir,docPath);\n  let {size:docSize, md5:docMD5} = jetpack.inspect(realPath, {checksum:'md5'});\n  return {status:'init',docPath, realPath, docSize, docMD5};\n}\n\njd = jetpack.cwd(dir)\nlist = jd.find({matching: '*.pdf'});\n\nout = list.map(docInfo)\n\nst = require('convertor/new_store').store.open('db_stage_bugdocs2');\n\nout.map(v=>{\n  st.save(v.docPath, v)\n})\n\n\n\n//jColf(out, {columns: ['docPath', 'docSize']});\n\n\nout.length\n\n\n","_id":"fAvHqdwgOvS0yCBl"}
{"key":"Editor_matrix_render","source":"id=(v)=>['id',v];\nmove=(v)=>['move',v];\n\nset=(v)=>'set:'+v;\nadd=(v)=>({add:v});\nkey=(v)=>'key:'+v;\nfind=(v)=>'find:'+v;\nrun=(v)=>'run:'+v;\n\n\ntodo = [\n  id('menu'),\n  move('right'),\n  add({text:'AAA'}),\n  \n]\n\nzeroPointData = {};\n\nMD = [[0,0,zeroPointData]];\n\nfMD = p=>MD.find(([x,y])=>p.x==x && p.y==y);\n\nzeroPoint = {\n  id:(id)=>{\n    let cd = fMD(p);\n    if(cd)\n      cd[2].id = id;\n    else\n      MD.push([p.x,p.y,{id}])\n  },\n  move:dir=>{\n    \n    let pd = fMD(p);    \n    if(dir=='r')\n      p.x++;\n    else if(dir=='b')\n      p.y++;\n    \n    let cd = fMD(p);\n    \n    if(!cd){\n      cd = {}\n      MD.push([p.x,p.y,cd])\n    }\n    \n    \n    if(pd)\n      pd[2][dir]=cd;\n    \n    \n  }\n}\n\ndom = [];\nbodyfn = {\n  ...zeroPoint,\n  init:(txt)=>{\n  \n    dom.push({t:'BODY', txt})\n  \n  },\n  move:(...args)=>{ \n    console.log('here')\n    zeroPoint.move(...args)\n  },\n \n}\n\nblockfn = {\n  ...zeroPoint,\n  init:(txt)=>{\n    dom.push({t:'BLOCK', txt});\n  },\n  add: ()=>{},\n  add2: ()=>{},\n}\n\nblock2fn = {\n  ...zeroPoint,\n  test:()=>{\n    alert('block 2 test')\n  },\n  id:(id)=>{\n    let cd = fMD(p);\n    if(cd){\n      cd[2].id = id;\n      //cd[2].kkk = 'b2:'+id;\n    }else\n      MD.push([p.x,p.y,{id,kkk:'b2:'+id}])\n  },\n}\n\nM = [\n  [0,0,'bodyfn',bodyfn],\n  [1,0,'blockfn',blockfn],\n  [1,1,'block2fn',block2fn],\n  [2,1,'block2fn',block2fn],\n];\n\nfM = p=>M.find(([x,y])=>p.x==x && p.y==y);\n\np={x:0,y:0};\n\nrun = (cmdList)=>{\n  \n  for(let [cmd,...args] of cmdList){\n    let mfn = fM(p);  \n    //console.log(p,cmd, mfn,!mfn,!mfn||!mfn[3][cmd])\n    if(!mfn || !mfn[3][cmd]) return ['stopped at',cmd,args]\n\n    mfn[3][cmd](...args);\n\n    //oo.push([cmd, args])\n  }\n  \n  return 'ok'//cmdList;\n}\n\ncmds = [\n  ['init','Miami!'],\n  id('A'),\n\n  move('r'),\n  ['init','Disco'],\n  id('B'),\n  \n  move('b'),\n  id('C'),\n  //['test',0],\n  \n  move('r'),\n  id('D'),\n]\n\no = run(cmds)\n\n;[dom,o,zeroPointData];\n\n//colf(MD)\n//MD\n\n//document.getElementById('content').innerHTML = 'AAAA';;\n\n\n","_id":"hLW8jNOvt7hEAMS2"}
{"key":"matrix_works_2(draw)","source":"isresultHTML = 1;\n\nmatrix = [[null,10,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]]\npoints = matrix.reduce((m,r,x)=>[\n  ...m,\n  ...r.map((c,y)=>[x,y,c])\n],[]).filter(v=>v[2]);\n\nK = 6\noffset = 20;\nsize = matrix.length * K + offset*2;\nconsole.clear();\n\n\nfunction draw() {\n  var canvas = document.getElementById('cnv');\n  if (canvas.getContext) {\n    ctx = canvas.getContext('2d');\n\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, size, size);\n\n    points.forEach(([x,y,c=1])=>{\n      if(c!==null){\n        console.log(x,y,c)\n        let [px, py] = [x,y].map(v=>v*K+offset);\n        ctx.fillStyle = `hsl(${100/c}, 80%, 35%)`;\n        ctx.fillRect(px, py, K, K);\n      }\n    })\n\n\n    //ctx.fillStyle = 'rgba(0, 0, 200, 0.5)';\n    //ctx.fillRect(30, 30, 50, 50);\n  }\n}\n\nsetTimeout(\"draw()\",10);\n\n\ns = `<h4>${matrix.length}X${matrix.length}</h4>\n<canvas id=\"cnv\" width=\"${size}\" height=\"${size}\" style=\"border: #5bd46d 1px solid;\"/>\n\n`\n\n//colf(points)\n\n\n\n","_id":"iFixREjHVDI021eA"}
{"key":"go","source":"\nlet tpl = require('jade').compile(`\nhead\n  style \n    :stylus\n      body\n        background: #eee\n      .bar\n        width: 100%\n        height: 20px;\n        background: #ccc\n        -webkit-app-region: drag\nbody\n  .bar <-->\n  .wrap\n    #out.in\n      h1 ololoddddd\n`);\ndocument.write(tpl());\n\n\ndocument.getElementById('out').innerHTML += '<div>one more</div>'\ndocument.getElementById('out').innerHTML += '<div>and one more</div>'\nDNO.open('dno').run('test');\nDNO.open('dno').run('win1_inp')\n  .then(v=>magic(v))\n  .then(v=>document.body.innerHTML += '<div>'+v+'</div>');\n//*\nlet magic =(vvv)=>{\n  return DNO.open('dno').run('print_text').then(printFn=>{\n    return Promise.resolve(vvv)\n      .then(printFn)\n      .then(DNO.open('dno').run('win1_inp')\n  .then(v=>magic(v))\n  .then(v=>document.body.innerHTML += '<div>'+v+'</div>'));\n  })\n}\n\nmagic();\n\n/**/\n\n","_id":"jJasLmw2w452B02p"}
{"key":"aaa","source":"cccc\n\nsdfsd\n\nError; TypeError; ReferenceError; SyntaxError; RangeError; InternalError; EvalError; and, URIError.\n","_id":"mGocFRPWYdmZ6850"}
{"key":"input","source":"//DNO.open('dno').run(\nnew Promise((resolve,reject)=>{\n  window.submit = ()=>{\n    let val = document.getElementById('inp').value//.trim();\n    if(val)\n      resolve(val);\n  }\n  \n  document.body.innerHTML \n  += `<div>\n<input id=\"inp\" type=\"text\" value=\"sample\"></input>\n<button onclick=\"submit()\"></button>\n</div>`;\n  })\n","_id":"q7lOCXwIjMmW0lT6"}
{"key":"win1_inp","source":"function genDataHtmlUrl(content){\n  return \"data:text/html;charset=utf-8,\" + encodeURI(content);\n}\nfunction createWindow(name, url){\n  let {BrowserWindow} = require('electron').remote;\n  let gw = new BrowserWindow({\n    enableLargerThanScreen: true,\n    movable: true,\n    alwaysOnTop: true,\n    transparent: !true,\n    resizable: true,\n    skipTaskbar: true,\n    frame: !false ,\n    center: true,\n    show: !false\n  });\n  //gw.on('closed', function() {\n  //  gw = null;\n  //});\n  gw.loadURL(url);\n\n  //gw.webContents.once('did-finish-load',function() {\n   gw.setSize(300,300)\n   gw.setPosition(800,50)\n   // gw.showInactive();\n\n  //});\n  return gw;\n}\n\n//let fn = (val)=>{\nlet txt = `aaaaaa<script>window._APP_ROOT = require('electron').remote.app.aspirinRoot;\nwindow.DNO = require(_APP_ROOT+'/system/dno');\n</script>`;\nlet win = createWindow('test_win1_inp', genDataHtmlUrl(txt));\n\nnew Promise((resolve,reject)=>{\n  let code = `DNO.open('dno').run('go2');`;\n  //let code = `Promise.resolve(DNO.open('dno').run('go2'));`;\n  win.webContents.once('did-finish-load',function() {\n    win.webContents.executeJavaScript(code, (v)=>resolve(v))\n  })\n})\n  .then(v=>{\n  //alert(v)\n  win.close();\n  return v;\n  })\n//}\n//Promise.resolve(fn());","_id":"rfYtVlt1xuFMesnf"}
{"key":"ccc","source":"\n\n\nsetText('ssdfsdf2sdsd1341234')\n\n","_id":"tLzC6Fou41N4iNN9"}
{"key":"openInEditor","source":"//console.log(runOptions)\n\njust.setName(runOptions.key);\n\nlet dno = DNO.open('dno');\n\ndno\n  .findOne({key:just.name})\n  .then(v=>editor.setValue(v.source))\n\n\nsaveCodeOverride = ()=>dno.run('DNO_SAVE');\nrunCodeOverride = ()=>dno.run('executeFromEditor');\n","_id":"v3i3l46YsNF5Mp7U"}
{"key":"exampleMatrix","source":"\na = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\nns = a.filter((v, i) => i % 3 == 0)\nps = a.filter((v, i) => i % 3 != 1)\n\n\n//;[ns,ps];\n\ntimes = (n, s) => Array(n).fill(s);\n\no = [\n  ['','','','', ...times(a.length, '↓')],\n  ['','','','', ...a],\n  ['','','','⇘',''],\n  ...a.map(x => [\n    '% →',x,'','',\n    ...a.reduce((m,y,i) => [\n      ...m,\n      ((m[i-1]=='') ? '' : y % x)\n    ], [])\n  ])\n]\n\ncolf(o,{showHeaders:false})\n\n//;[ns.join(' ') , ps.join(' ')];","_id":"v89Jr0qSKTJvHaNq"}
{"key":"executeFromEditor","source":"if (just.name) {\n  if (!isAutoRuned)\n    DNO.open('dno').run('DNO_SAVE', {silence: true});\n\n  let w = getWin(just.name);\n  if (w) {\n    w.execute(`DNO.open('dno').run('${just.name}');`);\n    justShowResult('<b style=\"color:orange;\">Saved code and Updated window {' + just.name + '}</b>', true)\n\n  } else {\n    justShowResult('<b style=\"color:green;\">Saved code and eval in editor</b>', true)\n    runCode(editor.getValue());\n  }\n} else {\n  //just.run('add');\n}\n'wait'\n\n","_id":"vks7aZAepy6BWePL"}
{"key":"HackerRank_treeDiff","source":"function TreeNode(val, left, right) {\n  this.val = (val?? 0)\n  this.left = (left===undefined ? null : left)\n  this.right = (right===undefined ? null : right)\n}\n\nconsole.clear()\n\nfunction toTree (arr){\n  const root = new TreeNode(arr.shift());\n  let s, tempArr = [root];\n  while(arr.length && (s=tempArr.shift())){ \n    const fff = (k)=>{\n\n      let t = arr.shift()??null;\n      console.log(k, t, s.val)\n      if(t === null) return null;\n      let tt = new TreeNode(t);\n      tempArr.push(tt)\n      return tt;\n    }\n    s.left = fff('left');\n    s.right = fff('right');\n  }\n  return root;\n}\n\nrootArr = [0,1,1,2,2,0,2,3,3,3,3,3,3,3,3];\nrootArr = [8,3,10,1,6,null,14,null,null,4,7,13];\n\nrt = toTree([...rootArr])\n\n\nmaxAncestorDiff = function(root) {\n  let arr=[];\n  \n  function re(tree){\n    if(tree===null)return null;\n    arr.push(tree.val)\n \n    let l = re(tree.left);\n    let r = re(tree.right);\n        \n\n    return tree.val\n  }\n  \n  re(root);\n\n  return arr;\n};\n\n\n\no = maxAncestorDiff(rt)\n\n\n//rt","_id":"xHOz6AXvfn7zuy8j"}
{"key":"edit","source":"\nDNO\n  .open('dno')\n  .findOne({key:just.name})\n  .then(v=>editor.setValue(v.source))\n","_id":"xQeO9UayqAvvdDcC"}
{"key":"HackerRank_valleys","source":"\ninp = 'UDDDUDUUUDUUDUDUDUDUUDUDUDUUDUDDUDUDUDDDDDDUUUUUDDDDDDDUUUUDUDUDUDUDUDUDUDUDUUUDUDDDDDUUU'\n\narr=[0,...[...inp].map(v=>v==='U'?1:-1),0]\n\no={}\nlvl = arr.reduce((m,v,i)=>i===1?[m,m+v]:[...m, m[i-1] + v])\n  //.map((v,i)=>[i,v]);\n\no = arr.reduce((m,v,i)=>{\n  const level = m[0] + v;\n  m[0]+=v;\n  m[8][i]='-';\n  //m[8-level][i] = level;   \n  m[8-level][i] = v==-1?'\\\\':v?'/':'-';\n  \n  m[8-level][i-1] = (level>level+v)?'D':(level<level+v)?'U':'';   \n  \n  m[1][i] = ((m[1][i-1]||0)+(m[0]==0&&v>0))\n  let Lb = 14;\n  m[Lb][i] = (m[Lb][i-1]||0)+(m[Lb][i-1]==0&&v<0)\n  //m[12].push(3-level   )\n  return m;\n}, [0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]])\n\n\ncolf(o)\n//o\n//lvl.map(v=>v+2)\n\n\n//arr.reduce(([m,c,a],v,i)=>[m + v, m==0 && v<0?++c:c, [...a,v]], [0,0,[]])\n//arr.reduce(([m,c],v,i)=>[m + v, m==0 && v<0?++c:c], [0,0])[1]\n","_id":"zhFfM32879OldLHw"}
