{"key":"P5_SKETCH","source":"p5 = require('p5');\nsetContent('');\nlet [W,H] = cw.getSize()\n/*\nvar sketch = function( p ) {\n\n  var x = [],\n      y = [],\n      segNum = 20,\n      segLength = 18;\n\n  for (var i = 0; i < segNum; i++) {\n    x[i] = 0;\n    y[i] = 0;\n  }\n\n  p.setup = function() {\n    p.createCanvas(W, H-25);\n    p.strokeWeight(9);\n    p.stroke(255, 100);\n  }\n\n  p.draw = function() {\n    p.background(0);\n    //p.clear();\n    p.dragSegment(0, p.mouseX, p.mouseY);\n    for( var i=0; i<x.length-1; i++) {\n      p.dragSegment(i+1, x[i], y[i]);\n    }\n  }\n\n  p.dragSegment = function(i, xin, yin) {\n    var dx = xin - x[i];\n    var dy = yin - y[i];\n    var angle = p.atan2(dy, dx);\n    x[i] = xin - p.cos(angle) * segLength;\n    y[i] = yin - p.sin(angle) * segLength;\n    p.segment(x[i], y[i], angle);\n  }\n\n  p.segment = function (x, y, a) {\n    p.push();\n    p.translate(x, y);\n    p.rotate(a);\n    p.line(0, 0, segLength, 0);\n    p.pop();\n  }\n};\n*/\nsc = function (p){\n\n  console.log(p)\n  pp=p;\n  \n  var wrap = (function(){\n    console.log(setup)\n\n    var x = [],\n        y = [],\n        segNum = 20,\n        segLength = 18;\n\n    for (var i = 0; i < segNum; i++) {\n      x[i] = 0;\n      y[i] = 0;\n    }\n\n    function setup() {\n      createCanvas(710, 410);\n      strokeWeight(9);\n      stroke(255, 100);\n    }\n\n    function draw() {\n      background(0);\n      dragSegment(0, mouseX, mouseY);\n      for( var i=0; i<x.length-1; i++) {\n        dragSegment(i+1, x[i], y[i]);\n      }\n    }\n\n    function dragSegment(i, xin, yin) {\n      var dx = xin - x[i];\n      var dy = yin - y[i];\n      var angle = atan2(dy, dx);\n      x[i] = xin - cos(angle) * segLength;\n      y[i] = yin - sin(angle) * segLength;\n      segment(x[i], y[i], angle);\n    }\n\n    function segment(x, y, a) {\n      push();\n      translate(x, y);\n      rotate(a);\n      line(0, 0, segLength, 0);\n      pop();\n    }\n\n\n  })(p)\n\n  return wrap\n}\n\nmyp5 = new p5(sc,'content');","_id":"0RDw5eMAKPui6rdo"}
{"key":"showAppDir","source":"var pdbounds = require('electron').remote.screen.getPrimaryDisplay().bounds;  \nlet name = 'dir';\nlet dw = giveWindow(name);\nlet w = dw.object;\nlet onTop = w.isAlwaysOnTop();\ndw.execute(`Knows.run('${name}')`)\n\nlet [width, height, marginRight, marginBottom] = [180, 300, 20, -100];\n\nlet x = pdbounds.width - width - marginRight;\nlet y = (pdbounds.height - height)/2 - marginBottom;\n\nw.setAlwaysOnTop(true);\nw.setVisibleOnAllWorkspaces(true);\nw.focus();\nw.setBounds({\n  x,\n  y,\n  width,\n  height\n}, true);\nw.setAlwaysOnTop(onTop);\nw.setVisibleOnAllWorkspaces(false);\n\n","_id":"1KIeqOOmaHDgX950"}
{"key":"WATCH_QUANT_1","source":"\ndocument.querySelector('.boz-header').innerText = 'Q'\ndocument.body.style.background = 'blue';\n//{x: 1206, y: 345, width: 320, height: 43}\ncw.setSize(20,20);\n//cw.setPosition(1370,40)\ncw.setAlwaysOnTop(true);\n//cw.setIgnoreMouseEvents(!true);\n//WM = remote.require('electron-window-manager');\nrender = (e)=>{\n  let [mw,mh] = [50,60];\n  //let [mw,mh] = getWin('matrix1_view').object.getPosition();\n  let q = windowManager.sharedData.fetch('quants')[1];\n  let k = 10, l = 30;\n  cw.setPosition(l+mw+q.x*k, 20+l+mh+q.y*k);\n};\nrepeat = t => {\n  render(t); \n  requestAnimationFrame(repeat);\n}\n\nrequestAnimationFrame(repeat);\n//document\n\n//document.body.addEventListener(\"mousewheel\", log, false);\n","_id":"2axxY94lnA2zOHhc"}
{"key":"listknows","source":"\n//document.body.style.background = 'ghostwhite'\nclickitem = function (key){\n\n\tcreateEditor('editor_'+key, 'editkopen', key)\n}\n\nopenEditor = key=>createEditor('editor_'+key, 'editkopen', key);\nopenWindow = key=>createMin(key).execute(`Knows.run('${key}')`);\nrunCode = key=>Knows.run(key)\n\n//  Database.run(key)\n\n\ndocument.querySelector('.boz-header').innerText = 'listknows'\nKnows\n  .getDb()\n  .find({ key: { $exists: true } })\n  .sort({key:1})\n  .exec(function (err, docs) {\n  //justShowResult(_.zip(_(docs).pluck('key'),_(docs).pluck('source')).join('\\n--\\n'))\n  //console.log(docs) \n  //return\n  var list = _(docs).chain()\n\t.map(function(v,k){\n    return `<span class=\"nav-group-item knows-item\">\n<span class=\"icon icon-tools\" onclick=\"openEditor('${v.key}')\"></span>\n<span class=\"icon icon-publish\" onclick=\"openWindow('${v.key}')\"> </span>\n<span class=\"icon icon-play\" onclick=\"runCode('${v.key}')\"> </span>\n${v.key}</span>`;})\n  .value().join('\\n');\n  \n  document.getElementById('content')\n    .innerHTML = `<style>\n.knows-item {font-size:12px; margin:2px 0; background: #ddd; padding: 2px 10px 2px 5px;}\n.knows-item .icon {margin-right: 3px; color: #009EBD;}\n.knows-item .icon.icon-publish{margin-right: 0px; color: #009EBD;}\n</style>\n<nav class=\"nav-group\" \nstyle=\"overflow: scroll;\">${list}</nav>`\n\n})\n","_id":"2qtFnq044XlVGeJ1"}
{"key":"SaveToCodeList","source":"source = editor.getValue()\nhash = md5(source)\ndoc = { key: just.name || hash, source: source, md5: hash, system: 'solar', isFunc: false }\n\nDatabase.getDb().update({key:doc.key}, doc, {upsert: true});","_id":"355GIHDm8yMvC0Tm"}
{"key":"EVAL_REQUIRE_MAGIC_TEST","source":"//jetpack.list('node_modules')\nd3 = require_override('d3')\njLog(d3)\n","_id":"3MdeysrCqJ6ujeLg"}
{"key":"editMatrixFunc","source":"\njust.setName(opt);\n\nMatrix.getDb().findOne({key:opt}).exec(function(err,data){\n\t\tstr = data.source\n\t\teditor.setValue(str) //editor.getValue()+'\\n'+\n\t})\n\n\n","_id":"3fOXq29eRAUJvYew"}
{"key":"test21","source":"\n\nq = !(typeof q == 'boolean') || !q\ncw.setIgnoreMouseEvents(!true)\ncw.setAlwaysOnTop(true)\ncw.setPosition(0, 23)\ncw.setSize(300, screen.height)\n\nwn = -1\ntpl = jade.compile(`\nstyle\n  :stylus\n    .aa\n      font-size: 30px\n    .wrap\n      //margin-right: -40px\n\n    body\n      background: none\n      opacity: .83\n      zoom: 1\n      overvlow: hidden\n    .scre\n      width: 600px\n      //height: 100px\n    .wxyp\n      position: absolute\n      width: 100%\n      //background: rgba(30,233,99,1)\n      color: black\n      //background: #9E9E9E\n      margin: 0 5px\n      & img\n        width:100%\n      & span\n        width: 100px\n        text-overflow: ellipsis\n      \n    .dblrow    \n      //background: #607D8B\n      //font-family: monospace;\n      display: inline-block\n      line-height: 1em\n      position: relative;\n\n      & .sub, & .sup\n        display: block;  \n        position: relative;\n        top: -0.65em;\n        font-size: 0.85em;\n        line-height: 0;\n        margin: 0 2px;\n      \n      & .sub\n        top: 0.35em;\n\ncanvas#canvas(width=\"320\" height=\"240\")\n//.dd\n  - cb = cw.getBounds()\n  - each f in files\n    - wn++\n    .wxyp.file(style=\"top:#{wn*50||cb.width}px; left:#{0}px;\")\n      //img.scre(src=\"#{f}\")\n      span.icon.icon-cd.icon-text #{f}\n//.aa ∆spirin Ʌspirin ⅄spirin ${screen} ddd\n`);\n\n//*if(typeof files==\"undefined\"){\n files = jetpack.find(remote.app.getHomeDir()+'/Desktop/', \n                     { matching: 'Screen Shot*'});\n/*\n}  \n*/\ntxt = tpl({files:files})\nsetContent(txt)\nvar face_detect = require('face-detect'),\n    Canvas = require('canvas');\n\n// ... initialize a canvas object ...\n\nvar result = face_detect.detect_objects({ \"canvas\" : document.getElementById('canvas'),\n  \"interval\" : 5,\n  \"min_neighbors\" : 1 });\n\nconsole.log('Found ' + result.length  + ' faces.');\n\nfor (var i = 0; i < result.length; i++){\n  var face =  result[i];\n  console.log(face);\n}\n","_id":"3s3PRQfnTy60NGzT"}
{"key":"showKnowsList","source":"let pdbounds = require('electron').remote.screen.getPrimaryDisplay().workArea;  \nlet name = 'listknows';\nlet dw = giveWindow(name);\nlet w = dw.object;\nlet onTop = w.isAlwaysOnTop();\ndw.execute(`Knows.run('${name}')`)\n\nlet [width, height, marginRight, marginTop] = [160, 300, 90, 20];\n\nlet x = pdbounds.width - width - marginRight;\nlet y = pdbounds.y + marginTop;\n\nw.setAlwaysOnTop(true);\nw.setVisibleOnAllWorkspaces(true);\n//w.focus();\nw.setBounds({\n  x,\n  y,\n  width,\n  height,\n}, true);\nw.setAlwaysOnTop(onTop);\nw.setVisibleOnAllWorkspaces(false);\n","_id":"6JDjC516iSphzCtP"}
{"name":"selfsave","md5":"d52d53479595e8ad450f257edee15929","source":"ecode = document.querySelector('.CodeMirror-code')\necode.style.fontSize = '17.5px'; // 13px\nfp = 'file:///Users/rainerg/ajr/Aspirin/node_modules/cson/docs/index.html';\n\nObject.keys(fs)\nObject.keys(windowManager.windows)\n\nsource = editor.getValue();\nhash = md5(source)\n\nremote.app.db.insert({name:'selfsave',md5:hash,source:source})\n\n","_id":"70KNI543N6F0N0Lo"}
{"key":"inp22","source":"const electron = require('electron');\nconst remote = electron.remote;\nconst BrowserWindow = remote.BrowserWindow;\nconst clipboard = require('electron').clipboard;\n\n\nvar mainWindow;\n\n\nvar electronScreen = electron.screen;\nvar size = electronScreen.getPrimaryDisplay().workAreaSize;\n\nvar url = '/Users/rainerg/lab/_exp/electron/electron-sample-apps/file-explorer/test.js';\n\nmainWindow = new BrowserWindow({ \n  width: size.width, \n  height: size.height,\n  x:0, \n  y:0,\n  transparent:true,\n  webSecurity: false\n});\n\nvar html = `\n<script type=\"text/javascript\" src=\"${url}\"></script>\n<h1>${url}</h1>` ;\nhtml += '<pre>'+JSON.stringify(size)+'<pre/>';\n\n//mainWindow.openDevTools();\n\nmainWindow.loadURL(\"data:text/html;charset=utf-8,\" + encodeURI(html)); \n\n//mainWindow.loadUrl('file://' + __dirname + '/exec.html');\nmainWindow.webContents.on(\"did-finish-load\", function() {\n\tmainWindow.webContents.executeJavaScript(`setScript(\"${url}\");`);\n});\n","_id":"95xeOKpvgIp5vJFA"}
{"key":"showMatrix1","source":"  \n  var dw, name;\n  name = 'matrix1';\n  dw = giveWindow(name);\n  dw.execute(`Knows.run('${name}')`)\n\n","_id":"Ad2bGq0Rx44fYk2u"}
{"key":"PDFJS_TEST_TRANSFORM","source":"\n//cw.webContents.setZoomLevel(0);\ncw.setAlwaysOnTop(!true);\n\ncolf = require('columnify');\n_s = require(\"underscore.string\");\ntoNormal = require('converter/unicodeGlyphs').toNormal;\n\n\nPDFJS = require('pdfjs-dist').PDFJS;\nPDFJS.workerSrc = require.resolve('pdfjs-dist/build/pdf.worker');\nPDFJS.disableWorker = true;\nPDFJS.disableWebGL = !false;\n//PDFJS.disableFontFace = true;\n\n//pfile = \"/Users/rainerg/work/ideals/_TESTFILES/input_pdfs/Fundamentals of Nuclear Science & Engineering.pdf\";//1128882\npfile = \"/Users/rainerg/work/ideals/_TESTFILES/input_pdfs/2011-D3-InfoVis.pdf\";//1128882\n//pfile = \"/Users/rainerg/work/ideals/_TESTFILES/prod_test/1986078.pdf\";\n//pfile = \"/Users/rainerg/work/ideals/5000_pdfs/1128882.pdf\";\n//pfile = \"/Users/rainerg/work/ideals/5000_pdfs/202976.pdf\";\n//pfile = \"/Users/rainerg/work/ideals/_TESTFILES/input_pdfs/790604.pdf\";\n\nsetup_c = ()=>{\n  setContent(`\n<style>\nbody {bordder:1px solid black;padding-bottom:5px;}\n.wrap{margin: 0 5px 5px;width:auto;zdoom:.6;}\n.wrap .inner{width:100%;margin: 20px 0px 0 0px;padding: 0px 0 0 0px;}\npre{padding:5px 10px;margin:0;background:rgba(34,34,34,0.6);}\n#the-canvas{opacity:1;swidth:100%;}\n#bwrp{transform: scale(.5);}\n#alto{transform-origin: top left;\naborder: 1px dashed #9E9E9E;position:relative; background:rgba(34,134,234,0.4);sheight:1500px; margin:10px;}\n#block{padding-left: 3px;box-shadow: 0 0 0px 1px black;overflow:hidden;awhite-space: pre;letter-spacing: -0.1px;text-align-last: justify;position:absolute;top:0;left:0;background:rgba(234,234,134,0.4);color:red;}\n#dno{widtha:100vw; overflow:scroll;}\n</style>\n<div id=\"alto\">\n<canvas id=\"the-canvas\"></canvas>\n<div id=\"block\">SOME</div>\n</div>\n<pre id=\"adp\"></pre>\n<div id=\"main\"></div>\n<div id=\"dno\"><pre id=\"dp\"></pre></div>`)\n\n  dbg = function dbg(v){\n    console.log(v);\n    //debugger;\n    return v\n  }\n\n  dp = txt=>document.getElementById('dp').innerHTML = txt;\n  adp = txt=>document.getElementById('adp').innerHTML = txt;\n\n  canvas = document.getElementById('the-canvas');\n  context = canvas.getContext('2d');\n}\n_f = {\n  vp:{},\n  mxs:null,\n  test_matrix(mx){\n    let cmx = mx[0];\n\n    //adp(van_dump(cmx))\n    //document.getElementById('block')\n    //.setAttribute('transform', cmx[0]);\n    //.style.transform = _f.mxs[0][0];\n  },\n  doc (pdf){\n    //Array(pdf.numPages).fill().map()\n    //debugger\n    pdf.getPage(9)\n      .then(_f.render)\n    //.then(_f.pageTexts)\n  },\n  render(page){\n    //debugger;\n    var scale = 2;\n    var viewport = page.getViewport(scale);\n\n    gvp = _f.vp = viewport;\n    _f.pageOplist(page)\n    _f.pageTexts(page)\n\n\n    //dp(van_dump(viewport));\n    canvas.height = viewport.height;\n    canvas.width = viewport.width;\n\n    var renderContext = {\n      canvasContext: context,\n      viewport: viewport\n      //intent: 'print'\n    };\n    page.render(renderContext);\n\n  },\n  pageOplist (page){\n    page.getOperatorList()\n      .then(opList=>{\n      console.log('aa')\n      window.oopli = opList;\n      windowManager.sharedData.set('opList',opList)\n\n      TEXT = 44;\n      texts_mapping = opList.fnArray\n        .map((v,i)=>[i,v])\n        .filter(v=>v[1]==TEXT)\n\n      res = texts_mapping\n        .map(([i,v])=>opList.argsArray[i][0])\n      parse_ltr = ()=>{\n        var temp_spaces = [];\n        return (m, d, i, a)=>{\n          if(d.isSpace){\n            if(m.length>0)\n              //alert(m)\n              temp_spaces.push(['#', d.width]);\n\n          }else if(d.fontChar){\n            if(temp_spaces.length) {\n              m.push([temp_spaces[0][0],temp_spaces[0][1],temp_spaces.length,777]);\n              temp_spaces = [];\n            }\n            toNormal(d.fontChar)\n              .split('')\n              .forEach((l,i,a)=>m.push([l, d.width/a.length]));\n          }else if(Math.abs(d)>150){\n            if(m.length)\n              temp_spaces.push(['^', d]);\n          }else{\n            //m.push(['', d]);\n          }\n          return m; \n        }\n      };\n\n      yes3 = res\n        .map((v,i)=>v.reduce(parse_ltr(),[]))\n        .filter(v=>v.length)\n        .reduce((m,v)=>m.concat([[' ', 0]], v))\n        .map(v=>Math.abs(v[1]))\n    })\n  },\n  pageTexts (page){\n    page\n      .getTextContent({normalizeWhitespace: !true, disableCombineTextItems:!false})\n      .then(_f.text)\n    //.then(_f.test_matrix);\n\n  },\n  text(text){\n    oott = text;\n    windowManager.sharedData.set('ptexts',oott)\n    text.items = text.items.filter(v=>!!v.str.trim())\n    \n    txts = text;\n\n  }\n};\n//txts = jetpack.read('txts_tr.json','json');\nsetup_p = ()=>{\n  PDFJS.getDocument(pfile).then(_f.doc)\n}\n\nalto = document.getElementById('alto')\nblk = document.getElementById('block')\n//adp(colf(txts.items))\n\ncalc_tran = (textItem_transform, m)=>PDFJS.Util.transform(\n  PDFJS.Util.transform(gvp.transform, textItem_transform),\n  m || [1, 0, 0, -1, 0, 1])\n\nspfn = (v)=>new Array(Math.round(Math.abs(v/255))).fill(' ').join('')\n\ntry_tx = ({str, dir, width, height, transform, fontName})=>{\n  sstr = res[n]\n    .map(d=>d.fontChar||(Math.abs(d)>100)&&spfn(d)||'')\n    .filter(v=>v)\n    .join('')\n  \n//  str = \n //   \"[3]  D. M. Bruls,  C. Huizing,  and J. J. van Wijk.   Squarified treemaps.   In\"\n    //\"[3]  D. M. Bruls, C. Huizing, and J. J. van Wijk.  Squarified treemaps.  In\";\n  //str = _s.clean(str)\n  \n  let transformCopy = _.clone(transform);\n  let Origin_str_length = str.length;\n  let trim_fix = str.length;\n\n  //str = str.trimLeft()\n  trim_fix = (trim_fix - str.length);\n  let letter_width = (.3 * (3/trim_fix))*width/Origin_str_length;\n  let width_trim_fix = trim_fix*letter_width || 0;\n  \n  let {fontFamily, ascent, descent} = txts.styles[fontName]\n  \n  \n  blk.innerHTML = '<span>'+str+'</span>';\n  \n  //let fix_height = ( height * (ascent - descent)) * gvp.scale\n  let fix_height = ( height + height*( descent + ascent) ) * gvp.scale\n  \n  blk.style.width = (width-width_trim_fix)*gvp.scale+'px';\n  blk.style.height = fix_height+'px'; \n  blk.style.lineHeight = fix_height+'px'; \n\n  blk.style.fontFamily = String(fontName)//fontFamily;//\n  blk.style.fontSize = .995*height*gvp.fontScale+'px';\n  //blk.style.fontSize = '1px'; \n  \n  //transform[0] = 1.03/gvp.fontScale;\n  \n  transformCopy[4] +=width_trim_fix*.5; //* -descent;\n  //transformCopy[5] -=ascent*gvp.fontScale;\n  \n  console.log(ascent + descent, 2 - ascent, ascent, descent)\n  stf = calc_tran(transformCopy, [1, 0, 0, -1, 0, 1 ]);\n  stf = [...stf.slice(0, 4).map(v=>v/Math.abs(v) || 0), ...stf.slice(4, 6)]\n  \n  transform_no_scale = (t)=>[...t.slice(0, 4).map(v=>v/Math.abs(v) || 0), ...t.slice(4, 6)]\n  \n  //stf[5] -= gvp.fontScale+height*gvp.fontScale-2;\n  //stf[0] += .01;\n  console.info(transformCopy,stf,{str, width, height},{width_trim_fix,trim_fix});\n\n  //trs = ` translate(${stf[5]/gvp.fontScale}px, ${stf[4]/gvp.fontScale}px)`;  \n  stf = stf.join(', ') \n\n  //  font-size: 2.4px;\n  //  line-height: 2.4px;\n  //   transform-origin: center left;\n  //blk.style.transformOrigin = 'left center';\n  blk.style.transformOrigin = '0 0';\n  blk.style.transform = 'matrix(' + stf + ')';\n  //blk.style.transform = trs;\n};\n\nrerender = ()=>{\n  setup_c()\n  setup_p() \n}\ncalc_letter_pos = ({str, width}, magicOffset)=> {\n  magicOffset.unshift(0); //for zero position!\n  let magicKoef = magicOffset.reduce((m, v)=>m + v) / width;\n  let letter_offset = 0;\n  return (new Array(str.length + 1)).fill(0)\n    .map((v, i)=>(letter_offset += magicOffset[i] / magicKoef)\n      .toFixed(1))\n};\ngetPartOffset = (i)=>{\n  let txt_offset = 0;\n  getPart = (arr, len)=>arr.slice(txt_offset,(txt_offset+=len+1)-1);\n  yes4 = txts.items\n    .map(v=>_s.clean(v.str))\n    .map(v=>getPart(yes3,v.length))\n  return _.clone(yes4[i]);\n}\ncalc_tx = (t_item)=>{\n  let {str, dir, width, height, transform, fontName} = t_item;\n  let {fontFamily, ascent, descent} = txts.styles[fontName]\n  str = _s.clean(str);\n  let stf = calc_tran(transform, [1, 0, 0, -1, 0, 1 ]);\n  transform = [...stf.slice(0, 4).map(v=>v/Math.abs(v) || 0), ...stf.slice(4, 6)]\n  \n  let x = calc_letter_pos(t_item, getPartOffset(n));\n  width = width*gvp.scale;\n  let height2 = ( height + height*( descent + ascent) ) * gvp.scale;\n  return {str, width, height, height2, fontName, transform, x}\n}\n\n//rerender()\n\ntry_ltr = ({ltr, height, height2, width, fontName, transform})=>{\n blk.innerHTML = '<span>'+ltr+'</span>';\n  \n  //let fix_height = ( height * (ascent - descent)) * gvp.scale\n  \n  blk.style.width = width+'px';\n  blk.style.height = height2+'px'; \n  blk.style.lineHeight = height2-gvp.scale+'px'; \n  blk.style.paddingLeft = 0*gvp.scale+'px'; \n  blk.style.paddingRight = 0*gvp.scale+'px'; \n  blk.style.marginTop = 0+'px'; \n  blk.style.fontFamily = String(fontName)//fontFamily;//\n  blk.style.fontSize = .995*height*gvp.fontScale+'px'; \n  blk.style.transformOrigin = '0 0';\n  blk.style.transform = 'matrix(' + transform.join(', ') + ')';\n}\nm=window.m||0;\n\nif(1&&this.gvp && txts.items.length){\n\n  //n=0\n  //n--;n--;n--;\n  lc = window.t_item_res && t_item_res.str.length;\n  c = txts.items.length;\n  if((1+m)==lc)n++;\n  n=n%c;\n  m=++m%lc;\n  //n=0\n  //m=0\n  t_item_res = calc_tx(_.clone(txts.items[n]));\n\n  ltr = t_item_res;\n  ltr.ltr = t_item_res.str[m];\n  ltr.width = gvp.scale*(t_item_res.x[m+1]-t_item_res.x[m]);\n  ltr.transform = PDFJS.Util.transform(t_item_res.transform, [1, 0, 0, 1, (t_item_res.x[m])*gvp.scale, 0 ])\n  \n  \n  try_ltr(ltr)\n  \n\n}\n\nif(0&&this.gvp && txts.items.length){\n\n  //alto.style.width = gvp.width+'px';\n  //alto.style.height = gvp.height+'px';\n  //n=48\n  c = txts.items.length;\n  n=++n%c;\n  //n=48\n  //n=116\n  try_tx(_.clone(txts.items[n]))\n\n  \n  \n  \n  t_item = txts.items[n];\n\n  t_item.str\n  let x = calc_letter_pos(t_item)\n  \n  t_item_res = {page:0, idx:0, str:t_item.str, t:t_item.transform, x};\n  \n  //adp(van_dump(t_item_res))\n\n}\n//*\nif(!true){\n  yes33 = res\n        .map((v,i)=>v.reduce(parse_ltr,[]))\n        .reduce((m,v)=>m.concat([[' ', 0]], v))\n  \n  windowManager.sharedData.set('yes33',yes33)\n}\n\n/**/\n\n","_id":"BOFi0dkpJMEj2hHX"}
{"key":"secondOverlay","source":"\nq = !(typeof q == 'boolean') || !q\ncw.setIgnoreMouseEvents(true)\ncw.setAlwaysOnTop(true)\n\nXshift = 0; //1680\n\ncw.setPosition(Xshift, 0)\ncw.setSize(screen.width, screen.height)\ncw.setVisibleOnAllWorkspaces(true)\n\ninf = function(w){\n  var b = w.object.getBounds()\n  return `<sup>x${b.x}</sup><sub>y${b.y}</sub>W${b.width}H${b.height}`  \n}\n//rgba(30,233,99,1)\ntpl = jade.compile(`\nstyle\n  :stylus\n    body\n      background: rgba(22, 22, 22, 0)\n      //background: none\n      opacity: 1.5\n    .wxyp\n      position: absolute\n      background: none\n      color: yellowgreen\n      border-top: 1px dashed yellowgreen\n      border-left: 1px dashed yellowgreen\n      border-right: 1px dashed yellowgreen\n      padding-left: 5px\n      background: none\n    .dblrow    \n      //background: #607D8B\n      font-family: monospace;\n      display: inline-block\n      line-height: 1em\n      position: relative;\n\n      & .sub, & .sup\n        display: block;  \n        position: relative;\n        top: -0.65em;\n        font-size: 0.75em;\n        line-height: 0;\n        margin: 0 2px;\n      \n      & .sub\n        top: 0.25em;\n.dd\n  - each w in windows\n    - b = w.object.getBounds()\n    - if((b.x+b.width) < Xshift) continue;\n    .wxyp.file(style=\"top:#{b.y-21}px; left:#{b.x-Xshift}px; width:#{b.width}px; height:#{20}px;\")\n       span.icon.icon-cd \n       span.icon.icon-text  #{w.name}\n       .pull-right \n        span.icon.icon-info.icon-text  #{w.object.id} \n        .dblrow  \n          .sup x#{b.x}\n          .sub y#{b.y}\n        .dblrow \n          .sup w#{b.width}\n          .sub h#{b.height}\n.aa Ʌspirin v0.1.3\n`);\n\nfunction render(){\n  txt = tpl(windowManager)\n  setContent(txt)\n}\nrender();\nwindow.ri=window.ri||0;\nif(ri) clearInterval(ri);\nri = setInterval(render, 0)\n","_id":"Fn1HDnBuStaafnoH"}
{"key":"redisTest","source":"\n\nvar redis = require(\"redis\"),\n    client = redis.createClient();\n \n// if you'd like to select database 3, instead of 0 (default), call \n// client.select(3, function() { /* ... */ }); \n \nclient.on(\"error\", function (err) {\n    console.log(\"Error \" + err);\n});\n \nclient.set(\"string key\", \"string val\", redis.print);\nclient.hset(\"hash key\", \"hashtest 1\", \"some value\", redis.print);\nclient.hset([\"hash key\", \"hashtest 2\", \"some other value\"], redis.print);\nclient.hkeys(\"hash key\", function (err, replies) {\n    console.log(replies.length + \" replies:\");\n    replies.forEach(function (reply, i) {\n        console.log(\"    \" + i + \": \" + reply);\n    });\n    client.quit();\n});\n","_id":"GsVm5rxor4RBkae9"}
{"key":"SHOW_ME_GIFS","source":"q = !(typeof q == 'boolean') || !q\ncw.setIgnoreMouseEvents(!true)\ncw.setAlwaysOnTop(!true)\ncw.setPosition(30, 0)\ncw.setSize(400, screen.height)\n\nwn = -1\ntpl = jade.compile(`\nstyle\n  :stylus\n    .aa\n      font-size: 30px\n    .wrap\n      //margin-right: -40px\n\n    body\n      //background: #222\n      opacity: 1.3\n      zoom: 1\n      overvlow: hidden\n    .scre\n      width: 600px\n      //height: 100px\n    .wxyp\n      position: absolute\n      width: 100%\n      //background: rgba(30,233,99,1)\n      color: black\n      //background: #9E9E9E\n      margin: 0 5px\n      & img\n        width:100%\n      & span\n        width: 100px\n        text-overflow: ellipsis\n      \n    .dblrow    \n      //background: #607D8B\n      //font-family: monospace;\n      display: inline-block\n      line-height: 1em\n      position: relative;\n\n      & .sub, & .sup\n        display: block;  \n        position: relative;\n        top: -0.65em;\n        font-size: 0.85em;\n        line-height: 0;\n        margin: 0 2px;\n      \n      & .sub\n        top: 0.35em;\n\n.dd\n  - cb = cw.getBounds()\n  - each f in files\n    - wn++\n    .wxyp.file(style=\"top:#{wn*cb.width}px; left:#{0}px;\")\n      img.scre(src=\"#{f}\")\n      span.icon.icon-cd.icon-text #{f}\n.aa ∆spirin Ʌspirin ⅄spirin ${screen} ddd\n`);\n\np = '/Users/rainerg/Pictures/pictures/';\n\n//if(0&&typeof window.files==\"undefined\"){\n files = jetpack.cwd(p).find({matching: '*.gif'});\n files = files.map(v=>'file://'+jetpack.path(p, v)) //.slice(2)\n//}  \ntxt = tpl({files:files})\nsetContent(txt)\n\n\n\n","_id":"ImTZARNtwhSIcM9z"}
{"key":"showTime","source":"const pdbounds = require('electron').remote.screen.getPrimaryDisplay().workArea;  \n\nconst height = 26;\nconst K = 15;\n\nconst [width, marginRight, marginTop] = [height*K, 300, 10];\n\nlet x = ( pdbounds.width - width ) / 2 |0; //center\n//let x = pdbounds.width - width - marginRight;\nlet y = pdbounds.height - height - marginTop;\n//let y = pdbounds.y + marginTop;\n//let y = ( pdbounds.height - height ) / 3 |0;    \n\n// #time { background: rgba(52, 200, 180, 0.27);\n// background: #34c8b445;\nconst calc_h = v => Math.pow(Math.log(v),3)/23;\n\nconst stroke_thin = calc_h(height).toFixed(2);      \n\ntpl = `<style type=\"text/css\">\n  body {\n    -webkit-app-region: drag;\n    box-shadow: none;\n    background: transparent;\n  }\n  .wrap {\n    position: static;\n  }\n  .wrap .inner {\n    position: static;\n    min-width: 100%;\n    min-height: 100%;\n    padding-top: 0px;\n  }\n  #time {\n    background: #00000050;\n    color: white;\n    width: ${width}px;\n    height: ${height}px;\n    margin-top: 0px;\n    padding: 0 6px;\n    border-radius: 3px;\n    font-size: ${height}px;\n    font-family: monospace;\n    font-weight: 600;\n    line-height: ${height-2}px;\n    text-overflow: clip;\n\n    -webkit-text-stroke: ${stroke_thin}px black;\n    -webkit-text-fill-color: #72daeeb3;\n  } \n  .boz-header { \n    display: none;\n  }\n\n</style>\n<div>\n  <h1 id=\"time\">${stroke_thin} 14 : 88 </h1>\n</div>`;\n\n//document.body.style.background = 'none';\n\ncw.setVisibleOnAllWorkspaces(true);\ncw.setBounds({x, y, width, height});\ncw.setAlwaysOnTop(true);\ncw.setIgnoreMouseEvents(true);\n\nfunction render(){\n  var d = new Date();\n  document.getElementById('time').innerHTML = \"\" +d.toString();\n}\n\nwindow.ri=window.ri||0;\nif(ri) clearInterval(ri);\nri = setInterval(render, 1000)\nsetContent(tpl)\nrender()","_id":"JdNiWxGeBbg7lYV8"}
{"key":"d3exp","source":"cw.setPosition(0, 0)\n//cw.setSize(700, 400)\ncw.setSize(screen.width, screen.width)\ncw.setAlwaysOnTop(true)\ncw.setIgnoreMouseEvents(!true)\n\nd3 = require('d3')\ncb = cw.getBounds()\n\ndocument.body.innerHTML = `<style>\nbody{background:rgba(255,255,255,0);}\n.node circle {\n  fill: #fff;\n  stroke: steelblue;\n  stroke-width: 1.5px;\n}\n\n.node {\n  font: 18px sans-serif;\n}\n\n.wrap {\n  zoom: 1;\n}\n.link {\n  fill: none;\n  stroke: #ccc;\n  stroke-width: 1.5px;\n}\n\n</style>\n<div class=\"wrap\">\n    <div id=\"content\" class=\"inner\">\n</div>\n</div>\n`\n\nvar width = 200,\n    height = 500;\nvar diameter = screen.width;\n\nvar tree = d3.layout.tree()\n    .size([360, diameter / 2 - 120])\n    .separation(function(a, b) { return (a.parent == b.parent ? 1 : 2) / a.depth; });\n\nvar diagonal = d3.svg.diagonal.radial()\n    .projection(function(d) { return [d.y, d.x / 180 * Math.PI]; });\n\nvar svg = d3.select(\"#content\").append(\"svg\")\n    .attr(\"width\", diameter)\n    .attr(\"height\", diameter - 150)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + diameter / 2 + \",\" + diameter / 2 + \")\");\n\nd3.json(\"../data/flare.json\", function(error, root) {\n  if (error) throw error;\n\n  var nodes = tree.nodes(root),\n      links = tree.links(nodes);\n\n  var link = svg.selectAll(\".link\")\n      .data(links)\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", diagonal);\n\n  var node = svg.selectAll(\".node\")\n      .data(nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"rotate(\" + (d.x - 90) + \")translate(\" + d.y + \")\"; })\n\n  node.append(\"circle\")\n      .attr(\"r\", 4.5);\n\n  node.append(\"text\")\n      .attr(\"dy\", \".31em\")\n      .attr(\"text-anchor\", function(d) { return d.x < 180 ? \"start\" : \"end\"; })\n      .attr(\"transform\", function(d) { return d.x < 180 ? \"translate(8)\" : \"rotate(180)translate(-8)\"; })\n      .text(function(d) { return d.name; });\n});\n\nd3.select(self.frameElement).style(\"height\", diameter - 150 + \"px\");\n","_id":"MGtcVeGPNVVqfbH3"}
{"key":"PDFJS_CONVERTER_TEST","source":"colf = require('columnify');\n\nsetup_c = ()=>{\n  setContent(`\n<style>\nbody {bordder:1px solid black;padding-bottom:5px;}\n.wrap{margin: 0 5px 5px;width:auto;zdoom:.6;}\n.wrap .inner{width:100%;margin: 20px 0px 0 0px;padding: 0px 0 0 0px;}\npre{padding:5px 10px;margin:0;background:rgba(34,34,34,0.6);}\n#the-canvas{opacity:1;swidth:100%;}\n#bwrp{transform: scale(.5);}\n#alto{transform-origin: top left;\naborder: 1px dashed #9E9E9E;position:relative; background:rgba(34,134,234,0.4);sheight:1500px; margin:10px;}\n#block{apadding-left: 3px;box-shadow: 0 0 0px 1px black;overflow:hidden;awhite-space: pre;aletter-spacing: -0.1px;atext-align-last: justify;position:absolute;top:0;left:0;background:rgba(234,234,134,0.4);color:red;}\n#dno{widtha:100vw; overflow:scroll;}\n</style>\n<div id=\"alto\">\n<canvas id=\"the-canvas\"></canvas>\n<div id=\"block\">SOME</div>\n</div>\n<pre id=\"adp\"></pre>\n<div id=\"main\"></div>\n<div id=\"dno\"><pre id=\"dp\"></pre></div>`)\n\n\n  canvas = document.getElementById('the-canvas');\n  context = canvas.getContext('2d');\n\n  alto = document.getElementById('alto');\n  blk = document.getElementById('block');\n\n}\n\ndbg = function dbg(v){\n  console.log(v);\n  //debugger;\n  return v\n}\n\ndp = txt=>document.getElementById('dp').innerHTML = txt;\nadp = txt=>document.getElementById('adp').innerHTML = txt;\n\nconverter = require_c('converter/api') \n\npfile = \"/Users/rainerg/work/ideals/_BLOCKS/2011-D3-InfoVis.pdf\";\n//pfile = \"/Users/rainerg/work/ideals/_BLOCKS/1128882.pdf\";\n//pfile = \"/Users/rainerg/work/ideals/_TESTFILES/input_pdfs/790604.pdf\";\n//pfile = \"/Users/rainerg/work/ideals/_TESTFILES/prod_test/236704.pdf\";\n//pfile = \"/Users/rainerg/work/ideals/_TESTFILES/prod_test/180736.pdf\";\n//pfile = \"/Users/rainerg/work/ideals/_TESTFILES/prod_test/1816213.pdf\";\n//pfile = \"/Users/rainerg/work/ideals/5000_pdfs/rest_pdfs/662645.pdf\";\n//pfile = \"/Users/rainerg/work/ideals/_stage_res/55019.pdf\";\npfile = \"/Users/rainerg/Documents/Printable_Grids/Cross-stitch_22_Lines_per_Division.pdf\";\npfile = \"/Users/rainerg/Downloads/Calendars/print_pages/penmanship-portrait-A4-5.pdf\";\n\nfnm = path.basename(pfile,'.pdf');\n\np_rl = \"/Users/rainerg/work/ideals/_BLOCKS/result_\"+fnm+\"/root.blocks\";\np_bl = \"/Users/rainerg/work/ideals/_BLOCKS/result_\"+fnm+\"/texts.blocks\";\np_bl_j = \"/Users/rainerg/work/ideals/_BLOCKS/result_\"+fnm+\"/texts.blocks.json\";\np_p0 = \"/Users/rainerg/work/ideals/_BLOCKS/result_\"+fnm+\"/page0.blocks\";\n\n\nvd_res = (result)=>{\n  console.log('REGENERATE',result)\n  results = result;\n  return colf(result.items)\n  //return van_dump(result)\n}\n\nif(!window.canvas)\n  setup_c();\n\nif(!window.results){\n  pdoc = converter.DocPDF.getDocument(pfile)\n  pdoc.scale=4\n  pdoc.pnum =1\n  txts = pdoc.getTEST(canvas)\n\n  txts\n    .then(vd_res)\n    .then(dp)\n}\n\nshow_letter = ({ltr, width, height, fontName, transform},viewport)=>{\n  blk.innerHTML = ltr//'<span>'+ltr+'</span>';\n  let shift = 3*viewport.scale;\n  blk.style.width = viewport.scale*width+'px';\n  blk.style.height = shift + height+'px'; \n  blk.style.fontFamily = String(fontName)//fontFamily;//\n  blk.style.fontSize = .995*height+'px'; \n  blk.style.lineHeight = shift + height+'px'; \n  blk.style.transformOrigin = '0 0 0';\n  blk.style.transform = 'matrix(' + transform.join(', ') + ')';\n\n}\n\nshow_text = ()=>{}\n\nm=window.m||0;\nn=window.n||0;\n\ntransform_no_scale = (t)=>[...t.slice(0, 4).map(v=>v/Math.abs(v) || 0), ...t.slice(4, 6)]\nget_height = (t)=>Math.sqrt(Math.abs(t[0]*t[3]))+Math.sqrt(Math.abs(t[1]*t[2]))\n\nif(1 && window.results && window.results.items.length){\n\n\n  lc = window.t_item_res && t_item_res.str.length || 1;\n  c = results.items.length;\n\n  m++;\n  if(m>=lc)n++;\n  n=n%c;\n  m=m%lc;\n  //n=0;m=0;\n\n  let item = _.clone(results.items[n]);\n  t_item_res = item;\n\n  let height = get_height(item.t);\n  let transform = item.t;\n  transform = transform_no_scale(transform);\n  let shiftM = [1, 0, 0, 1, (item.x[m])*results.viewport.scale, -height ];\n  transform = converter.PUtil.transform(transform, shiftM);\n\n\n  let ltr = {\n    ltr: item.str[m],\n    width: (item.x[m+1]-item.x[m]), \n    height, \n    fontName: item.fontName,\n    transform\n  }\n  //console.log(n,m,ltr);\n  show_letter(ltr, results.viewport);\n\n}\n\n\n","_id":"NTN06VgxjRlxBoHL"}
{"key":"grabfocus-test","source":"\tjust.setName(warr[w.id])\n\tjustShowResult('<b style=\"color:green;\">'+w.id +' : '+ warr[w.id]+'</b>', true)","_id":"O63tOkKyVEdXkDfY"}
{"key":"VIDEO_CAPTURE","source":"desktopCapturer = require('electron').desktopCapturer\n\nsetContent('<video autoplay></video>')\ndesktopCapturer.getSources({types: ['window', 'screen']}, (error, sources) => {\n  \n  if (error) throw error\n  console.table(sources)\n  \n  navigator.webkitGetUserMedia({\n        audio: false,\n        video: {\n          mandatory: {\n            chromeMediaSource: 'desktop',\n            chromeMediaSourceId: sources[13].id,\n            minWidth: 1280,\n            maxWidth: 1280,\n            minHeight: 720,\n            maxHeight: 720\n          }\n        }\n      }, handleStream, handleError)\n  \n  for (let i = 0; i < sources.length; ++i) {\n    if (sources[i].name === 'Electron') {\n      \n      return\n    }\n  }\n  \n})\n\nfunction handleStream (stream) {\n  document.querySelector('video').src = URL.createObjectURL(stream)\n}\n\nfunction handleError (e) {\n  console.log(e)\n}\n\n\n","_id":"OgcFb6byYuwTp0sl"}
{"key":"fulloverlay","source":"\nq = !(typeof q == 'boolean') || !q\ncw.setIgnoreMouseEvents(true)\ncw.setAlwaysOnTop(true)\ncw.setPosition(0, 0)\ncw.setSize(screen.width, screen.height)\ncw.setVisibleOnAllWorkspaces(true)\ninf = function(w){\n  var b = w.object.getBounds()\n  return `<sup>x${b.x}</sup><sub>y${b.y}</sub>W${b.width}H${b.height}`  \n}\n//rgba(30,233,99,1)\n\ncomputeXY = function(w){\n  cb = w.object.getBounds()\n  if(cb.y<50){\n     cb.y=50;\n  }\n  return {top: cb.y-21+'px',\n          left: cb.x+'px',\n          width: cb.width+'px',\n          height: (cb.height+'px')\n         }\n}\n\n\ntpl = jade.compile(`\nmixin winitem(b)\n  - if(b.y < 50) b.y = 50;  \n  - xywh = {top: (b.y-21)+\"px\", left: b.x+\"px\", width: b.width+\"px\", height:20+\"px\"}\n  .wxyp.file(style=xywh)\n     block\n\nstyle\n  :stylus\n    body\n      background: rgba(22, 22, 22, .0)\n      opacity: .85\n      \n    .wxyp\n      position: absolute\n      background: none\n      color: yellowgreen\n      border-top: 1px dashed yellowgreen\n      border-left: 1px dashed yellow\n      border-right: 1px dashed yellowgreen\n      border-bottom: 1px dashed yellowgreen\n      padding-left: 5px\n      background: none\n    .dblrow    \n      //background: #607D8B\n      font-family: monospace;\n      display: inline-block\n      line-height: 1em\n      position: relative;\n\n      & .sub, & .sup\n        display: block;  \n        position: relative;\n        top: -0.65em;\n        font-size: 0.75em;\n        line-height: 0;\n        margin: 0 2px;\n      \n      & .sub\n        top: 0.25em;\n\n\n.dd\n  - each w in windows\n    - b = w.object.getBounds()\n    - y = b.y - 21\n    //- if(y < 22) y = 22; \n\n    - xywh = {top: y+\"px\", left: b.x+\"px\", width: b.width+\"px\", height:b.height+20+\"px\"}\n    .wxyp.file(style=xywh)\n       span.icon.icon-cd \n       span.icon.icon-text  #{w.name}\n       .pull-right \n        span.icon.icon-info.icon-text  #{w.object.id} \n        .dblrow  \n          .sup x#{b.x}\n          .sub y#{b.y}\n        .dblrow \n          .sup w#{b.width}\n          .sub h#{b.height}\n    //.ii xyi \n.aa Ʌspirin v0.1.3\n`);\n\nfunction render(){\n  txt = tpl(windowManager)\n  setContent(txt)\n}\nrender();\nwindow.ri=window.ri||0;\nif(ri) clearInterval(ri);\nri = setInterval(render, 100)\n//render()","_id":"PM4UvPacDSHy6z67"}
{"key":"min_5","source":"CodeMirror = require('codemirror');\nrequire('codemirror/addon/fold/foldcode');\nrequire('codemirror/addon/fold/foldgutter');\nrequire('codemirror/addon/fold/brace-fold');\nrequire('codemirror/addon/fold/xml-fold');\nrequire('codemirror/addon/fold/markdown-fold');\nrequire('codemirror/addon/fold/comment-fold');\nrequire('codemirror/mode/javascript/javascript');\nrequire('codemirror/mode/xml/xml');\nrequire('codemirror/mode/markdown/markdown');\n\nq = !(typeof q == 'boolean') || !q\n//cw.setIgnoreMouseEvents(!true)\n//cw.setPosition(0, 20)\ncw.setSize(600, 400)//screen.height)\n\nwn = 0\ntpl = jade.compile(`\nlink(href='../node_modules/codemirror/lib/codemirror.css', rel='stylesheet')\nlink(href='../node_modules/codemirror/theme/lesser-dark.css', rel='stylesheet')\nlink(href='../node_modules/codemirror/addon/fold/foldgutter.css', rel='stylesheet')\n\nstyle\n  :stylus\n    .aa\n      font-size: 30px\n    body\n      background: #333\n    .dd\n      widdth: 200px\n      padding: 0 10px\n    #code-markdown\n      widdth: 10%\n      height: 10em\n.dd \n  textarea#code-markdown\n\n.aa ∆spirin Ʌspirin ⅄spirin ${screen} ddd\n`);\n\n \ntxt = tpl()\nsetContent(txt)\n\nte_markdown = document.getElementById(\"code-markdown\");\nte_markdown.value = \"# Foo\\n## Bar\\n\\nblah blah\\n\\n## Baz\\n\\nblah blah\\n\\n# Quux\\n\\nblah blah\\n\"\n\neditor_markdown = CodeMirror.fromTextArea(te_markdown, {\n    mode: \"markdown\",\n    lineNumbers: true,\n    lineWrapping: true,\n    extraKeys: {\"Ctrl-Q\": function(cm){ cm.foldCode(cm.getCursor()); }},\n    foldGutter: true,\n    gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\"]\n  });\n\n\n\n","_id":"SOj9zCA6or0oTPTa"}
{"key":"init","source":"\njustShowResult(van_dump(cw.getBounds()))\n","_id":"SPAGZ2lckr5CC7mF"}
{"key":"PDFJS_VIEW","source":"colf = require('columnify');\n\nPDFJS = require('pdfjs-dist');\nPDFJS.workerSrc = require.resolve('pdfjs-dist/build/pdf.worker');\n\npfile = \"/Users/rainerg/work/ideals/5000_pdfs/1128882.pdf\";\n\nsetContent(`\n<style>\npre{padding:5px 10px;background:rgba(34,34,34,0.6);}\n#the-canvass{width:100%;}\n#dpi{zoom:.5;}\n#alto{background:rgba(34,134,234,0.4);height:500px;}\n#block{background:#aaa;width:100px;height:100px;}\n</style>\n<div id=\"alto\">\n<div id=\"block\">SOME</div>\n</div>\n<pre id=\"adp\"></pre>\n<div id=\"main\"><canvas id=\"the-canvas\"></canvas></div>\n<div id=\"dno\"><pre id=\"dp\"></pre></div>`)\n\ndp = txt=>document.getElementById('dp').innerHTML = txt;\nadp = txt=>document.getElementById('adp').innerHTML = txt;\n\ncanvas = document.getElementById('the-canvas');\ncontext = canvas.getContext('2d');\n\n_f = {\n  vp:{},\n  mxs:null,\n  test_matrix(mx){\n    let cmx = mx[0];\n    \n    adp(van_dump(cmx))\n    //document.getElementById('block')\n      //.setAttribute('transform', cmx[0]);\n    //.style.transform = _f.mxs[0][0];\n  },\n  doc (pdf){\n    //Array(pdf.numPages).fill().map()\n    //debugger\n    pdf.getPage(1)\n      .then(_f.render)\n    //.then(_f.pageTexts)\n  },\n  render(page){\n    var scale = 1;\n    var viewport = page.getViewport(scale);\n\n    _f.vp = viewport;\n    _f.pageOplist(page)\n    _f.pageTexts(page)\n\n   \n    //dp(van_dump(viewport));\n    canvas.height = viewport.height;\n    canvas.width = viewport.width;\n\n    var renderContext = {\n      canvasContext: context,\n      viewport: viewport\n    };\n    page.render(renderContext);\n\n  },\n  pageOplist (page){\n    page.getOperatorList()\n      .then(opList=>{\n      adp('aaa')\n    })\n  },\n  pageTexts (page){\n    page\n      .getTextContent({normalizeWhitespace: true})\n      .then(_f.text)\n      .then(_f.test_matrix);\n    \n  },\n  text(text){\n    _f.txts = text;\n    let out = text.items.map(\n      textItem=>PDFJS.PDFJS.Util.transform(\n        PDFJS.PDFJS.Util.transform(_f.vp.transform, textItem.transform),\n        [1, 0, 0, -1, 0, 0])\n    ).map(v=>['matrix(' + v.join(', ') + ')',...v]);\n    _f.mxs = out;\n    //let txt = colf(text.items);\n    dp('---//\\n'+colf(out))\n    //debugger\n    return out\n  }\n};\n\n\n\nPDFJS.getDocument(pfile).then(_f.doc)\n\n\n\n\n\n\n\n","_id":"SyD5H3Tv77ov1N5c"}
{"key":"ksave","source":"if(just.name){\n\tKnows.save(just.name, editor.getValue())\n  if(w = getWin(just.name)){\n  \tw.execute(\"Knows.run('\"+just.name+\"')\")\n  \tjustShowResult('<b style=\"color:green;\">Saved and Updated window \"'+just.name+'\"</b>', true)\n  } \n}else{\n  just.run('add');\n}\n\n","_id":"TqjUpnaDV4qjE7yy"}
{"key":"editor","source":"aa1 = 'a0a0a'\nKnows.run('grabfocus')\n\n//justShowResult('-')\n//cb = cw.getBounds()\n//justShowResult(`x=${cb.x} y=${cb.y} width=${cb.width} height=${cb.height} `)\n//syncSizeLines()","_id":"URTolNNsRssn4zUP"}
{"key":"grabfocus","source":"warr = _(windowManager.windows)\n  .chain()\n  .map(function(v,k){return [v.object.id, k]})\n\t.object()\n\t.value()\n\nelName = document.querySelector('.justName');\nelName.onclick = function(){\n  document.querySelector('.header-text').classList.remove('yellow')\n  document.querySelector('.header-text').classList.add('waiting')\n  \n  remote.app.once('browser-window-focus', function(e1, w1){\n    document.querySelector('.header-text').classList.remove('waiting')\n\t  document.querySelector('.header-text').classList.add('yellow')\n    window.w=w1\n    window.e=e1\n    Knows.run('grabfocus-test')\n  });\n}\n\n\n\n","_id":"Uv7SkxzsTQXl5Z6l"}
{"key":"isotop_btn","source":"clss = 'btn btn-mini btn-isotop'; \nsd = document.getElementById('isotop');\nsd.className = clss\n//---\n\n\n// just text\n//q= 'Hello 1 word. Sentence number 2.';\nsd.classList.toggle('active');\n\n\nq = editor.getValue();\neditor.setValue(`clss = '${sd.className}'; \n` + q.substr(q.split('\\n',1)[0].length+1, q.length))\n","_id":"W8NMvDxYPirTW3ps"}
{"key":"toggletop","source":"_(windowManager.windows)\n  .reduce(function(memo, v, k, i){\n  \tv.execute(\"just.run('top');\"); \n  \tvar row = memo.length-1+memo[memo.length-1].length/70|0;\n  \tif(!memo[row])memo[row]='';\n  \t//memo[row] = memo[row]+' L'+ memo[row].length +'R'+row+'&'+k;\n  \tmemo[row] += ' #'+k;\n    return memo\n\t},['']).join('\\n')\n","_id":"XecKL7EzLILByK6J"}
{"key":"matrix1_funcList","source":"cw.setBounds({\"x\": 670,\"y\": 585, \"width\": 500, \"height\": 350}, true);\ncw.setAlwaysOnTop(!true)\ntpl = jade.compileFile('./matrix/functions_list.jade');\ntxt = tpl({name:'matrix_test_1'})\nsetContent(txt);\npreout = document.getElementById('preout');\n\nfns = [];\nfuncClass = {};\nout = [];\n\nsss = (err, docs)=>{\n  \n  out = docs.map(d=>({key:d.key, source:d.source}))\n  \n  funcClass = out.reduce((pv,cv,ci)=>{\n    pv[cv.key] = new Function('data', cv.source);\n    return pv;\n  },{})\n  windowManager.sharedData.set('funcClass', funcClass);  \n\n  \n  fns = _.functions(funcClass).map(fname=>fname.split('y').reduce((memo, val)=>{\n    if(val.charAt(0)=='x'){\n      memo.x = 1*val.substr(1);\n    }else{\n      memo.y = 1*val}\n    return memo\n  },{name:fname, src: String(funcClass[fname])})) //!!!!!!!!\n\n  windowManager.sharedData.set('matrixFunc', fns);  \n  aaa(0, docs)\n  //preout.innerHTML = van_dump(fns);\n\n}\nMatrix.getDb().find({ key: { $exists: true } }).sort({key:1}).exec(sss)\n\n\n\ntestQuant = {\n  speed:{\n    x:1,\n    y:0\n  },\n  x:0,\n  y:0\n};\n\n//preout.innerHTML = van_dump(testQuant);\n\n\n//document.body.style.background = 'ghostwhite'\nopenEditor = function (key){\n  //createMin(key).execute(`Knows.run('${key}')`);\n\tcreateEditor('editor_'+key, 'editMatrixFunc', key)\n}\n\n\nfunction aaa (err, docs) {\n  //justShowResult(_.zip(_(docs).pluck('key'),_(docs).pluck('source')).join('\\n--\\n'))\n  //console.log(docs) \n  //return\n  var list = _(docs).chain()\n\t.map(function(v,k){\n    return `<span class=\"nav-group-item knows-item\">\n<span class=\"icon icon-tools\" onclick=\"openEditor('${v.key}')\"></span>\n<span class=\"icon icon-play\" onclick=\"runCode('${v.key}')\"></span>\n${v.key}</span>`;})\n  .value().join('\\n');\n  \n  document.getElementById('content')\n    .innerHTML = `<style>\n.knows-item {margin:2px 0; background: #ddd; padding: 2px 10px 2px 5px;}\n.knows-item .icon {color: #009EBD;}\n</style>\n<nav class=\"nav-group\" \nstyle=\"overflow: scroll;\">${list}</nav>`\n\n}\n\n\n","_id":"Z0JOQ4BLqFvcsD8i"}
{"key":"load","source":"createBrowser('http://google.com')\n\n","_id":"ZcmxyEhVLwbKTPpH"}
{"key":"ALL_WINDOW_SCROLL","source":"if(window.log)\n  document.body.removeEventListener(\"mousewheel\",log);\ndocument.querySelector('.boz-header').innerText = 'AWS'\ndocument.body.style.background = 'red';\n//{x: 1206, y: 345, width: 320, height: 43}\n//cw.setSize(200,200);\n//cw.setPosition(1370,40)\ncw.setAlwaysOnTop(true);\n//cw.setIgnoreMouseEvents(!true);\n//WM = remote.require('electron-window-manager');\nlog = (e)=>{\n\n  let {deltaX, deltaY} = e;\n//  let out = JSON.stringify({deltaX, deltaY},null,2);\n  let out = `deltaX = ${deltaX},<br/>deltaY = ${deltaY}`;\n  \n  exw = [\"ALL_WINDOW_SCROLL\", \"codeList\", \"showCodeList\", \"toolbar\", \"listknows\", \"showTime\", \"fulloverlay\"];\n\n  warr = _(remote.getGlobal('getAllWin')())\n    .chain()\n    .filter(w=>!exw.includes(w))\n    .map(w=>windowManager.get(w))\n    .each(function(w){\n      let [wx,wy] = w.object.getPosition();\n      w.object.setPosition(wx - deltaX, wy - deltaY);\n    })\n\n\n\n\n  setContent(out);\n};\n\n//document\n\ndocument.body.addEventListener(\"mousewheel\", log, false);","_id":"avkouOFtMLeVmPz3"}
{"key":"0_DNO","source":"\ndno = DNO.open('dno')\nout = van_dump(dno.rawData())\n\nsetContent('<pre>'+out+'</pre>')","_id":"bHfnZldtwVwqVJyK"}
{"key":"matrix1","source":"cw.setBounds({\"x\": 830,\"y\": 60, \"width\": 500, \"height\": 350}, true);\ncw.setAlwaysOnTop(!true)\ntpl = jade.compileFile('./matrix/tpl.jade');\ntxt = tpl({name:'matrix_test_1'})\nsetContent(txt);\npreout = document.getElementById('preout');\nqcount = document.getElementById('qcount');\nfuncClass = {};\nif(typeof quants === 'undefined')quants = [];\n//quants = [];\n\ntestQuant = {\n  speed:{\n    x:1,\n    y:0\n  },\n  x:0,\n  y:5,\n  data:'ABC'\n};\n\nloadFunc = (e,docs)=>{\n\n  out = docs.map(d=>({key:d.key, source:d.source}))\n\n  funcClass = out.reduce((pv,cv,ci)=>{\n    pv[cv.key] = new Function('data', cv.source);\n    return pv;\n  },{})\n  windowManager.sharedData.set('funcClass', funcClass);  \n\n\n  fns = _.functions(funcClass).map(fname=>fname.split('y').reduce((memo, val)=>{\n    if(val.charAt(0)=='x'){\n      memo.x = 1*val.substr(1);\n    }else{\n      memo.y = 1*val}\n    return memo\n  },{name:fname, src: String(funcClass[fname])})) //!!!!!!!!\n\n  windowManager.sharedData.set('matrixFunc', fns);  \n\n  //preout.innerHTML = van_dump(fns);\n\n}\n\ncalculate = q => {\n  //console.log(q)\n  var qq = q;\n  Object.keys(q.speed).forEach(k=>q[k] += q.speed[k])\n  if(0==(qq.x = q.x%67))qq.y++;\n  //qq.y = qq.y%42\n\n  var fname = `x${q.x}y${q.y}`;\n\n  if(funcClass.hasOwnProperty(fname)){\n    funcClass[fname].apply(qq,[qq.data]);\n  }\n\n\n\n}\n\n//preout.innerHTML = van_dump(calculate(testQuant))\n\nstartrun = function(){\n  //funcClass = _.clone(windowManager.sharedData.fetch('funcClass'));\n  quants.forEach(calculate)\n  windowManager.sharedData.set('quants', quants);\n  preout.innerHTML = van_dump(quants);\n  qcount.innerHTML = quants.length;\n}\n\nif(typeof onlyOneLoop === 'undefined')onlyOneLoop = false;\n\nclrint = function(){\n  clearInterval(onlyOneLoop);\n}\nclrint();\n\nreset = function(){\n  Matrix.getDb().find({ key: { $exists: true } }).sort({key:1}).exec(loadFunc)\n  quants = [];\n}\n\nsettmr = function(){\n  tme = document.getElementById('mtimeout').selectedOptions[0].value;\n  clearInterval(onlyOneLoop);\n  onlyOneLoop = setInterval(startrun,tme);\n}\n\n//settmr();\n//startrun()\ndocument.getElementById('mquantadd').onclick = ()=>{\n  quants.push(JSON.parse(JSON.stringify(testQuant)));\n  //quants.push(_.extend(_.clone(testQuant), {x:3}));\n  windowManager.sharedData.set('quants', quants);\n}\ndocument.getElementById('mreload').onclick = reset;\ndocument.getElementById('mrun').onclick = settmr;\ndocument.getElementById('mstep').onclick = ()=>{clrint();startrun();};\n\ndocument.getElementById('mpause').onclick = clrint;\n\nmwname = 'matrix1_view';\ndocument.getElementById('mview').onclick = \n  ()=>giveWin(mwname).execute(`Knows.run('${mwname}')`);\n\n\n\n\n","_id":"bqlFMJjvGG8dry5d"}
{"key":"dnoList","source":"dno = DNO.open('dno');\n\nopenEditor = key => createEditor('editor_' + key)\n  .execute(`DNO.open('dno').run('openInEditor', {key:'${key}'});`);\n\nopenWindow = key => createMin(key)\n  .execute(`DNO.open('dno').run('${key}', {key:'${key}'});`);\n\nrunCode = key => dno.run(key);\n\ndocument.querySelector('.boz-header').innerText = 'List of Dno\\'s'\n\n//runpart\nrender = (err, docs) => {\n    var list = _(docs).chain()\n        .map(function (v, k) {\n            return `<span class=\"nav-group-item knows-item\">\n<span class=\"icon icon-tools\" onclick=\"openEditor('${v.key}')\"></span>\n<span class=\"icon icon-publish\" onclick=\"openWindow('${v.key}')\"></span>\n<span class=\"icon icon-play\" onclick=\"runCode('${v.key}')\"> </span>\n${v.key}</span>`;\n        })\n        .value().join('\\n');\n\n    document.getElementById('content')\n        .innerHTML = `<style>\n.knows-item {font-size:12px; margin:2px 0; background: #ddd; padding: 2px 10px 2px 5px;}\n.knows-item .icon {margin-right: 3px; color: #009EBD;}\n.knows-item .icon.icon-publish{margin-right: 0px; color: #009EBD;}\n</style>\n<nav class=\"nav-group\" \nstyle=\"overflow: scroll;\">${list}</nav>`\n\n}\n\n\ndno\n  .db\n  .find({key: {$exists: true}})\n  .sort({key: 1})\n  .exec(render)\n\n","_id":"c0ISgvpkymwwCGHb"}
{"key":"inp666","source":"const electron = require('electron');\nconst remote = electron.remote;\nconst BrowserWindow = remote.BrowserWindow;\nconst clipboard = require('electron').clipboard;\n\n\nvar mainWindow;\n\n\nvar electronScreen = electron.screen;\nvar size = electronScreen.getPrimaryDisplay().workAreaSize;\n\nvar url = '/Users/rainerg/lab/_exp/electron/electron-sample-apps/file-explorer/test.js';\n\nmainWindow = new BrowserWindow({ \n  width: size.width, \n  height: size.height,\n  x:0, \n  y:0,\n  transparent:true,\n  webSecurity: false\n});\n\nvar html = `\n<script type=\"text/javascript\" src=\"${url}\"></script>\n<h1>${url}</h1>` ;\nhtml += '<pre>'+JSON.stringify(size)+'<pre/>';\n\n//mainWindow.openDevTools();\n\n//mainWindow.loadURL(\"data:text/html;charset=utf-8,\" + encodeURI(html)); \n\nmainWindow.loadUrl('file://' + __dirname + '/exec.html');\nmainWindow.webContents.on(\"did-finish-load\", function() {\n\tmainWindow.webContents.executeJavaScript(`setScript(\"${url}\");`);\n});\n","_id":"cNSCSfnNCwY2BAMm"}
{"key":"toolbar_scroll_sin_cos","source":"if(window._mWheelHandler)\n  document.body.removeEventListener(\"mousewheel\",window._mWheelHandler);\n\ndocument.querySelector('.boz-header').innerText = 'AWS'\ndocument.body.style.background = 'orange';\ncw.setSize(100,100);\ncw.setPosition(1370,40)\n\nvar dx=0;\nvar dy=0;\n\nwindow._mWheelHandler_FAST = (e)=>{\n  let {deltaX, deltaY} = e;\n  dx+=-deltaX;\n  dy+=-deltaY;\n  window._mWheelHandler();\n}\n\nwindow._mWheelHandler = _.throttle(()=>{\n  let scw = screen.width/2;\n  let sch = screen.height/2;\n\n  let out = `deltaX = ${dx},<br/>deltaY = ${dy}`;\n  setContent(out);\n  exw = [windowManager.getCurrent().name,\n         \"ALL_WINDOW_SCROLL\", \n         \"toolbar_scroll_sin_cos\",\n         //\"codeList\", \n         \"showCodeList\",\n         'toolbar_scroll_handler',\n         \"toolbar\", \n         //\"listknows\", \n         \"showTime\", \n         \"fulloverlay\"];\n\n  warr = _(remote.getGlobal('getAllWin')())\n    .chain()\n    .filter(w=>!exw.includes(w))\n    .map(w=>windowManager.get(w))\n    .map(function(w){\n    let {x, y, width, height} = w.object.getBounds();\n    //let xq = (Math.cos(1+Math.abs(x + width/2 - scw)))|0;\n    //let yq = (Math.cos(1+Math.abs(y + height/2 - sch)))|0;\n    //x = - 2000 + (x+2000)%5000;\n    //y = - 2000 + (y+2000)%5000;\n    x +=dx;\n    y +=dy;\n    \n    //let xq = 1+Math.sin(4*scw/((x + width/2)%(scw*2) - scw));\n    //let yq = 1+Math.sin(4*sch/((y + height/2)%(sch*2) - sch));\n\n    //let a = {x, y, width, height, xq, yq};\n    //return [dx,dy];\n    //justShowResult(van_dump(a))\n    //((x - dx*xq)|0), ((y - dy*yq)|0)\n    \n    w.object.setPosition(x,y);\n  })\n  dx=0;\n  dy=0;\n  //.value();\n  //justShowResult(colf(warr))\n  //return false;\n\n},0);\n\ndocument.body.addEventListener(\"mousewheel\", window._mWheelHandler_FAST, false);\n\n\n\n","_id":"eUu4LjmqiQ81TfGj"}
{"key":"PDFJS_SVG","source":"colf = require('columnify');\n\nPDFJS = require('pdfjs-dist');\nPDFJS.workerSrc = require.resolve('pdfjs-dist/build/pdf.worker');\n\nPAGE_NUMBER = 1;\nPAGE_SCALE = 1;\nSVG_NS = 'http://www.w3.org/2000/svg';\npfile = \"/Users/rainerg/work/ideals/5000_pdfs/1128882.pdf\";\n\nsetContent(`\n<style>\npre{padding:5px 10px;background:rgba(34,34,34,0.6);}\n#the-canvass{width:100%;}\n#alto{background:rgba(234,234,234,0.6);display: inline-block; border: solid 1px black;}\n</style>\n<div id=\"alto\"></div>\n<div id=\"main\"><canvas id=\"the-canvas\"></canvas></div>\n<pre id=\"dp\"></pre>`)\n\nfunction buildSVG(viewport, textContent) {\n  // Building SVG with size of the viewport (for simplicity)\n  var svg = document.createElementNS(SVG_NS, 'svg:svg');\n  svg.setAttribute('width', viewport.width + 'px');\n  svg.setAttribute('height', viewport.height + 'px');\n  // items are transformed to have 1px font size\n  svg.setAttribute('font-size', 1);\n\n  // processing all items\n  textContent.items.forEach(function (textItem) {\n    // we have to take in account viewport transform, which includes scale,\n    // rotation and Y-axis flip, and not forgetting to flip text.\n    var tx = PDFJS.PDFJS.Util.transform(\n      PDFJS.PDFJS.Util.transform(viewport.transform, textItem.transform),\n      [1, 0, 0, -1, 0, 0]);\n    var style = textContent.styles[textItem.fontName];\n    // adding text element\n    var text = document.createElementNS(SVG_NS, 'svg:text');\n    text.setAttribute('transform', 'matrix(' + tx.join(' ') + ')');\n    text.setAttribute('font-family', style.fontFamily);\n    text.textContent = textItem.str;\n    svg.appendChild(text);\n  });\n  return svg;\n}\n\nfunction pageLoaded() {\n  // Loading document and page text content\n  PDFJS.getDocument(pfile).then(function (pdfDocument) {\n    pdfDocument.getPage(PAGE_NUMBER).then(function (page) {\n      var viewport = page.getViewport(PAGE_SCALE);\n      page.getTextContent().then(function (textContent) {\n        // building SVG and adding that to the DOM\n        var svg = buildSVG(viewport, textContent);\n        document.getElementById('alto').appendChild(svg);\n      });\n    });\n  });\n}\npageLoaded();","_id":"elfMfzpTWQPI2TlZ"}
{"key":"showCodeList","source":"let pdbounds = require('electron').remote.screen.getPrimaryDisplay().workArea;  \nlet name = 'codeList';\nlet dw = giveWindow(name);\nlet w = dw.object;\nlet onTop = w.isAlwaysOnTop();\ndw.execute(`Knows.run('${name}')`)\n\nlet [width, height, marginRight, marginBottom] = [180, 300, 20, 20];\n\nlet x = pdbounds.width - width - marginRight;\nlet y = pdbounds.height - height - marginBottom;\n\nw.setAlwaysOnTop(true);\nw.setVisibleOnAllWorkspaces(true);\nw.focus();\nw.setBounds({\n  x,\n  y,\n  width,\n  height,\n}, true);\nw.setAlwaysOnTop(onTop);\nw.setVisibleOnAllWorkspaces(false);\n","_id":"fVZ50SGEvIWztoA5"}
{"key":"bozon","source":"\ndocument.getElementById('source').innerText = 'bozontest'\n\n","_id":"gJmK1r1aGMhyyOeX"}
{"key":"idnames","source":"\na = _(windowManager.windows)\n  .chain()\n  .map(function(v,k){return [v.object.id, k]})\n\t.object()\n\t.value()\nsetContent('aa')\n","_id":"gQ5ORe5L8NTKiQ3q"}
{"key":"splash_banner_timer","source":"window.mm = 5;\nvar msg = 'Прошло \\'+m.toNow(true)+\\'!<pre>\\'+(moment().diff(cm)/1000).toFixed(1)+\\'s</pre>'\nvar jscode = [`\nvar moment = moment || require('moment');\nmoment.locale('ru'); var cm = moment();\nvar m = moment().subtract(${mm},'minutes');\ndocument.querySelector('.boz-header').innerHTML = 'TIMEOUT:('+(moment().diff(m)/1000).toFixed(1)+') '+ m.format('H:mm:ss a, dddd');\nvar gettime = ()=>'Сейчас '+ moment().format('[<b>]H:mm:ss[</b>] a, dddd,[<br/>] D MMMM Y');\nvar t = '<style>';\nt += 'body{background:none;zoom: 0.68;} .boz-header{background:#2e2e2e;}';\nt += '@keyframes blinker {50% { opacity: 0; }}';\nt += '.flsh{animation: blinker .8s ease 0s 3 running; }';\nt += '#content{background:#ff5722;width:100%}';\nt += '.msg{font-size:3.8em; letter-spacing: -1.5pt; text-align: center; color: white; margin:0.5rem 0;}';\nt += '.msg #msg-text{color:#ff5722; background:beige;}';\nt += '.msg #msg-text pre{margin:5pt 0; font-size:20pt;}';\nt += '.msg-time{color: #eee; font-size: 18pt; text-align: center;margin: 0;font-weight: 600;text-rendering: geometricPrecision;letter-spacing: 3pt;}';\nt += '.msg-time b {color: #fff;font-size: 22pt;';\nt += '</style>';\nt += '<div class=\"msg\"><span id=\"msg-text\">${msg}</span></div>';\nt += '<h2 class=\"msg-time\">'+gettime()+'</h2>';\nsetContent(t);\nwindow.prevIntervals && prevIntervals.forEach(v=>clearInterval(v))\nvar ready = ()=>{\n  setTimeout(()=>document.querySelector('#content').classList.add('flsh'), 150);\n  setTimeout(()=>document.querySelector('#content').classList.remove('flsh'), 2500);\n  prevIntervals = [\n    setInterval(()=>document.querySelector('.msg-time').innerHTML = gettime(), 1000),\n    setInterval(()=>document.querySelector('#msg-text').innerHTML='${msg} ', 1000)\n  ];\n}\nready();\n`][0];\n\npdbounds = require('electron').remote.screen.getPrimaryDisplay().workArea;  \n\nwidth = 400;\nheight = 200;\nx = pdbounds.width - width - 100;\ny = pdbounds.height - height - 100;\n\nwindow.jLog = window.jLog || ((m)=>console.log(m));\nwindow.genwin = (code)=>()=>{\n  let runwin = (w)=>()=>{\n    jLog('1_'+w.object.webContents.getURL());\n    w.object.setAlwaysOnTop(true);\n    //w.object.webContents.setZoomLevel(-2);\n    //w.object.setBounds({\"x\": 1100, \"y\": 20, \"width\": 400, \"height\": 105});\n    w.object.setBounds({x, y, width, height});\n    setTimeout(()=>{\n      jLog('2_'+w.object.webContents.getURL());\n      //w.close();\n    }, 6000);\n    w.object.webContents.executeJavaScript(code);\n  }\n  setTimeout(runwin(giveWin('splash')), 300);\n};\n\n//var sw = giveWin('splash');\n//jLog('0_'+sw.object.webContents.getURL());\n\nwindow.tmt = genwin(jscode);\nwindow.run = (y=0)=>{\n  clearTimeout(window.rI);\n  if(y==2) return;\n  if(y) tmt();\n  window.rI = setTimeout(()=>run(y+1), 1000*60*(mm+y/60));\n}  \nrun();\n\n'--';\n","_id":"gjT2t7duSCuiuRJK"}
{"key":"meta","source":"sizeOf = require('image-size');\n\nwindowWidth = !window.isLoaded && 1000 || cw.getBounds().width;\n\nonce('setPos', ()=>{  \n  cw.setPosition(30, 40);\n  cw.setSize(windowWidth, screen.height/1.5|0);\n});\n\ncw.setIgnoreMouseEvents(!true)\ncw.setAlwaysOnTop(!true)\n\ncb = cw.getBounds();\n\n\nwn = 0\ntpl = jade.compile(`\nstyle\n  :stylus\n    .aa\n      font-size: 30px\n    .wrap\n      //margin-right: -40px\n\n    body\n      //background: #222\n      opacity: 1.3\n      zoom: 1\n      overvlow: hidden\n    .scre\n      width: 600px\n      //height: 100px\n    .wxyp\n      position: absolute\n      width: 100%\n      //background: rgba(30,233,99,1)\n      color: black\n      //background: #9E9E9E\n      margin: 0 5px\n      & img\n        width:100%\n      & span\n        width: 100px\n        text-overflow: ellipsis\n      \n    .dblrow    \n      //background: #607D8B\n      //font-family: monospace;\n      display: inline-block\n      line-height: 1em\n      position: relative;\n\n      & .sub, & .sup\n        display: block;  \n        position: relative;\n        top: -0.65em;\n        font-size: 0.85em;\n        line-height: 0;\n        margin: 0 2px;\n      \n      & .sub\n        top: 0.35em;\n\n.dd\n  - each f in files\n    .wxyp.file(style=\"top:#{wn}px; left:#{0}px;\")\n      img.scre(src=\"#{f.fullpath}\")\n      span.icon.icon-cd.icon-text #{f.fullpath}\n      - wn = wn + (windowWidth/f.width*f.height) + 10;\n.aa ∆spirin Ʌspirin ⅄spirin ${screen} ddd\n`);\n//p = appRoot+'/Desktop/';\n\n\nimgExts =  [\".jpg\", \".png\", \".gif\", \".jpeg\", \".ico\"];\np = '/Users/rainerg/Pictures/pictures';\n//p = '/Users/rainerg/Desktop/PHOTOS_2TB';\n\n\nif(!window.isLoaded || typeof files==\"undefined\")\n  files = jetpack\n    .dir('/')\n    .find(p, { matching: '*'})\n    .slice(0, 1200)\n    .map(f=>({...path.parse('/'+f), fullpath:'/'+f}))\n    .filter(f=>imgExts.includes(f.ext.toLowerCase()))\n    .map(f=>({...f, ...sizeOf(f.fullpath)}));\n\nisLoaded = true;\n//alert(files.length)\n\nif(1){ \ntxt = tpl({files:files})\nsetContent(txt)\n}\n","_id":"gjeaod2PumiiNaHf"}
{"key":"editor_matrix1_funcList","source":"cw.setBounds({\"x\": 450,\"y\": -1060, \"width\": 700, \"height\": 700}, true);\ncw.setAlwaysOnTop(!true)\n\ntxt = `\n<style> body {//background:#03A9F4;}</style>\n<canvas width=\"700\" height=\"450\" id=\"matrixView\" style=\"\nz-index: 1000;\nbackground: #03A9F4;;\n\"></canvas>\n<pre id='preout'>-</pre>\n`;\n\nfirstTpl = ()=>{\n  setContent(txt);\n  canvas = document.getElementById(\"matrixView\");\n  canvasWidth  = canvas.width ;\n  canvasHeight = canvas.height ;\n  ctx = canvas.getContext('2d');   \n}\nonce('templating',firstTpl)\n//////////////////////////\ndrawGrid = ()=>{\n\n  //padding around grid\n  p = 20;\n  cs = 10;\n  //grid width and height\n  bw = canvasWidth - p*2;\n  bh = canvasHeight - p*2;\n  //size of canvas\n  var cw = bw + (p*2) + 1;\n  var ch = bh + (p*2) + 1;\n\n  function drawBoard(){\n    ctx.beginPath();\n    for (var x = 0; x <= bw; x += cs) {\n      ctx.moveTo(0.5 + x + p, p);\n      ctx.lineTo(0.5 + x + p, bh + p);\n    }\n\n\n    for (var x = 0; x <= bh; x += cs) {\n      ctx.moveTo(p, 0.5 + x + p);\n      ctx.lineTo(bw + p, 0.5 + x + p);\n    }\n    ctx.closePath();\n\n    ctx.stroke();\n  }\n\n\n  drawBoard();\n}\n//once('grid',drawGrid)\npadding = 21;\n\npreout = document.getElementById('preout');\n\nrenderRect = (d)=>{\t\n  var scale = 10;\n  var x = scale * d.x + padding;\n  var y = scale * d.y + padding;\n  \n\n  ctx.fillRect(x, y, scale-1, scale-1);\n  ctx.font = \"24px Arial\";\n  //ctx.fillText(d.x+' '+d.y, x, y);\n}\nrenderCircle = (d)=>{\n  var scale = 10;\n  var x = scale * d.x + padding+4;\n  var y = scale * d.y + padding+4;\n\n  ctx.beginPath();\n  ctx.arc(x, y, 3, 0, Math.PI*2, true); \n  ctx.closePath();\n  ctx.fill(); \n  //ctx.stroke();\n  \n}\n\nquants = windowManager.sharedData.fetch('quants');\n\nmatrixFunc = windowManager.sharedData.fetch('matrixFunc');\n\nctx.clearRect(0, 0, canvas.width, canvas.height);\n\nctx.strokeStyle = \"black\";\ndrawGrid()\nctx.stroke();\n\nctx.fillStyle=\"#FF5722\";\nmatrixFunc.forEach(renderRect)\n\nctx.fillStyle=\"white\";\nctx.strokeStyle = \"white\";\nquants.forEach(renderCircle)\n\n\n\n//fns = _.functions(matrixFunc);\n\n\npreout.innerHTML = van_dump(matrixFunc)//.map(q=>q.x+' '+q.y).join('\\n')\n\n\n","_id":"iZFqZIovJUyYSSPZ"}
{"key":"WATCH_QUANT","source":"\ndocument.querySelector('.boz-header').innerText = 'Q'\ndocument.body.style.background = 'purple';\n//{x: 1206, y: 345, width: 320, height: 43}\ncw.setSize(20,20);\n//cw.setPosition(1370,40)\ncw.setAlwaysOnTop(true);\n//cw.setIgnoreMouseEvents(!true);\n//WM = remote.require('electron-window-manager');\nrender = (e)=>{\n  let [mw,mh] = [50,60];\n  //let [mw,mh] = getWin('matrix1_view').object.getPosition();\n  let q = windowManager.sharedData.fetch('quants')[0];\n  let k = 10, l = 30;\n  cw.setPosition(l+mw+q.x*k, 20+l+mh+q.y*k);\n};\nrepeat = t => {\n  render(t); \n  requestAnimationFrame(repeat);\n}\n\nrequestAnimationFrame(repeat);\n//document\n\n//document.body.addEventListener(\"mousewheel\", log, false);\n","_id":"j0Z5B06QpwcDs5xQ"}
{"key":"matrix1_view","source":"cw.setBounds({\"x\": 50,\"y\": 60, \"width\": 700, \"height\": 780}, true);\ncw.setAlwaysOnTop(!true)\n\ntxt = `\n<style> body {background:none;}</style>\n<canvas width=\"700\" height=\"450\" id=\"matrixView\" style=\"\nz-index: 1000;\nbbackground: #03A9F4;\nbackground: rgba(3, 169, 244, 0);\n\"></canvas>\n<pre id='preout'>-</pre>\n`;\n\nfirstTpl = ()=>{\n  setContent(txt);\n  canvas = document.getElementById(\"matrixView\");\n  canvasWidth  = canvas.width ;\n  canvasHeight = canvas.height ;\n  ctx = canvas.getContext('2d');   \n}\nonce('templating',firstTpl)\n//////////////////////////\n\n\nvar BB,BBoffsetX,BBoffsetY;\n\nsetBB = ()=>{\n  BB=canvas.getBoundingClientRect();\n  BBoffsetX=BB.left;\n  BBoffsetY=BB.top;\n}\nsetBB()\n\nmclick = (xy)=>{\n\n  Knows.run('openMfuncEdit', `x${xy.x}y${xy.y}`)\n  //console.log('click',xy)\n}\n\nhoverxy = false;\n\nmhover = (xy)=>{\n  hoverxy = xy;\n  //console.log('hover',xy)\n}\n\nmcalc = (e)=>{\n  var mx=e.clientX-BBoffsetX-22;\n  var my=e.clientY-BBoffsetY-22;\n  //if(mx>=rect.x && mx<=rect.x+rect.w && my>=rect.y && my<=rect.y+rect.h){\n  return {x:mx/10|0, y:my/10|0};\n}\n\ncanvas.onmousedown = (e)=>{\n  e.preventDefault();\n  e.stopPropagation();\n  mclick(mcalc(e))\n  //}\n}\ncanvas.onmousemove = (e)=>{\n  e.preventDefault();\n  e.stopPropagation();\n  mhover(mcalc(e))\n  //}\n}\n\ndrawGrid = ()=>{\n\n  //padding around grid\n  p = 20;\n  cs = 10;\n  //grid width and height\n  bw = canvasWidth - p*2;\n  bh = canvasHeight - p*2;\n  //size of canvas\n  var cw = bw + (p*2) + 1;\n  var ch = bh + (p*2) + 1;\n\n  function drawBoard(){\n    ctx.beginPath();\n    for (var x = 0; x <= bw; x += cs) {\n      ctx.moveTo(0.5 + x + p, p);\n      ctx.lineTo(0.5 + x + p, bh + p);\n    }\n\n\n    for (var x = 0; x <= bh; x += cs) {\n      ctx.moveTo(p, 0.5 + x + p);\n      ctx.lineTo(bw + p, 0.5 + x + p);\n    }\n    ctx.closePath();\n\n    ctx.stroke();\n  }\n\n\n  drawBoard();\n}\nonce('grid',drawGrid)\npadding = 21;\n\npreout = document.getElementById('preout');\n\nrenderRect = (d)=>{\t\n  var scale = 10;\n  var x = scale * d.x + padding;\n  var y = scale * d.y + padding;\n\n\n  ctx.fillRect(x, y, scale-1, scale-1);\n  ctx.font = \"24px Arial\";\n  //ctx.fillText(d.x+' '+d.y, x, y);\n}\nrenderCircle = (d)=>{\n  var scale = 10;\n  var x = scale * d.x + padding+4;\n  var y = scale * d.y + padding+4;\n\n  ctx.beginPath();\n  ctx.arc(x, y, 3, 0, Math.PI*2, true); \n  ctx.closePath();\n  ctx.fill(); \n  //ctx.stroke();\n}\nrenderCircle2 = (d)=>{\n  ctx.fillStyle=\"grey\";\n  ctx.strokeStyle = \"white\";\n  let xy = {x:d.x-d.speed.x, y:d.y-d.speed.y}\n  renderCircle(xy)\n  let xy2 = {x:xy.x-d.speed.x*3, y:xy.y-d.speed.y*3};\n  var scale = 10;\n  var xx = scale * xy2.x + padding;\n  var yy = scale * xy2.y + padding;\n  ctx.clearRect(xx, yy, scale-1, scale-1);\n\n}\n\nrender = ()=>{\n  quants = windowManager.sharedData.fetch('quants');\n\n  matrixFunc = windowManager.sharedData.fetch('matrixFunc');\n\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n  ctx.strokeStyle = \"black\";\n  drawGrid()\n  ctx.stroke();\n\n  ctx.fillStyle=\"#FF5722\";\n  matrixFunc.forEach(renderRect)\n\n  ctx.fillStyle=\"white\";\n  ctx.strokeStyle = \"white\";\n  quants.forEach((d)=>{\n    renderCircle(d)\n    renderCircle2(d)\n  })\n\n  ctx.fillStyle=\"#cddc39\";\n  if(hoverxy)\n    renderRect(hoverxy);\n\n  //fns = _.functions(matrixFunc);\n\n  preout.innerHTML = van_dump2(quants).big()//.map(q=>q.x+' '+q.y).join('\\n')\n\n\n}\nrepeat = t => {\n  render(t); \n  requestAnimationFrame(repeat);\n}\nrequestAnimationFrame(repeat);\ncolf = require('columnify')\nfunction van_dump2(value){\n  let value2 = JSON.parse(JSON.stringify(value));\n\n  value2 = value2.map(v=>(v.speed=JSON.stringify(v.speed))&&v)\n\n\n  out = colf(value2)\n  return out; \n}\n\n\n\n\n\n\n","_id":"jLRReagFHZSXbz1g"}
{"key":"toolbar_scroll_handler","source":"if(window._mWheelHandler)\n  document.body.removeEventListener(\"mousewheel\",window._mWheelHandler);\n// document.querySelector('.boz-header').innerText = 'AWS'\n// document.body.style.background = 'red';\n//{x: 1206, y: 345, width: 320, height: 43}\n//cw.setSize(200,200);\n//cw.setPosition(1370,40)\n// cw.setAlwaysOnTop(true);\n//cw.setIgnoreMouseEvents(!true);\n//WM = remote.require('electron-window-manager');\nwindow._mWheelHandler = (e)=>{\n\n  let {deltaX, deltaY} = e;\n//  let out = JSON.stringify({deltaX, deltaY},null,2);\n  let out = `deltaX = ${deltaX},<br/>deltaY = ${deltaY}`;\n  \n  exw = [\"ALL_WINDOW_SCROLL\", \n         //\"codeList\", \n         \"showCodeList\", \n         \"toolbar\", \n         //\"listknows\", \n         \"showTime\", \n         \"fulloverlay\"];\n\n  warr = _(remote.getGlobal('getAllWin')())\n    .chain()\n    .filter(w=>!exw.includes(w))\n    .map(w=>windowManager.get(w))\n    .filter(w=>!w.object.isAlwaysOnTop())\n    .each(function(w){\n      let [wx,wy] = w.object.getPosition();\n      w.object.setPosition(wx - deltaX, wy - deltaY);\n    })\n\n};\n\n//document\n\ndocument.body.addEventListener(\"mousewheel\", window._mWheelHandler, false);\n\n\n","_id":"klIgSTexKHZYWOBD"}
{"key":"showDnoList","source":"var pdbounds = require('electron').remote.screen.getPrimaryDisplay().workArea;  \nlet name = 'dnoList';\nlet dw = giveWindow(name);\nlet w = dw.object;\nlet onTop = w.isAlwaysOnTop();\ndw.execute(`Knows.run('${name}')`)\n\nlet [width, height, marginRight, marginTop] = [160, 300, 90, 360];\n\nlet x = pdbounds.width - width - marginRight;\nlet y = pdbounds.y + marginTop;\n\nw.setAlwaysOnTop(true);\nw.setVisibleOnAllWorkspaces(true);\nw.focus();\nw.setBounds({\n  x,\n  y,\n  width,\n  height\n}, true);\nw.setAlwaysOnTop(onTop);\nw.setVisibleOnAllWorkspaces(false);\n\n\n\n\n","_id":"mwXfGEpJpLEglia5"}
{"key":"codeList","source":"//document.body.style.background = 'ghostwhite'\n//createMin(key).execute(`Knows.run('${key}')`);\n\nopenEditor = key => createEditor('editor_'+key, 'editCode', key);\n\nopenWindow = key => createMin(key)\n  .execute(`Database.run('${key}', {key:'${key}', from:'codeList'});`);\n\nrunCode = key => Database.run(key, {key, from:'codeList'});\n\n\ndocument.querySelector('.boz-header').innerText = 'codelist';\nDatabase.getDb().find({ key: { $exists: true } }).sort({key:1}).exec(function (err, docs) {\n  //justShowResult(_.zip(_(docs).pluck('key'),_(docs).pluck('source')).join('\\n--\\n'))\n  //console.log(docs) \n  //return\n  var list = _(docs).chain()\n\t.map(function(v,k){\n    return `<span class=\"nav-group-item knows-item\">\n<span class=\"icon icon-tools\" onclick=\"openEditor('${v.key}')\"></span>\n<span class=\"icon icon-publish\" onclick=\"openWindow('${v.key}')\"></span>\n<span class=\"icon icon-play\" onclick=\"runCode('${v.key}')\"></span>\n${v.key}</span>`;})\n  .value().join('\\n');\n  \n  document.getElementById('content')\n    .innerHTML = `<style>\n.knows-item {font-size:12px; margin:2px 0; background: #ddd; padding: 2px 5px 2px 5px;}\n.knows-item .icon {margin-right: 0px; color: #009EBD;}\n.knows-item .icon.icon-tools {margin-right: 3px; color: #ff5722;}\n</style>\n<nav class=\"nav-group\" \nstyle=\"overflow: scroll;\">${list}</nav>`\n\n})\n","_id":"nGblsiugAkoWhndQ"}
{"key":"PDFCONV_SHOW_TABLE","source":"data = '-none-';\nDNO.open('pdfconv').run('nedb_load_db');\n\n//cw.setSize(500,500)\ntextMode = !true;\ndocument.getElementById('isText').onclick = function(){\n  textMode = !textMode; \n  document.getElementById('isText').innerText = textMode?'[T]':'[H]';  \n  setData(data); \n}\n\n\nsetData(data)\n","_id":"nQ6dw8EgS5QeC3P2"}
{"key":"editkopen","source":"\n\njust.setName(runOptions);\n\njust.run('kedit');\n'loading...'\n\n","_id":"o8sCpP7YGONIxyPg"}
{"key":"blueprint_paper","source":"cw.setSize(500, 380, true);\ncw.setAlwaysOnTop(!true)\n\ntxt = `\n<style> body {background:#03A9F4;}</style>\n<div> ABCDEFG </div>\n<pre id='preout'></pre>\n`;\nsetContent(txt);\n/*\ntimeout=300\n_s = require(\"underscore.string\");\njw = getWin('editor_matrix1').object.webContents;\ncode = `editor.getValue()`\ncb = (result)=>{\n  src = result;\n\n\n\n  //r = '<span class=\"icnfo\">AAA</span>'\n  r = src.split('\\n\\n\\n').map(v=>`<code class=\"i\">${v}</code><hr/>`).join('')\n\n\n\n  justShowResult(r,1) \n}\njw.executeJavaScript(code, cb)\njustShowResult(r,1)\n\n*/\n\n","_id":"owasUHULQaSgIu0V"}
{"key":"dir","source":"//document.body.style.background = 'ghostwhite'\nclickitem = function (key){\n  //createMin(key).execute(`Knows.run('${key}')`);\n\tcreateEditor('editor_'+key, 'editkopen', key)\n}\n\ndocument.querySelector('.boz-header').innerText = 'dir'\nKnows.getDb().find({ key: { $exists: true } }).sort({key:1}).exec(render);// function (err, docs) {\n  //justShowResult(_.zip(_(docs).pluck('key'),_(docs).pluck('source')).join('\\n--\\n'))\n  //console.log(docs) \n  //return\nfunction render (err, docs){\n  var list = _(docs).chain()\n\t.map(function(v,k){\n    return `<span class=\"nav-group-item knows-item\"\nonclick=\"clickitem('${v.key}')\">\n<span class=\"icon icon-cd\"></span>\n ${v.key}</span>`;})\n  .value().join('\\n');\n  \n  document.getElementById('content')\n    .innerHTML = `<style>\n.knows-item {font-size:12px; margin:2px 0; background: #ddd; padding: 2px 10px 2px 5px;}\n.knows-item .icon {margin-right: 0px; color: #009EBD;}\n</style>\n<nav class=\"nav-group\" \nstyle=\"overflow: scroll;\">${list}</nav>`\n\n}\n\ndd = Knows.getDb().getAllData()\nrender(0,dd)","_id":"qfuDy0MdKCHGOHpl"}
{"key":"getfocuswin","source":"/*if(typeof wwe == 'undefined'){\n\tjustShowResult('<b style=\"color:#FF5722;\">non faraon</b>', true)\n}else{\na = _(windowManager.windows)\n  .chain()\n  .map(function(v,k){return [v.object.id, k]})\n\t.object()\n\t.value()\njustShowResult(aa1 +'\\n<b style=\"color:#FF5722;\">'+\n               van_dump(a)+'</b>', true)\n}/**/\n\nwarr = _(windowManager.windows)\n  .chain()\n  .map(function(v,k){return [v.object.id, k]})\n\t.object()\n\t.value()\n\nremote.app.once('browser-window-focus', function(e, w){\n\tjustShowResult('<b style=\"color:green;\">'+w.id +' : '+ warr[w.id]+'</b>', true)\n});\njustShowResult('<b style=\"color:blue;\">Waiting for focus on any window</b>', true)\n","_id":"rtXcJj99XC3KqVZ3"}
{"key":"nedb_init_liist","source":"//dir = '/Users/rainerg/work/ideals/_stage_bugdocs/';\nif(!window.dir)\n  dir = dialog.showOpenDialog({properties: ['openDirectory']})[0];\n\ndocInfo = docPath=>{\n  let realPath = path.resolve(dir,docPath);\n  let {size:docSize, md5:docMD5} = jetpack.inspect(realPath, {checksum:'md5'});\n  return {status:'init',docPath, realPath, docSize, docMD5};\n}\n\njd = jetpack.cwd(dir)\nlist = jd.find({matching: '*.pdf'});\n\nout = list.map(docInfo)\n\nst = require('convertor/new_store').store.open('db_stage_bugdocs2');\n\nout.map(v=>{\n  st.save(v.docPath, v)\n})\n\n\n\n//jColf(out, {columns: ['docPath', 'docSize']});\n\n\nout.length\n\n\n","_id":"rzyuNjCyw8yFhSeC"}
{"key":"d3quadtree","source":"cw.setPosition(40, 40)\ncw.setSize(600, 500)\ncw.setAlwaysOnTop(!true)\nd3 = require('d3')\ncb = cw.getBounds()\ndocument.body.innerText = ''\n\nvar width = cb.width,\n    height = cb.height;\n\nvar data = d3.range(1000).map(function() {\n  return [Math.random() * width, Math.random() * height];\n});\n\nvar quadtree = d3.geom.quadtree()\n.extent([[-1, -1], [width + 1, height + 1]])\n(data);\n\nvar color = d3.scale.linear()\n.domain([0, 8])  // max depth of quadtree\n.range([\"#efe\", \"#060\"]);\n\nvar svg = d3.select(\"body\").append(\"div\")\n.attr(\"width\", width)\n.attr(\"height\", height)\n.on(\"click\", function (d) {\n  var xy = d3.mouse(d3.selectAll('svg')[0][0]);\n  svg.selectAll(\"#pt\")\n    .attr(\"cx\", xy[0])\n    .attr(\"cy\", xy[1]);\n  clicked();\n});\n\nvar svg = d3.select(\"body\").append(\"svg\")\n.attr(\"width\", width)\n.attr(\"height\", height)\n.on(\"click\", function (d) {\n  var xy = d3.mouse(d3.selectAll('svg')[0][0]);\n  svg.selectAll(\"#pt\")\n    .attr(\"cx\", xy[0])\n    .attr(\"cy\", xy[1]);\n  clicked();\n});\n\nvar rect = svg.selectAll(\".node\")\n.data(nodes(quadtree))\n.enter().append(\"rect\")\n.attr(\"class\", \"node\")\n.attr(\"x\", function(d) { return d.x1; })\n.attr(\"y\", function(d) { return d.y1; })\n.attr(\"width\", function(d) { return d.x2 - d.x1; })\n.attr(\"height\", function(d) { return d.y2 - d.y1; });\n\nvar point = svg.selectAll(\".point\")\n.data(data)\n.enter().append(\"circle\")\n.attr(\"class\", \"point\")\n.attr(\"cx\", function(d) { return d[0]; })\n.attr(\"cy\", function(d) { return d[1]; })\n.attr(\"r\", 3);\n\nsvg.append(\"circle\")\n  .attr(\"id\", \"pt\")\n  .attr(\"r\", 3)\n  .attr(\"cx\", width/2)\n  .attr(\"cy\", height/2)\n  .style(\"fill\", \"yellow\");\n\n// PDS Collect a list of nodes to draw rectangles, adding extent and depth data\nfunction nodes(quadtree) {\n  var nodes = [];\n  quadtree.depth = 0; // root\n  quadtree.visit(function(node, x1, y1, x2, y2) {\n    node.x1 = x1;\n    node.y1 = y1;\n    node.x2 = x2;\n    node.y2 = y2;\n    nodes.push(node);\n    for (var i=0; i<4; i++) {\n      if (node.nodes[i]) node.nodes[i].depth = node.depth+1;\n    }\n  });\n  return nodes;\n}\n\n\n// calculate euclidean distance of two points with coordinates: a(ax, ay) and b(bx, by)\nfunction euclidDistance(ax, ay, bx, by){\n  return Math.sqrt(Math.pow(ax-bx, 2) + Math.pow(ay-by, 2));\n}\n\n// calculate mindist between searchpoint and rectangle\nfunction mindist(x, y, x1, y1, x2, y2){\n  var dx1 = x - x1, dx2 = x - x2, dy1 = y - y1, dy2 = y - y2;\n\n  if (dx1*dx2 < 0) { // x is between x1 and x2\n    if (dy1*dy2 < 0) { // (x,y) is inside the rectangle\n      return 0; // return 0 as point is in rect\n    }\n    return Math.min(Math.abs(dy1),Math.abs(dy2));\n  }\n  if (dy1*dy2 < 0) { // y is between y1 and y2\n    // we don't have to test for being inside the rectangle, it's already tested.\n    return Math.min(Math.abs(dx1),Math.abs(dx2));\n  }\n  return Math.min( Math.min(euclidDistance(x,y,x1,y1),euclidDistance(x,y,x2,y2)), Math.min(euclidDistance(x,y,x1,y2),euclidDistance(x,y,x2,y1)) );\n}\n\n\n// Find the nodes within the specified rectangle.\nfunction knearest(bestqueue, resultqueue, x, y, k) {\n  // sort children according to their mindist/dist to searchpoint\n  bestqueue.sort(function(a, b){\n    // add minidst to nodes if not there already\n    [a, b].forEach(function(val, idx, array){\n      if(val.mindist == undefined){\n        val.scanned = true;\n        if(val.leaf){\n          val.point.scanned=true;\n          val.mindist = euclidDistance(x, y, val.x, val.y);\n        }else{\n          val.mindist = mindist(x, y, val.x1, val.y1, val.x2, val.y2);\n        }\n      }\n    });\n    return b.mindist - a.mindist;\n  });\n\n  // add nearest leafs if any\n  for (var i=bestqueue.length-1; i>=0; i--){\n    var elem = bestqueue[i];\n    if(elem.leaf){\n      elem.point.selected = true;\n      bestqueue.pop();\n      resultqueue.push(elem);\n    }else{\n      break;\n    }\n    if(resultqueue.length >=k){\n      break;\n    }\n  }\n\n  // check if enough points found\n  if(resultqueue.length >=k || bestqueue.length == 0){\n    // return if k neighbors found\n    return;\n  }else{\n    // add child nodes to bestqueue and recurse\n    var vistitednode = bestqueue.pop();\n    vistitednode.visited = true;\n    // add nodes to queue\n    vistitednode.nodes.forEach(function(val, idx, array){\n      bestqueue.push(val);\n    });\n    // recursion\n    knearest(bestqueue, resultqueue, x, y, k);\n  }\n}\n\n\nfunction clicked() {\n  pt = d3.selectAll('#pt');\n  var x = +pt.attr('cx'), y = +pt.attr('cy');\n\n  // TODO these values should be stored seperately so that points don't have to be visited after each query\n  // idea assign unique ids to quadtree nodes and have a separate mindist array\n  point.each(function(d) { d.scanned = d.selected = false; d.mindist = undefined; });\n  rect.each(function(d) { d.visited = false;  d.mindist = undefined;});\n\n  //get nearest neighbors\n  var bestqueue = new Array(quadtree);\n  var resultqueue = [];\n  knearest(bestqueue, resultqueue, x, y, 10);\n\n  point.classed(\"scanned\", function(d) { return d.scanned; });\n  point.classed(\"selected\", function(d) { return d.selected; });\n  rect.style('fill', function(d) { return d.visited ? color(d.depth) : 'none'; });\n}\n\nclicked();\n\n\n","_id":"uFDBwjiXKXsFqOgl"}
{"key":"min_4","source":"\nq = !(typeof q == 'boolean') || !q\n//cw.setIgnoreMouseEvents(!true)\ncw.setPosition(0, 0)\ncw.setSize(600, screen.height)\n\nwn = 0\ntpl = jade.compile(`\nstyle\n  :stylus\n    .aa\n      font-size: 30px\n    body\n      background: #222\n      //opacity: .3\n      //zoom: 3\n    .scre\n      width: 600px\n      //height: 100px\n    .wxyp\n      position: absolute\n      width: 100%\n      //background: rgba(30,233,99,1)\n      color: black\n      background: #9E9E9E\n      margin: 0 5px\n      & span\n        width: 100px\n        text-overflow: ellipsis\n    .dblrow    \n      //background: #607D8B\n      //font-family: monospace;\n      display: inline-block\n      line-height: 1em\n      position: relative;\n\n      & .sub, & .sup\n        display: block;  \n        position: relative;\n        top: -0.65em;\n        font-size: 0.85em;\n        line-height: 0;\n        margin: 0 2px;\n      \n      & .sub\n        top: 0.35em;\n\n.dd\n  - each f in files\n    //- b = w.object.getBounds()\n    - wn++\n    .wxyp.file(style=\"top:#{wn*450}px; left:#{0}px;\")\n      img.scre(src=\"#{f}\")\n      span.icon.icon-cd.icon-text #{f}\n.aa ∆spirin Ʌspirin ⅄spirin ${screen} ddd\n`);\n\nif(typeof files==\"undefined\"){\n files = jetpack.find(remote.app.getHomeDir()+'/Pictures/', \n                     { matching: 'Screen Shot*'});\n}  \ntxt = tpl({files:files})\nsetContent(txt)","_id":"uScreW4kLFvCzcV5"}
{"key":"RENDER_IN_RENDER","source":"cw.setSize(800,600);\ncw.setAlwaysOnTop(true);\nurl = \"https://www.github.com/\";\n//url = \"file:///Users/rainerg/ajr/Aspirin/windows/html_entity_list.html\";\n\ntpl = jade.compile(`\nstyle\n  :stylus\n    .web-view\n      background: rgba(255,193,7,0.3)\n      margin: 0px\n      padding: 0px\n      position: absolute\n      width: 100%\n      height: calc(100% - 20px)\n      \n      & .wrp\n        width: 100%\n        margin: 0px\n        padding: 0px\n        height: calc(100% - 30px)\n\n        & webview \n          padding: 0px\n          width: 100%\n          hheight: 100%\n          height: calc(100% - 11px);\n        \n.web-view\n  .toolbar.toolbar-header\n    .toolbar-actions\n      .btn-group\n        \n        input#inp_url.btn.btn-default(type:\"text\")\n        .btn.btn-default(onclick=\"go()\") go()\n      .btn-group\n        button.btn.btn-primary(onclick=\"document.querySelector('#foo').reload();\") reload()\n        button.btn.btn-primary(onclick=\"document.querySelector('#foo').openDevTools();\") openDevTools()\n  .wrp\n    webview#foo(src='${url}')\n\n`)\n\ngo = ()=>{\n  url = document.querySelector('#inp_url').value;\n  document.querySelector('#foo').loadURL(url);\n}\n\n\nsetContent(tpl())\n\ndocument.querySelector('#inp_url').value = url;\n","_id":"uvSnlHMzwKefYC3k"}
{"key":"PDFJS_TEXTS","source":"converter = require_c('converter/api');\nmem_to_bin = require('converter/mem-to-binary-module');\npfile = \"/Users/rainerg/work/ideals/_BLOCKS/yegor_flash_viewer_838.optimized-2.pdf\";\npfile = \"/Users/rainerg/work/ideals/_BLOCKS/2011-D3-InfoVis.pdf\";\n//pfile = \"/Users/rainerg/Documents/AA Text- UKR.pdf\"\n//pfile = \"/Users/rainerg/work/ideals/_BLOCKS/tesseract.pdf\"\n//pfile = \"/Users/rainerg/work/ideals/_BLOCKS/evgenysh/Desktop/Shared/Converted/258002.PDF\"\n//pfile = \"/Users/rainerg/work/ideals/_BLOCKS/evgenysh/Desktop/Shared/Converted/258002.linearized.PDF\"\n\nsaveBlocks =()=>{\n  let resfile = genBlPath(pfile)\n  let blbuf = mem_to_bin.serializeTexts(val.texts); \n  let humanSize =  ((blbuf.byteLength/1024/1024)|0) + ' Mb ' \n  + ((blbuf.byteLength%(1024*1024))/1024).toFixed(2)+ ' Kb ';\n  \n  jetpack.write(resfile, Buffer.from(blbuf))\n  setContent('<pre>'\n             +'\\n Texts length: '+val.texts.length\n             +'\\n Blocks byteLength: '+ blbuf.byteLength\n             +'\\n Blocks size: ' + humanSize.bold()\n             +'\\n File saved: '+ resfile\n             //+colf(v.texts)\n             +'\\n</pre>')\n  \n}\n\ngenBlPath = (p)=>{\n  let po =path.parse(p);\n  po.ext = '.blocks';\n  po.dir = path.resolve(path.dirname(po.dir),'genblocks');\n  return path.resolve(po.dir, po.name+po.ext);\n}\n\nshow = (v)=>{\n  window.val = v;\n  setContent('<pre>'\n             +'\\n Texts length: '+v.texts.length\n             +'\\n File processing: '+genBlPath(pfile)\n             +'\\n</pre>')\n  \n}\n//setContent('<pre>'+colf(val.texts)+'</pre>')\n//jetpack.inspect(pfile)\ndoc = converter.DocPDF.getDocument(pfile)\ndoc.getTexts().then(show).then(saveBlocks)\n\n\n//setContent('ddd')","_id":"vDiQEt3Xrp81Bn5f"}
{"key":"minxxin","source":"//document.body.style.background = 'ghostwhite'\n\nKnows.getDb().find({ key: { $exists: true } }, function (err, docs) {\n  //justShowResult(_.zip(_(docs).pluck('key'),_(docs).pluck('source')).join('\\n--\\n'))\n  //console.log(docs) \n  //return\n  var list = _(docs).chain()\n\t.map(function(v,k){\n    return `<a class=\"nav-group-item knows-item\"\nonclick=\"createEditor('editor_${v.key}', 'editkopen', '${v.key}')\">\n<span class=\"icon icon-cd\"></span>\n${v.key}</a>`;})\n  .value().join('\\n');\n  \n  document.getElementById('content')\n    .innerHTML = `<style>\n.knows-item {margin:2px 0; background: #dfd; padding: 2px 10px 2px 5px;}\n.knows-item .icon {color: #009EBD;}\n</style>\n<nav class=\"nav-group\" \nstyle=\"overflow: scroll;\">${list}</nav>`\n\n})\n","_id":"wnqeIlbxqTRXF6AO"}
{"key":"editCode","source":"\njust.setName(runOptions);\n\nDatabase\n  .getDb()\n  .findOne({key:runOptions})\n  .exec(function(err,data){\n\t\tstr = data.source\n\t\teditor.setValue(str) //editor.getValue()+'\\n'+\n\t})\n\n\nsaveCodeOverride = ()=>just.run('SaveToCodeList');\nrunCodeOverride = ()=>Database.run('executeFromEditor');\n","_id":"xLL8CiFwDZSUOSrV"}
{"key":"toolbar_scroll_handler_old","source":"if(window._mWheelHandler)\n  document.body.removeEventListener(\"mousewheel\",window._mWheelHandler);\n// document.querySelector('.boz-header').innerText = 'AWS'\n// document.body.style.background = 'red';\n//{x: 1206, y: 345, width: 320, height: 43}\n//cw.setSize(200,200);\n//cw.setPosition(1370,40)\n// cw.setAlwaysOnTop(true);\n//cw.setIgnoreMouseEvents(!true);\n//WM = remote.require('electron-window-manager');\nwindow._mWheelHandler = (e)=>{\n\n  let {deltaX, deltaY} = e;\n//  let out = JSON.stringify({deltaX, deltaY},null,2);\n  let out = `deltaX = ${deltaX},<br/>deltaY = ${deltaY}`;\n  \n  exw = [\"ALL_WINDOW_SCROLL\", \n         //\"codeList\", \n         \"showCodeList\", \n         \"toolbar\", \n         //\"listknows\", \n         \"showTime\", \n         \"fulloverlay\"];\n\n  warr = _(remote.getGlobal('getAllWin')())\n    .chain()\n    .filter(w=>!exw.includes(w))\n    .map(w=>windowManager.get(w))\n    .each(function(w){\n      let [wx,wy] = w.object.getPosition();\n      w.object.setPosition(wx - deltaX, wy - deltaY);\n    })\n\n};\n\n//document\n\ndocument.body.addEventListener(\"mousewheel\", window._mWheelHandler, false);\n\n\n","_id":"xpcEqYew7ivHWqQ1"}
{"key":"openMfuncEdit","source":"\ncreateEditor('editor_'+opt, 'editMatrixFunc', opt)\n\n","_id":"xrDAalH8Nv4ses9A"}
{"key":"VIEW_AS_TABLE","source":"setupW = ()=>{\n  let [w,h] = [680,200];\n  let ew = getWin('editor_VIEW_AS_TABLE');\n  if(ew){\n    let [ex, ey] = ew.object.getPosition();\n    cw.setPosition(ex, Math.max(screen.availTop-10, ey - h));\n  }\n  cw.setSize(w,h)\n  cw.setAlwaysOnTop(true)\n}\nsetupW();\n\nList = require('list.js')\nrender = ()=>{\n  let tpl = `\n<div id=\"users\">\n  <input class=\"search\" placeholder=\"Search\" />\n  <button class=\"sort\" data-sort=\"name\">\n    Sort by name\n  </button>\n<table><tbody class=\"list\">\n</tbody></table>\n</div>`;\n  setContent(tpl)\n}\n\nrender()\n\noptions = {\n  valueNames: [ 'name', 'born' ],\n  item: '<tr><td class=\"name\"></td><td class=\"born\"></td></tr>'\n};\n\nvalues = [{\n    name: 'Jonny Strömberg',\n    born: 1986\n  },\n  {\n    name: 'Jonas Arnklint',\n    born: 1985\n  },\n  {\n    name: 'Martina Elm',\n    born: 1986\n}];\nuserList = new List('users', options, values);\n\n","_id":"zJA7j2cFewm7eFsb"}
