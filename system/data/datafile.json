{"key":"showAppDir","source":"  \n  var dw, name;\n  name = 'dir';\n  dw = giveWindow(name);\n  dw.execute(`Knows.run('${name}')`)\n  dw.object.setBounds({\n    \"x\": 1490,\n    \"y\": 355,\n    \"width\": 180,\n    \"height\": 300\n  }, true);\n\n","_id":"1KIeqOOmaHDgX950"}
{"key":"listknows","source":"//document.body.style.background = 'ghostwhite'\nclickitem = function (key){\n  createMin(key).execute(`Knows.run('${key}')`);\n\tcreateEditor('editor_'+key, 'editkopen', key)\n}\n\ndocument.querySelector('.boz-header').innerText = 'listknows'\nKnows.getDb().find({ key: { $exists: true } }).sort({key:1}).exec(function (err, docs) {\n  //justShowResult(_.zip(_(docs).pluck('key'),_(docs).pluck('source')).join('\\n--\\n'))\n  //console.log(docs) \n  //return\n  var list = _(docs).chain()\n\t.map(function(v,k){\n    return `<span class=\"nav-group-item knows-item\"\nonclick=\"clickitem('${v.key}')\">\n<span class=\"icon icon-cd\"></span>\n${v.key} </span>`;})\n  .value().join('\\n');\n  \n  document.getElementById('content')\n    .innerHTML = `<style>\n.knows-item {font-size:12px; margin:2px 0; background: #ddd; padding: 2px 10px 2px 5px;}\n.knows-item .icon {margin-right: 0px; color: #009EBD;}\n</style>\n<nav class=\"nav-group\" \nstyle=\"overflow: scroll;\">${list}</nav>`\n\n})\n","_id":"2qtFnq044XlVGeJ1"}
{"key":"SaveToCodeList","source":"source = editor.getValue()\nhash = md5(source)\ndoc = { key: just.name || hash, source: source, md5: hash, system: 'solar', isFunc: false }\n\nDatabase.getDb().update({key:doc.key}, doc, {upsert: true});","_id":"355GIHDm8yMvC0Tm"}
{"key":"editMatrixFunc","source":"\njust.setName(opt);\n\nMatrix.getDb().findOne({key:opt}).exec(function(err,data){\n\t\tstr = data.source\n\t\teditor.setValue(str) //editor.getValue()+'\\n'+\n\t})\n\n\n","_id":"3fOXq29eRAUJvYew"}
{"key":"CHAT_SERVER","source":"\n\n//parse = data=>{\n\n//justShowResult(data)\n//  console.log(data)\n\n// window.io.sockets.emit('msg', 'ok'); \n//}\n\nwindow.CHAT_HANDLER = data=>{\n  justShowResult(data)\n}\n    \nif(window.server){\n  \n  'server running';\n}else if(!window.server){\n  server =  require('http').createServer();\n  io = require('socket.io')(server);\n  server.listen(3000,'0.0.0.0'); \n\n  io.sockets.on('connection', function(socket) {\n    jLog('somebody connected');\n    ss = socket.on('msg',(d)=>window.CHAT_HANDLER(d));\n  });\n\n  'server start';\n}\n\n\n","_id":"3hDgnSfLEr8ml43Q"}
{"key":"test21","source":"\n\nq = !(typeof q == 'boolean') || !q\ncw.setIgnoreMouseEvents(!true)\ncw.setAlwaysOnTop(true)\ncw.setPosition(0, 23)\ncw.setSize(300, screen.height)\n\nwn = -1\ntpl = jade.compile(`\nstyle\n  :stylus\n    .aa\n      font-size: 30px\n    .wrap\n      //margin-right: -40px\n\n    body\n      background: none\n      opacity: .83\n      zoom: 1\n      overvlow: hidden\n    .scre\n      width: 600px\n      //height: 100px\n    .wxyp\n      position: absolute\n      width: 100%\n      //background: rgba(30,233,99,1)\n      color: black\n      //background: #9E9E9E\n      margin: 0 5px\n      & img\n        width:100%\n      & span\n        width: 100px\n        text-overflow: ellipsis\n      \n    .dblrow    \n      //background: #607D8B\n      //font-family: monospace;\n      display: inline-block\n      line-height: 1em\n      position: relative;\n\n      & .sub, & .sup\n        display: block;  \n        position: relative;\n        top: -0.65em;\n        font-size: 0.85em;\n        line-height: 0;\n        margin: 0 2px;\n      \n      & .sub\n        top: 0.35em;\n\ncanvas#canvas(width=\"320\" height=\"240\")\n//.dd\n  - cb = cw.getBounds()\n  - each f in files\n    - wn++\n    .wxyp.file(style=\"top:#{wn*50||cb.width}px; left:#{0}px;\")\n      //img.scre(src=\"#{f}\")\n      span.icon.icon-cd.icon-text #{f}\n//.aa ∆spirin Ʌspirin ⅄spirin ${screen} ddd\n`);\n\n/*if(typeof files==\"undefined\"){\n files = jetpack.find(remote.app.getHomeDir()+'/Desktop/', \n                     { matching: 'Screen Shot*'});\n}  \n*/\ntxt = tpl({files:files})\nsetContent(txt)\nvar face_detect = require('face-detect'),\n    Canvas = require('canvas');\n\n// ... initialize a canvas object ...\n\nvar result = face_detect.detect_objects({ \"canvas\" : document.getElementById('canvas'),\n  \"interval\" : 5,\n  \"min_neighbors\" : 1 });\n\nconsole.log('Found ' + result.length  + ' faces.');\n\nfor (var i = 0; i < result.length; i++){\n  var face =  result[i];\n  console.log(face);\n}\n","_id":"3s3PRQfnTy60NGzT"}
{"key":"ASKA4D_GO_inwin","source":"function get_code(n){\n  let A4D = jetpack.read('F:/ajr/editor_d3/ASKA_4D.json', 'json')\n  A4D.map((v,index)=>{if(v[0] == n)n = index})\n  n = A4D[n][1]\n  return n\n}\n////////////////////////////////////////////////////////\nlet robot = require('robotjs');\nlet position = robot.getMousePos()\neditor.setValue(get_code(opt))\ncw.setPosition(position.x,position.y)\njust.setName(opt)\n\n\n\n\n\n","_id":"4kDnf7baXM3RpM4o"}
{"name":"selfsave","md5":"d52d53479595e8ad450f257edee15929","source":"ecode = document.querySelector('.CodeMirror-code')\necode.style.fontSize = '17.5px'; // 13px\nfp = 'file:///Users/rainerg/ajr/Aspirin/node_modules/cson/docs/index.html';\n\nObject.keys(fs)\nObject.keys(windowManager.windows)\n\nsource = editor.getValue();\nhash = md5(source)\n\nremote.app.db.insert({name:'selfsave',md5:hash,source:source})\n\n","_id":"70KNI543N6F0N0Lo"}
{"key":"inp22","source":"const electron = require('electron');\nconst remote = electron.remote;\nconst BrowserWindow = remote.BrowserWindow;\nconst clipboard = require('electron').clipboard;\n\n\nvar mainWindow;\n\n\nvar electronScreen = electron.screen;\nvar size = electronScreen.getPrimaryDisplay().workAreaSize;\n\nvar url = '/Users/rainerg/lab/_exp/electron/electron-sample-apps/file-explorer/test.js';\n\nmainWindow = new BrowserWindow({ \n  width: size.width, \n  height: size.height,\n  x:0, \n  y:0,\n  transparent:true,\n  webSecurity: false\n});\n\nvar html = `\n<script type=\"text/javascript\" src=\"${url}\"></script>\n<h1>${url}</h1>` ;\nhtml += '<pre>'+JSON.stringify(size)+'<pre/>';\n\n//mainWindow.openDevTools();\n\nmainWindow.loadURL(\"data:text/html;charset=utf-8,\" + encodeURI(html)); \n\n//mainWindow.loadUrl('file://' + __dirname + '/exec.html');\nmainWindow.webContents.on(\"did-finish-load\", function() {\n\tmainWindow.webContents.executeJavaScript(`setScript(\"${url}\");`);\n});\n","_id":"95xeOKpvgIp5vJFA"}
{"key":"showMatrix1","source":"  \n  var dw, name;\n  name = 'matrix1_1';\n  dw = giveWindow(name);\n  dw.execute(`Knows.run('${name}')`)\n\n","_id":"Ad2bGq0Rx44fYk2u"}
{"key":"secondOverlay","source":"\nq = !(typeof q == 'boolean') || !q\ncw.setIgnoreMouseEvents(true)\ncw.setAlwaysOnTop(true)\n\nXshift = 0; //1680\n\ncw.setPosition(Xshift, 0)\ncw.setSize(screen.width, screen.height)\ncw.setVisibleOnAllWorkspaces(true)\n\ninf = function(w){\n  var b = w.object.getBounds()\n  return `<sup>x${b.x}</sup><sub>y${b.y}</sub>W${b.width}H${b.height}`  \n}\n//rgba(30,233,99,1)\ntpl = jade.compile(`\nstyle\n  :stylus\n    body\n      background: rgba(22, 22, 22, 0)\n      //background: none\n      opacity: 1.5\n    .wxyp\n      position: absolute\n      background: none\n      color: yellowgreen\n      border-top: 1px dashed yellowgreen\n      border-left: 1px dashed yellowgreen\n      border-right: 1px dashed yellowgreen\n      padding-left: 5px\n      background: none\n    .dblrow    \n      //background: #607D8B\n      font-family: monospace;\n      display: inline-block\n      line-height: 1em\n      position: relative;\n\n      & .sub, & .sup\n        display: block;  \n        position: relative;\n        top: -0.65em;\n        font-size: 0.75em;\n        line-height: 0;\n        margin: 0 2px;\n      \n      & .sub\n        top: 0.25em;\n.dd\n  - each w in windows\n    - b = w.object.getBounds()\n    - if((b.x+b.width) < Xshift) continue;\n    .wxyp.file(style=\"top:#{b.y-21}px; left:#{b.x-Xshift}px; width:#{b.width}px; height:#{20}px;\")\n       span.icon.icon-cd \n       span.icon.icon-text  #{w.name}\n       .pull-right \n        span.icon.icon-info.icon-text  #{w.object.id} \n        .dblrow  \n          .sup x#{b.x}\n          .sub y#{b.y}\n        .dblrow \n          .sup w#{b.width}\n          .sub h#{b.height}\n.aa Ʌspirin v0.1.3\n`);\n\nfunction render(){\n  txt = tpl(windowManager)\n  setContent(txt)\n}\nrender();\nwindow.ri=window.ri||0;\nif(ri) clearInterval(ri);\nri = setInterval(render, 0)\n","_id":"Fn1HDnBuStaafnoH"}
{"key":"redisTest","source":"\n\nvar redis = require(\"redis\"),\n    client = redis.createClient();\n \n// if you'd like to select database 3, instead of 0 (default), call \n// client.select(3, function() { /* ... */ }); \n \nclient.on(\"error\", function (err) {\n    console.log(\"Error \" + err);\n});\n \nclient.set(\"string key\", \"string val\", redis.print);\nclient.hset(\"hash key\", \"hashtest 1\", \"some value\", redis.print);\nclient.hset([\"hash key\", \"hashtest 2\", \"some other value\"], redis.print);\nclient.hkeys(\"hash key\", function (err, replies) {\n    console.log(replies.length + \" replies:\");\n    replies.forEach(function (reply, i) {\n        console.log(\"    \" + i + \": \" + reply);\n    });\n    client.quit();\n});\n","_id":"GsVm5rxor4RBkae9"}
{"key":"showTime","source":"\ntpl = `<style type=\"text/css\">\n  body {\n    -webkit-app-region: drag;\n  }\n  #time {\n    color: white;\n    font-size: 20px;\n    font-family: monospace;\n    font-weight: 600;\n    color: #041231;\n    margin-top: 5px;\n    border-radius: 10px;\n    height: 18px;\n    width: 300px;\n    line-height: 20px;\n    text-overflow: clip;\n    padding: 0 6px;\n    background: rgba(201, 200, 100, 01);\n  }  \n\n</style>\n<div>\n  <h1 id=\"time\"> 14 : 88 </h1>\n  <h3 id=\"shit\"> 5999 min </h1>\n</div>`\n    document.body.style.background = 'none';\n    //{x: 1206, y: 345, width: 320, height: 43}\n    cw.setSize(300,50);\n    cw.setPosition(1370,2)\n    cw.setAlwaysOnTop(true);\n    cw.setIgnoreMouseEvents(true);\n    function render(){\n        var d = new Date();\n        document.getElementById('time').innerHTML = \"\" +d.toString();\n    }\n\n    window.ri=window.ri||0;\n    if(ri) clearInterval(ri);\n    ri = setInterval(render, 50)\nsetContent(tpl)","_id":"JdNiWxGeBbg7lYV8"}
{"key":"metrix_hold_by_one","source":"let code =\n`\nvar count = 0;\nfor(i=0;i<quants.length;i++){\n  if(quants[i].x == this.x && quants[i].y == this.y){\n    count += 1;\n    if(count > 1){\n      quants[i].speed.x = 0;\n      quants[i].speed.y = 0;\n    }else{\n      quants[i].speed.x = 1;\n      quants[i].speed.y = 0;\n    }\n  }\n}\n`\neditor.setValue(code);","_id":"LFmjLU5Mf3cOsRsR"}
{"key":"d3exp","source":"cw.setPosition(0, 0)\n//cw.setSize(700, 400)\ncw.setSize(screen.width, screen.width)\ncw.setAlwaysOnTop(true)\ncw.setIgnoreMouseEvents(!true)\n\nd3 = require('d3')\ncb = cw.getBounds()\n\ndocument.body.innerHTML = `<style>\nbody{background:rgba(255,255,255,0);}\n.node circle {\n  fill: #fff;\n  stroke: steelblue;\n  stroke-width: 1.5px;\n}\n\n.node {\n  font: 18px sans-serif;\n}\n\n.wrap {\n  zoom: 1;\n}\n.link {\n  fill: none;\n  stroke: #ccc;\n  stroke-width: 1.5px;\n}\n\n</style>\n<div class=\"wrap\">\n    <div id=\"content\" class=\"inner\">\n</div>\n</div>\n`\n\nvar width = 400,\n    height = 500;\nvar diameter = screen.width;\n\nvar tree = d3.layout.tree()\n    .size([360, diameter / 2 - 120])\n    .separation(function(a, b) { return (a.parent == b.parent ? 1 : 2) / a.depth; });\n\nvar diagonal = d3.svg.diagonal.radial()\n    .projection(function(d) { return [d.y, d.x / 180 * Math.PI]; });\n\nvar svg = d3.select(\"#content\").append(\"svg\")\n    .attr(\"width\", diameter)\n    .attr(\"height\", diameter - 150)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + diameter / 2 + \",\" + diameter / 2 + \")\");\n\nd3.json(\"../data/flare.json\", function(error, root) {\n  if (error) throw error;\n\n  var nodes = tree.nodes(root),\n      links = tree.links(nodes);\n\n  var link = svg.selectAll(\".link\")\n      .data(links)\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", diagonal);\n\n  var node = svg.selectAll(\".node\")\n      .data(nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"rotate(\" + (d.x - 90) + \")translate(\" + d.y + \")\"; })\n\n  node.append(\"circle\")\n      .attr(\"r\", 4.5);\n\n  node.append(\"text\")\n      .attr(\"dy\", \".31em\")\n      .attr(\"text-anchor\", function(d) { return d.x < 180 ? \"start\" : \"end\"; })\n      .attr(\"transform\", function(d) { return d.x < 180 ? \"translate(8)\" : \"rotate(180)translate(-8)\"; })\n      .text(function(d) { return d.name; });\n});\n\nd3.select(self.frameElement).style(\"height\", diameter - 150 + \"px\");\n","_id":"MGtcVeGPNVVqfbH3"}
{"key":"grabfocus-test","source":"\tjust.setName(warr[w.id])\n\tjustShowResult('<b style=\"color:green;\">'+w.id +' : '+ warr[w.id]+'</b>', true)","_id":"O63tOkKyVEdXkDfY"}
{"key":"fulloverlay","source":"\nq = !(typeof q == 'boolean') || !q\ncw.setIgnoreMouseEvents(true)\ncw.setAlwaysOnTop(true)\ncw.setPosition(0, 0)\ncw.setSize(1920*2, 1200)\ncw.setVisibleOnAllWorkspaces(true)\ninf = function(w){\n  var b = w.object.getBounds()\n  return `<sup>x${b.x}</sup><sub>y${b.y}</sub>W${b.width}H${b.height}`  \n}\n//rgba(30,233,99,1)\n\ncomputeXY = function(w){\n  cb = w.object.getBounds()\n  if(cb.y<50){\n     cb.y=50;\n  }\n  return {top: cb.y-21+'px',\n          left: cb.x+'px',\n          width: cb.width+'px',\n          height: (cb.height+'px')\n         }\n}\n\n\ntpl = jade.compile(`\nmixin winitem(b)\n  - if(b.y < 50) b.y = 50;  \n  - xywh = {top: (b.y-21)+\"px\", left: b.x+\"px\", width: b.width+\"px\", height:20+\"px\"}\n  .wxyp.file(style=xywh)\n     block\n\nstyle\n  :stylus\n    body\n      background: rgba(22, 22, 22, .0)\n      opacity: .85\n      \n    .wxyp\n      position: absolute\n      background: none\n      color: yellowgreen\n      border-top: 1px dashed yellowgreen\n      border-left: 1px dashed yellowgreen\n      border-right: 1px dashed yellowgreen\n      border-bottom: 1px dashed yellowgreen\n      padding-left: 5px\n      background: none\n    .dblrow    \n      //background: #607D8B\n      font-family: monospace;\n      display: inline-block\n      line-height: 1em\n      position: relative;\n\n      & .sub, & .sup\n        display: block;  \n        position: relative;\n        top: -0.65em;\n        font-size: 0.75em;\n        line-height: 0;\n        margin: 0 2px;\n      \n      & .sub\n        top: 0.25em;\n\n\n.dd\n  - each w in windows\n    - b = w.object.getBounds()\n    - y = b.y - 21\n    //- if(y < 22) y = 22; \n\n    - xywh = {top: y+\"px\", left: b.x+\"px\", width: b.width+\"px\", height:b.height+20+\"px\"}\n    .wxyp.file(style=xywh)\n       span.icon.icon-cd \n       span.icon.icon-text  #{w.name}\n       .pull-right \n        span.icon.icon-info.icon-text  #{w.object.id} \n        .dblrow  \n          .sup x#{b.x}\n          .sub y#{b.y}\n        .dblrow \n          .sup w#{b.width}\n          .sub h#{b.height}\n    //.ii xyi \n.aa Ʌspirin v0.1.3\n`);\n\nfunction render(){\n  txt = tpl(windowManager)\n  setContent(txt)\n}\nrender();\nwindow.ri=window.ri||0;\nif(ri) clearInterval(ri);\nri = setInterval(render, 100)\n\n\n//render()","_id":"PM4UvPacDSHy6z67"}
{"key":"init","source":"\njustShowResult(van_dump(cw.getBounds()))\n","_id":"SPAGZ2lckr5CC7mF"}
{"key":"ksave","source":"if(just.name){\n\tKnows.save(just.name, editor.getValue())\n  if(w = getWin(just.name)){\n  \tw.execute(\"Knows.run('\"+just.name+\"')\")\n  \tjustShowResult('<b style=\"color:green;\">Saved and Updated window \"'+just.name+'\"</b>', true)\n  } \n}else{\n  just.run('add');\n}\n\n","_id":"TqjUpnaDV4qjE7yy"}
{"key":"all_windows_drag","source":"if(window.log)\ndocument.body.removeEventListener(\"mousewheel\",log);\n\ndocument.body.style.background = 'rgba(20, 20, 20, 0.9)';\n//{x: 1206, y: 345, width: 320, height: 43}\ncw.setSize(1920*2,1200);\ncw.setPosition(0,0)\ncw.setAlwaysOnTop(false);\ncw.setIgnoreMouseEvents(!true);\nWM = remote.require('electron-window-manager');\nlog = (e)=>{\n\nlet {deltaX, deltaY} = e;\nlet out = JSON.stringify({deltaX, deltaY});\n\nexw = [\"all_windows_drag\", \"showCodeList\", \"toolbar\", \"listknows\", \"showTime\", \"fulloverlay\"];\n_(windowManager.windows).chain()\n.filter(function(w){\nreturn !exw.includes(w.name)\n})\n.each(function(w){\nlet [wx,wy] = w.object.getPosition();\nw.object.setPosition(wx - deltaX, wy - deltaY);\n})\n\nsetContent(out);\n};\n\n//document\n\ndocument.body.addEventListener(\"mousewheel\", log, false);\n\n\n","_id":"UOKFOAz7EDKRQ9Lu"}
{"key":"editor","source":"//aa1 = 'a0a0a'\n//Knows.run('grabfocus')\n//alert(123)\n//justShowResult('-')\n//cb = cw.getBounds()\n//justShowResult(`x=${cb.x} y=${cb.y} width=${cb.width} height=${cb.height} `)\n//syncSizeLines()","_id":"URTolNNsRssn4zUP"}
{"key":"grabfocus","source":"warr = _(windowManager.windows)\n  .chain()\n  .map(function(v,k){return [v.object.id, k]})\n\t.object()\n\t.value()\n\nelName = document.querySelector('.justName');\nelName.onclick = function(){\n  document.querySelector('.header-text').classList.remove('yellow')\n  document.querySelector('.header-text').classList.add('waiting')\n  \n  remote.app.once('browser-window-focus', function(e1, w1){\n    document.querySelector('.header-text').classList.remove('waiting')\n\t  document.querySelector('.header-text').classList.add('yellow')\n    window.w=w1\n    window.e=e1\n    Knows.run('grabfocus-test')\n  });\n}\n\n\n\n","_id":"Uv7SkxzsTQXl5Z6l"}
{"key":"isotop_btn","source":"clss = 'btn btn-mini btn-isotop'; \nsd = document.getElementById('isotop');\nsd.className = clss\n//---\n\n\n// just text\n//q= 'Hello 1 word. Sentence number 2.';\nsd.classList.toggle('active');\n\n\nq = editor.getValue();\neditor.setValue(`clss = '${sd.className}'; \n` + q.substr(q.split('\\n',1)[0].length+1, q.length))\n","_id":"W8NMvDxYPirTW3ps"}
{"key":"toggletop","source":"_(windowManager.windows)\n  .reduce(function(memo, v, k, i){\n  \tv.execute(\"just.run('top');\"); \n  \tvar row = memo.length-1+memo[memo.length-1].length/70|0;\n  \tif(!memo[row])memo[row]='';\n  \t//memo[row] = memo[row]+' L'+ memo[row].length +'R'+row+'&'+k;\n  \tmemo[row] += ' #'+k;\n    return memo\n\t},['']).join('\\n')\n","_id":"XecKL7EzLILByK6J"}
{"key":"matrix_hold_byone","source":"\nvar count = 0;\nfor(i=0;i<quants.length;i++){\n  if(quants[i].x == this.x && quants[i].y == this.y){\n    count += 1;\n    if(count > 1){\n      quants[i].speed.x = 0;\n      quants[i].speed.y = 0;\n    }else{\n      quants[i].speed.x = 1;\n      quants[i].speed.y = 0;\n    }\n  }\n}\n","_id":"Y8Xcf137fiKRmMrd"}
{"key":"matrix1_funcList","source":"cw.setBounds({\"x\": 670,\"y\": -585, \"width\": 500, \"height\": 350}, true);\ncw.setAlwaysOnTop(!true)\ntpl = jade.compileFile('./matrix/functions_list.jade');\ntxt = tpl({name:'matrix_test_1'})\nsetContent(txt);\npreout = document.getElementById('preout');\n\nfns = [];\nfuncClass = {};\nout = [];\n\nsss = (err, docs)=>{\n  \n  out = docs.map(d=>({key:d.key, source:d.source}))\n  \n  funcClass = out.reduce((pv,cv,ci)=>{\n    pv[cv.key] = new Function('data', cv.source);\n    return pv;\n  },{})\n  windowManager.sharedData.set('funcClass', funcClass);  \n\n  \n  fns = _.functions(funcClass).map(fname=>fname.split('y').reduce((memo, val)=>{\n    if(val.charAt(0)=='x'){\n      memo.x = 1*val.substr(1);\n    }else{\n      memo.y = 1*val}\n    return memo\n  },{name:fname, src: String(funcClass[fname])})) //!!!!!!!!\n\n  windowManager.sharedData.set('matrixFunc', fns);  \n  aaa(0, docs)\n  //preout.innerHTML = van_dump(fns);\n\n}\nMatrix.getDb().find({ key: { $exists: true } }).sort({key:1}).exec(sss)\n\n\n\ntestQuant = {\n  speed:{\n    x:1,\n    y:0\n  },\n  x:0,\n  y:0\n};\n\n//preout.innerHTML = van_dump(testQuant);\n\n\n//document.body.style.background = 'ghostwhite'\nopenEditor = function (key){\n  //createMin(key).execute(`Knows.run('${key}')`);\n\tcreateEditor('editor_'+key, 'editMatrixFunc', key)\n}\n\n\nfunction aaa (err, docs) {\n  //justShowResult(_.zip(_(docs).pluck('key'),_(docs).pluck('source')).join('\\n--\\n'))\n  //console.log(docs) \n  //return\n  var list = _(docs).chain()\n\t.map(function(v,k){\n    return `<span class=\"nav-group-item knows-item\">\n<span class=\"icon icon-tools\" onclick=\"openEditor('${v.key}')\"></span>\n<span class=\"icon icon-play\" onclick=\"runCode('${v.key}')\"></span>\n${v.key}</span>`;})\n  .value().join('\\n');\n  \n  document.getElementById('content')\n    .innerHTML = `<style>\n.knows-item {margin:2px 0; background: #ddd; padding: 2px 10px 2px 5px;}\n.knows-item .icon {color: #009EBD;}\n</style>\n<nav class=\"nav-group\" \nstyle=\"overflow: scroll;\">${list}</nav>`\n\n}\n\n\n","_id":"Z0JOQ4BLqFvcsD8i"}
{"key":"load","source":"createBrowser('http://google.com')\n\n","_id":"ZcmxyEhVLwbKTPpH"}
{"key":"ALL_WINDOW_SCROLL","source":"if(window.log)\n  document.body.removeEventListener(\"mousewheel\",log);\n  document.body.removeEventListener(\"mousemove\",log);\n//{x: 1206, y: 345, width: 320, height: 43 }\n//cw.setSize(200,200);\n//cw.setPosition(1370,40)\ndocument.body.style.background = 'rgba(20, 20, 20, 0.9)';\n//{x: 1206, y: 345, width: 320, height: 43}\ncw.setSize(1920,1080);\ncw.setPosition(0,0)\ncw.setAlwaysOnTop(false);\ncw.setIgnoreMouseEvents(!true);\nWM = remote.require('electron-window-manager');\nlog = (e)=>{\n\n  let {deltaX, deltaY} = e;\n//  let out = JSON.stringify({deltaX, deltaY},null,2);\n  let out = `deltaX = ${deltaX},<br/>deltaY = ${deltaY}`;\n  \n  exw = [\"ALL_WINDOW_SCROLL\", \"codeList\", \"showCodeList\", \"toolbar\", \"listknows\", \"showTime\", \"fulloverlay\"];\n\n  warr = _(remote.getGlobal('getAllWin')())\n    .chain()\n    .filter(w=>!exw.includes(w))\n    .map(w=>windowManager.get(w))\n    .each(function(w){\n      let [wx,wy] = w.object.getPosition();\n      w.object.setPosition(wx - deltaX, wy - deltaY);\n    })\n\n  setContent(out);\n};\n\n//document\ndocument.body.addEventListener(\"mousewheel\", log, false);\ndocument.body.addEventListener(\"mousemove\", log, false);\n\n","_id":"avkouOFtMLeVmPz3"}
{"key":"matrix1_origin","source":"cw.setBounds({\"x\": 830,\"y\": 60, \"width\": 500, \"height\": 350}, true);\ncw.setAlwaysOnTop(!true)\ntpl = jade.compileFile('./matrix/tpl.jade');\ntxt = tpl({name:'matrix_test_1'})\nsetContent(txt);\npreout = document.getElementById('preout');\nqcount = document.getElementById('qcount');\nfuncClass = {};\n\nif(typeof quants === 'undefined')quants = [];\n//quants = [];\n\ntestQuant = {\n  speed:{\n    x:1,\n    y:0\n  },\n  x:0,\n  y:5,\n  data:'ABC'\n};\n\nloadFunc = (e,docs)=>{\n  \n  out = docs.map(d=>({key:d.key, source:d.source}))\n  \n  funcClass = out.reduce((pv,cv,ci)=>{\n    pv[cv.key] = new Function('data', cv.source);\n    return pv;\n  },{})\n  windowManager.sharedData.set('funcClass', funcClass);  \n\n  \n  fns = _.functions(funcClass).map(fname=>fname.split('y').reduce((memo, val)=>{\n    if(val.charAt(0)=='x'){\n      memo.x = 1*val.substr(1);\n    }else{\n      memo.y = 1*val}\n    return memo\n  },{name:fname, src: String(funcClass[fname])})) //!!!!!!!!\n\n  windowManager.sharedData.set('matrixFunc', fns);  \n  \n  //preout.innerHTML = van_dump(fns);\n\n}\n\ncalculate = q => {\n  console.log(q)\n  var qq = q;\n  Object.keys(q.speed).forEach(k=>q[k] += q.speed[k])\n  if(0==(qq.x = q.x%67))qq.y++;\n  //qq.y = qq.y%42\n\n  var fname = `x${q.x}y${q.y}`;\n\n  if(funcClass.hasOwnProperty(fname)){\n    funcClass[fname].apply(qq,[qq.data]);\n  }\n\n  \n  \n}\n\n//preout.innerHTML = van_dump(calculate(testQuant))\n\nstartrun = function(){\n  //funcClass = _.clone(windowManager.sharedData.fetch('funcClass'));\n  quants.forEach(calculate)\n  windowManager.sharedData.set('quants', quants);\n  preout.innerHTML = van_dump(quants);\n  qcount.innerHTML = quants.length;\n}\n\nif(typeof onlyOneLoop === 'undefined')onlyOneLoop = false;\n\nclrint = function(){\n  clearInterval(onlyOneLoop);\n}\nclrint();\n\nreset = function(){\n  Matrix.getDb().find({ key: { $exists: true } }).sort({key:1}).exec(loadFunc)\n  quants = [];\n}\n\nsettmr = function(){\n  tme = document.getElementById('mtimeout').selectedOptions[0].value;\n  clearInterval(onlyOneLoop);\n  onlyOneLoop = setInterval(startrun,tme);\n}\n\n//settmr();\n//startrun()\ndocument.getElementById('mquantadd').onclick = ()=>{\n  quants.push(JSON.parse(JSON.stringify(testQuant)));\n  //quants.push(_.extend(_.clone(testQuant), {x:3}));\n  windowManager.sharedData.set('quants', quants);\n}\ndocument.getElementById('mreload').onclick = reset;\ndocument.getElementById('mrun').onclick = settmr;\ndocument.getElementById('mstep').onclick = ()=>{clrint();startrun();};\n\ndocument.getElementById('mpause').onclick = clrint;\n\nmwname = 'matrix1_view';\ndocument.getElementById('mview').onclick = \n  ()=>giveWin(mwname).execute(`Knows.run('${mwname}')`);\n\n","_id":"bqlFMJjvGG8dry5d"}
{"key":"inp666","source":"const electron = require('electron');\nconst remote = electron.remote;\nconst BrowserWindow = remote.BrowserWindow;\nconst clipboard = require('electron').clipboard;\n\n\nvar mainWindow;\n\n\nvar electronScreen = electron.screen;\nvar size = electronScreen.getPrimaryDisplay().workAreaSize;\n\nvar url = '/Users/rainerg/lab/_exp/electron/electron-sample-apps/file-explorer/test.js';\n\nmainWindow = new BrowserWindow({ \n  width: size.width, \n  height: size.height,\n  x:0, \n  y:0,\n  transparent:true,\n  webSecurity: false\n});\n\nvar html = `\n<script type=\"text/javascript\" src=\"${url}\"></script>\n<h1>${url}</h1>` ;\nhtml += '<pre>'+JSON.stringify(size)+'<pre/>';\n\n//mainWindow.openDevTools();\n\n//mainWindow.loadURL(\"data:text/html;charset=utf-8,\" + encodeURI(html)); \n\nmainWindow.loadUrl('file://' + __dirname + '/exec.html');\nmainWindow.webContents.on(\"did-finish-load\", function() {\n\tmainWindow.webContents.executeJavaScript(`setScript(\"${url}\");`);\n});\n","_id":"cNSCSfnNCwY2BAMm"}
{"key":"showCodeList","source":"  \n  var dw, name;\n  name = 'codeList';\n  dw = giveWindow(name);\n  dw.execute(`Knows.run('${name}')`)\n  dw.object.setBounds({\n    \"x\": 1490,\n    \"y\": 675,\n    \"width\": 180,\n    \"height\": 300\n  }, true);\n\n","_id":"fVZ50SGEvIWztoA5"}
{"key":"bozon","source":"\ndocument.getElementById('source').innerText = 'bozontest'\n\n","_id":"gJmK1r1aGMhyyOeX"}
{"key":"idnames","source":"\na = _(windowManager.windows)\n  .chain()\n  .map(function(v,k){return [v.object.id, k]})\n\t.object()\n\t.value()\nsetContent('aa')\n","_id":"gQ5ORe5L8NTKiQ3q"}
{"key":"meta","source":"\nq = !(typeof q == 'boolean') || !q\ncw.setIgnoreMouseEvents(!true)\ncw.setAlwaysOnTop(!true)\ncw.setPosition(30, 0)\ncw.setSize(400, screen.height)\n\nwn = -1\ntpl = jade.compile(`\nstyle\n  :stylus\n    .aa\n      font-size: 30px\n    .wrap\n      //margin-right: -40px\n\n    body\n      //background: #222\n      opacity: 1.3\n      zoom: 1\n      overvlow: hidden\n    .scre\n      width: 600px\n      //height: 100px\n    .wxyp\n      position: absolute\n      width: 100%\n      //background: rgba(30,233,99,1)\n      color: black\n      //background: #9E9E9E\n      margin: 0 5px\n      & img\n        width:100%\n      & span\n        width: 100px\n        text-overflow: ellipsis\n      \n    .dblrow    \n      //background: #607D8B\n      //font-family: monospace;\n      display: inline-block\n      line-height: 1em\n      position: relative;\n\n      & .sub, & .sup\n        display: block;  \n        position: relative;\n        top: -0.65em;\n        font-size: 0.85em;\n        line-height: 0;\n        margin: 0 2px;\n      \n      & .sub\n        top: 0.35em;\n\n.dd\n  - cb = cw.getBounds()\n  - each f in files\n    - wn++\n    .wxyp.file(style=\"top:#{wn*cb.width}px; left:#{0}px;\")\n      img.scre(src=\"#{f}\")\n      span.icon.icon-cd.icon-text #{f}\n.aa ∆spirin Ʌspirin ⅄spirin ${screen} ddd\n`);\n\nif(typeof files==\"undefined\"){\n files = jetpack.find(appRoot+'/Desktop/', \n                     { matching: 'Screen Shot*'});\n}  \ntxt = tpl({files:files})\nsetContent(txt)","_id":"gjeaod2PumiiNaHf"}
{"key":"aska_scroll_handler","source":"\nif(window._mWheelHandler)\n  document.body.removeEventListener('mousewheel',window._mWheelHandler);\n //document.querySelector('.boz-header').innerText = 'AWS'\n //document.body.style.background = 'red';\n//{x: 1206, y: 345, width: 320, height: 43}\n//cw.setSize(200,200);\n//cw.setPosition(1370,40)\n// cw.setAlwaysOnTop(true);\n//cw.setIgnoreMouseEvents(!true);\nWM = remote.require('electron-window-manager');\nwindow._mWheelHandler = (e)=>{\n\n  let {deltaX, deltaY} = e;\n//  let out = JSON.stringify({deltaX, deltaY},null,2);\n  let out = `deltaX = ${deltaX},<br/>deltaY = ${deltaY}`;\n  \n  exw = [\"ALL_WINDOW_SCROLL\", \n         //\"codeList\", \n         \"showCodeList\", \n         \"toolbar\", \n         //\"listknows\", \n         \"showTime\", \n         \"fulloverlay\"];\n\n  warr = _(remote.getGlobal('getAllWin')())\n    .chain()\n    .filter(w=>!exw.includes(w))\n    .map(w=>windowManager.get(w))\n    .each(function(w){\n      let [wx,wy] = w.object.getPosition();\n      w.object.setPosition(wx - deltaX, wy - deltaY);\n    })\n\n};\n\n//document\n\ndocument.body.addEventListener('mousewheel', window._mWheelHandler, false);\n\n\n\n\n","_id":"iK6eQQL24famIyct"}
{"key":"matrix1_1","source":"cw.setBounds({\"x\": 830,\"y\": 60, \"width\": 500, \"height\": 350}, true);\ncw.setAlwaysOnTop(!true)\ntpl = jade.compileFile('./matrix/tpl.jade');\ntxt = tpl({name:'matrix_test_1'})\nsetContent(txt);\npreout = document.getElementById('preout');\nqcount = document.getElementById('qcount');\nfuncClass = {};\n///////////////////////////////////////////////////////////////////\nvar streamer = new ya.speechkit.SpeechRecognition();\nvar device = jetpack.read('./matrix/propertions_drivers.json','json');\n///////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////\n//////////////////////  ВЫБОР УРОВНЯ ОПТИМИЗАЦИИ  /////////////////\n///////////////////////////////////////////////////////////////////\n//---------------------------------------------------------------//\noptimaize_lvl = function(bazon_x,matrix_lvl){\n\n  let sintaxis_optimaize = 'circle_lvl_';\n  let code = bazon_x.data.code;\n  let lvl_search = code.search(sintaxis_optimaize);\n  let circle_lvl = parseFloat(code.substring(lvl_search+sintaxis_optimaize.length,lvl_search+sintaxis_optimaize.length+1));\n\n  if(circle_lvl > matrix_lvl){\n    bazon_x.speed.x=1;bazon_x.speed.y=-1;//ВЕРХ-ВПЕРЕД\n  }else if(circle_lvl < matrix_lvl){\n    bazon_x.speed.x=-1;bazon_x.speed.y=1;//НИЗ-НАЗАД\n  }else if(circle_lvl == matrix_lvl){\n    bazon_x.speed.x=0;bazon_x.speed.y=1;//НИЗ\n  }\n  return bazon_x\n}\n\n///////////////////////////////////////////////////////////////////\nnew_bozon_x = function(xf,yf,xg,yg,dat){\n  speechQuant2 = {\n    speed:{\n      x:xf,\n      y:yf\n    },\n    x:xg,\n    y:yg,\n    data:dat\n  };\n  //console.log(text);       \n  quants.push(JSON.parse(JSON.stringify(speechQuant2)));\n  windowManager.sharedData.set('quants', quants);\n}\n////////////////////////////////////////////////////////////////\n\nfunction aska_speech_recording(g){\n  console.log('aska_speech_recording(play)')\n  if(g == 'play'){\n    window.ya.speechkit.settings.apikey = 'ddf051c8-8d90-4912-bccb-9fd85f0e21db';\n    streamer.start({\n      format: ya.speechkit.FORMAT.PCM44,\n      initCallback: function () {\n        console.log(\"Началась запись звука.\");\n      },\n      dataCallback: function (text, done, merge, time) {\n        if(done == true){\n        text = text.substring(0,text.length-1);\n        windowManager.sharedData.set('microphone', text);\n      }\n      },\n      errorCallback: function (err) {\n        console.log(err)\n       // aska_speech_recording('stop');\n        new_bozon_x(1,0,1, 5, 'возникла ошибка');\n       // aska_speech_recording('play');\n      },\n      infoCallback: function (sent_bytes, sent_packages, processed, format) {\n        \n      },\n      stopCallback: function () {\n        console.log(\"Запись звука прекращена.\");\n      },\n      particialResults: false,\n      utteranceSilence: 7\n    });\n  }else if(g == 'pause'){\n    streamer.pause();\n  }\n}\n\n\n////////////////////////////////////////////////////////////////\n/*\nnew_bozon = function(xg,yg,sx,sy,dat){\n  speechQuant2 = {\n    speed:{\n      x:sx,\n      y:sy\n    },\n    x:xg,\n    y:yg,\n    data:dat\n  };\n  //console.log(text);       \n  quants.push(JSON.parse(JSON.stringify(speechQuant2)));\n  windowManager.sharedData.set('quants', quants);\n}\n*/\n////////////////////////////////////////////////////////////////\nmatrix_new_bazon = function(xg,yg,data,dev){\n  if(data == undefined){data = '0'}\n  speechQuant2 = {\n    speed:{\n      x:1,\n      y:0\n    },\n    x:xg,\n    y:yg,\n    data:data,\n    device:dev\n  };\n  //console.log(text);       \n  quants.push(JSON.parse(JSON.stringify(speechQuant2)));\n  windowManager.sharedData.set('quants', quants);\n}\n/////////////////////////////////////////////////////////////////\naska = function(text){\n  var audio = document.getElementById('audio');\n  var url = 'https://tts.voicetech.yandex.net/generate?'+\n      'key=ddf051c8-8d90-4912-bccb-9fd85f0e21db'+\n      '&text='+encodeURI(text)+\n      '&format=mp3'+\n      '&lang=ru-RU'+\n      '&topic=queries'+\n      'speed=2'+\n      '&robot=1'+\n      '&emotion=evil';\n  audio.src = url;\n  audio.load();\n  audio.onloadeddata = function () {\n    audio.play();\n  }\n  var new_data = [text,'ASKA:'];\n\n  let arr_statistic = jetpack.read('F:/ajr/chat/chat_log.json', 'json');\n  arr_statistic.splice(arr_statistic.length,0,new_data);\n  jetpack.write('F:/ajr/chat/chat_log.json', arr_statistic); \n}\n\n///////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////\n////////////////  ЗАПУСК НОВОГО БАЗОНА ЕСЛИ ПАР.= 1  //////////////\n///////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////\nzapysk_bazona = function(proverka_x){//////////////////////////////\n  /////////////////////////////////////////////////////////////////\n  if(proverka_x!=undefined && proverka_x!=0){//   <--- IF\n    new_bozon_x(1,0,1,5,proverka_x)//                   |\n    //aska('появился новый базон')//                      |\n  }//                                             <--- { }\n}\n\n///////////////////////////////////////////////////////////////////\n////////////////  ЗАПУСК НОВОГО БАЗОНА ЕСЛИ ПАР.= 1  //////////////\n///////////////////////////////////////////////////////////////////\nserch_parameters = function(cod,par,par_str){//////////////////////\n  ///////////////////////////////////////////////////////////////////\n  let s_p1 = cod.search(par);\n  let code1 = cod.substring(0,s_p1);\n  let p1 = parseFloat(cod.substring(s_p1+9,s_p1+10));\n  let code2 = cod.substring(s_p1+10,cod.length);\n  var parameter_1 = par_str[p1];\n  var code = code1+parameter_1+code2;\n  return code\n}\n///////////////////////////////////////////////////////////////////\n////////////////  ЗАПУСК НОВОГО БАЗОНА ЕСЛИ ПАР.= 1  //////////////\n///////////////////////////////////////////////////////////////////\nserch_coma = function(cod,par){////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////\n  var counts = 0;\n  for(i=0;i<10;i++){\n    if(cod.search(par) >= 0){\n      counts +=1;\n      let p = cod.search(par);\n      cod = cod.substring(p+1,cod.length);\n    }else{\n      i = 99;\n    }\n  }\n  return counts\n}\n///////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////\n//////////////////////  ВЫБОР УРОВНЯ ОПТИМИЗАЦИИ  /////////////////\n///////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////\ncode_convert_parameters = function(code,arr_parameters){//\n  ///////////////////////////////////////////////////////////////////\n  var sintaxis_parametrov = 'parameter';\n  var code_with_parameters = '';\n\n  if(arr_parameters!=undefined){\n    for(i=0;i<arr_parameters.length;i++){\n      code = serch_parameters(code,sintaxis_parametrov,arr_parameters);\n    }\n  }else{\n    if(code.search(sintaxis_parametrov)>=0){\n      let arr_zero_parameters = [0,0,0,0,0,0,0,0,0,0]\n      var counts = serch_coma(code,sintaxis_parametrov);\n      for(i=0;i<counts;i++){\n        code = serch_parameters(code,sintaxis_parametrov,arr_zero_parameters);\n      }\n    }\n  }\n  return code\n}\n////////////////////////////////////////////////////////////////\nif(typeof quants === 'undefined')quants = [];\n//quants = [];\n\ntestQuant = {\n  speed:{\n    x:1,\n    y:0\n  },\n  x:1,\n  y:5,\n  data:'start'\n};\n\nloadFunc = (e,docs)=>{\n\n  out = docs.map(d=>({key:d.key, source:d.source}))\n\n  funcClass = out.reduce((pv,cv,ci)=>{\n    pv[cv.key] = new Function('data', cv.source);\n    return pv;\n  },{})\n  windowManager.sharedData.set('funcClass', funcClass);  \n\n\n  fns = _.functions(funcClass).map(fname=>fname.split('y').reduce((memo, val)=>{\n    if(val.charAt(0)=='x'){\n      memo.x = 1*val.substr(1);\n    }else{\n      memo.y = 1*val}\n    return memo\n  },{name:fname, src: String(funcClass[fname])})) //!!!!!!!!\n\n  windowManager.sharedData.set('matrixFunc', fns);  \n\n  //preout.innerHTML = van_dump(fns);\n\n}\nfunction get_signal(x,y,device_name){\n  let dev_name = windowManager.sharedData.fetch(device_name)\n  if(dev_name != undefined &&\n     dev_name != false){\n    matrix_new_bazon(x,y,dev_name,device_name)\n    windowManager.sharedData.set(device_name, false);\n  }\n}\nfunction drivers(d){\n  get_signal(3, 3, d)\n}\ncalculateMove = q => {\n  //console.log(q)\n  //console.log(\" смотри сюда\");\n  var qq = q;\n  Object.keys(q.speed).forEach(k=>q[k] += q.speed[k])\n  if(0==(qq.x = q.x%1000))qq.y++;\n  //qq.y = qq.y%42\n}\n\nrunCode = q => {\n  var fname = `x${q.x}y${q.y}`;\n  var qq = q;\n  if(funcClass.hasOwnProperty(fname)){\n    funcClass[fname].apply(qq,[qq.data]);\n  }\n\n}\n\n//preout.innerHTML = van_dump(calculate(testQuant))\n\nstartrun = function(){\n  //funcClass = _.clone(windowManager.sharedData.fetch('funcClass'));\n  device.forEach(drivers);\n  quants.forEach(calculateMove)\n  quants.forEach(runCode)\n  windowManager.sharedData.set('quants', quants);\n  preout.innerHTML = van_dump(quants);\n  qcount.innerHTML = quants.length;\n}\n\nif(typeof onlyOneLoop === 'undefined')onlyOneLoop = false;\n\nclrint = function(){\n  clearInterval(onlyOneLoop);\n  aska_speech_recording('pause')\n}\nclrint();\n\nreset = function(){\n  Matrix.getDb().find({ key: { $exists: true } }).sort({key:1}).exec(loadFunc)\n  //quants = [];\n}\n\nsettmr = function(){\n  aska_speech_recording('play');\n  tme = document.getElementById('mtimeout').selectedOptions[0].value;\n  clearInterval(onlyOneLoop);\n  onlyOneLoop = setInterval(startrun,tme);\n}\n\n//settmr();\n//startrun()\n\n\n\n\n\ndocument.getElementById('mquantadd').onclick = ()=>{\n  quants.push(JSON.parse(JSON.stringify(testQuant)));\n  //quants.push(_.extend(_.clone(testQuant), {x:3}));\n  windowManager.sharedData.set('quants', quants);\n}\ndocument.getElementById('mreload').onclick = reset;\ndocument.getElementById('mrun').onclick = settmr;\ndocument.getElementById('mstep').onclick = ()=>{clrint();startrun();};\n\n\n\n//document.getElementById('aska').onclick = aska_yandex_zapros(\"проверка, всё работает правильно\");\ndocument.getElementById('mpause').onclick = clrint;\n\nmwname = 'matrix1_view';\ndocument.getElementById('mview').onclick = \n()=>giveWin(mwname).execute(`Knows.run('${mwname}')`);\n\n","_id":"iNNbrvjmYhJWIb9y"}
{"key":"editor_matrix1_funcList","source":"cw.setBounds({\"x\": 450,\"y\": -1060, \"width\": 700, \"height\": 700}, true);\ncw.setAlwaysOnTop(!true)\n\ntxt = `\n<style> body {//background:#03A9F4;}</style>\n<canvas width=\"700\" height=\"450\" id=\"matrixView\" style=\"\nz-index: 1000;\nbackground: #03A9F4;;\n\"></canvas>\n<pre id='preout'>-</pre>\n`;\n\nfirstTpl = ()=>{\n  setContent(txt);\n  canvas = document.getElementById(\"matrixView\");\n  canvasWidth  = canvas.width ;\n  canvasHeight = canvas.height ;\n  ctx = canvas.getContext('2d');   \n}\nonce('templating',firstTpl)\n//////////////////////////\ndrawGrid = ()=>{\n\n  //padding around grid\n  p = 20;\n  cs = 10;\n  //grid width and height\n  bw = canvasWidth - p*2;\n  bh = canvasHeight - p*2;\n  //size of canvas\n  var cw = bw + (p*2) + 1;\n  var ch = bh + (p*2) + 1;\n\n  function drawBoard(){\n    ctx.beginPath();\n    for (var x = 0; x <= bw; x += cs) {\n      ctx.moveTo(0.5 + x + p, p);\n      ctx.lineTo(0.5 + x + p, bh + p);\n    }\n\n\n    for (var x = 0; x <= bh; x += cs) {\n      ctx.moveTo(p, 0.5 + x + p);\n      ctx.lineTo(bw + p, 0.5 + x + p);\n    }\n    ctx.closePath();\n\n    ctx.stroke();\n  }\n\n\n  drawBoard();\n}\n//once('grid',drawGrid)\npadding = 21;\n\npreout = document.getElementById('preout');\n\nrenderRect = (d)=>{\t\n  var scale = 10;\n  var x = scale * d.x + padding;\n  var y = scale * d.y + padding;\n  \n\n  ctx.fillRect(x, y, scale-1, scale-1);\n  ctx.font = \"24px Arial\";\n  //ctx.fillText(d.x+' '+d.y, x, y);\n}\nrenderCircle = (d)=>{\n  var scale = 10;\n  var x = scale * d.x + padding+4;\n  var y = scale * d.y + padding+4;\n\n  ctx.beginPath();\n  ctx.arc(x, y, 3, 0, Math.PI*2, true); \n  ctx.closePath();\n  ctx.fill(); \n  //ctx.stroke();\n  \n}\n\nquants = windowManager.sharedData.fetch('quants');\n\nmatrixFunc = windowManager.sharedData.fetch('matrixFunc');\n\nctx.clearRect(0, 0, canvas.width, canvas.height);\n\nctx.strokeStyle = \"black\";\ndrawGrid()\nctx.stroke();\n\nctx.fillStyle=\"#FF5722\";\nmatrixFunc.forEach(renderRect)\n\nctx.fillStyle=\"white\";\nctx.strokeStyle = \"white\";\nquants.forEach(renderCircle)\n\n\n\n//fns = _.functions(matrixFunc);\n\n\npreout.innerHTML = van_dump(matrixFunc)//.map(q=>q.x+' '+q.y).join('\\n')\n\n\n","_id":"iZFqZIovJUyYSSPZ"}
{"key":"matrix1_view","source":"cw.setBounds({\"x\": 950,\"y\": 460, \"width\": 600, \"height\": 500}, true);\ncw.setAlwaysOnTop(!true)\n_cwb = cw.getBounds();\n//-20\n\ntxt = `\n<style> body {\nbackground: transparent;\nwwidth:100%\n}\n.wrap {\nborder-bottom: 5px solid;\nborder-image-source: url(\"https://i.stack.imgur.com/1WlsT.png\");\nborder-image-slice: 49% 48% 50% 50%;\nborder-image-width: 12.5px;\nborder-image-outset: 20px 0 0;\nborder-image-repeat: repeat;\n\n}\n</style>\n<canvas id=\"matrixView\" style=\"\nz-index: 1000;\nbbackground:25,25,25,0.4;\n\"></canvas>\n<pre id='preout'>-</pre>\n`;\n\n\nfirstTpl = ()=>{\n  setContent(txt);   \n}\nonce('templating',firstTpl)\nfirstTpl()\n\n\n//////////////////////////////\ncanvas = document.getElementById(\"matrixView\");\nsyncSize = ()=>{\n  let cb = cw.getBounds();\n  canvasWidth  =  canvas.width = cb.width;\n  canvasHeight =  canvas.height = cb.height*3;\n}\nwindow.onresize=syncSize\nsyncSize()\n//////////////////////////\n\nctx = canvas.getContext('2d');\n/////////////////////////////\n\nvar BB,BBoffsetX,BBoffsetY;\n\nsetBB = ()=>{\n  BB=canvas.getBoundingClientRect();\n  BBoffsetX=BB.left;\n  BBoffsetY=BB.top;\n}\nsetBB()\n//////////////////////////////////////////////////////////////////////////////\nfunction copyFunctionMtrix(xy_from,xy_to){\n  //alert(xy_from)\n  let rg = windowManager.sharedData.fetch('matrixFunc'); \n  let yui = rg.filter((v,index)=>{return v.name == xy_from})\n  yui = yui[0]\n  Matrix.getDb().remove({key:xy_from});\n  let hui = yui.src\n  hui = hui.substring(hui.search('{')+1,hui.length-1)\n  let source = hui\n  let hash = md5(source)\n  let doc = { key: xy_to, source: source, md5: hash, matrix: 'matrix1', isFunc: true }\n  Matrix.getDb().update({key:doc.key}, doc, {upsert: true});\n}\n/////////////////////////////////////////////////////////////////////////////\nrclick = (xy,nxy)=>{\n  let to_name = 'x'+xy.x+'y'+xy.y\n  let h = nxy\n  copyFunctionMtrix(h,to_name)\n}\n\nmclick = (xy)=>{\n  Knows.run('openMfuncEdit', `x${xy.x}y${xy.y}`)\n}\n\nhoverxy = false;\n\nmhover = (xy)=>{\n  hoverxy = xy;\n  //console.log('hover',xy)\n}\ngrandScale = 12;\n//////////////////////////////////////////////////////////////////////////////\nmcalc = (e)=>{\n  var mx=e.clientX-BBoffsetX-22;\n  var my=e.clientY-BBoffsetY-22;\n  //if(mx>=rect.x && mx<=rect.x+rect.w && my>=rect.y && my<=rect.y+rect.h){\n  return {x:mx/grandScale|0, y:my/grandScale|0};\n}\ncanvas.oncontextmenu = (e)=>{\n // window.state_mclick = 0\n  if(window.state_mclick == 0){\n    e.preventDefault();\n    e.stopPropagation();\n    let rgh = mcalc(e)\n    rgh = 'x'+rgh.x+'y'+rgh.y\n    window.state_mclick = rgh\n  }else{\n    e.preventDefault();\n    e.stopPropagation();\n    try {\n      rclick(mcalc(e),window.state_mclick)\n    }catch(err){\n      window.state_mclick = 0\n    }\n    window.state_mclick = 0\n  }\n}\n/////////////////////////////////////////////////////////////////////////////\ncanvas.onclick = (e)=>{\n  e.preventDefault();\n  e.stopPropagation();\n  mclick(mcalc(e))\n  //}\n}\ncanvas.onmousemove = (e)=>{\n  e.preventDefault();\n  e.stopPropagation();\n  mhover(mcalc(e))\n  //}\n}\n\ndrawGrid = ()=>{\n\n  //padding around grid\n  p = 20;\n  cs = grandScale;\n  //grid width and height\n  bw = canvasWidth - p*2;\n  bh = canvasHeight - p*2;\n  //size of canvas\n  var cw = bw + (p*2) + 1;\n  var ch = bh + (p*2) + 1;\n\n  function drawBoard(){\n    ctx.beginPath();\n    for (var x = 0; x <= bw; x += cs) {\n      ctx.moveTo(0.5 + x + p, p);\n      ctx.lineTo(0.5 + x + p, bh + p);\n    }\n\n\n    for (var x = 0; x <= bh; x += cs) {\n      ctx.moveTo(p, 0.5 + x + p);\n      ctx.lineTo(bw + p, 0.5 + x + p);\n    }\n    ctx.closePath();\n\n    ctx.stroke();\n  }\n\n\n  drawBoard();\n}\n//once('grid',drawGrid)\npadding = 21;\n\npreout = document.getElementById('preout');\n\nrenderRect = (d)=>{\t\n  var scale = grandScale;\n  var x = scale * d.x + padding;\n  var y = scale * d.y + padding;\n  //alert(d)\n  if(d.name == window.state_mclick){\n    ctx.fillStyle=\"#005722\";\n  }else if(d.name == undefined){\n    ctx.fillStyle=\"black\";\n  }else{\n    ctx.fillStyle=\"#FF5722\";\n  }\n \n  ctx.fillRect(x, y, scale-1, scale-1);\n  ctx.font = \"24px Arial\";\n  //ctx.fillText(d.x+' '+d.y, x, y);\n}\nrenderCircle = (d)=>{\n  var scale = grandScale;\n  var x = scale * d.x + padding+4;\n  var y = scale * d.y + padding+4;\n\n  \n  \n  \n  ctx.beginPath();\n  ctx.arc(x, y, 3, 0, Math.PI*2, true); \n  ctx.closePath();\n  ctx.fill(); \n  //ctx.stroke();\n\n}\nrenderCircle2 = (d)=>{\n  ctx.fillStyle=\"grey\";\n  ctx.strokeStyle = \"white\";\n  let xy = {x:d.x-d.speed.x, y:d.y-d.speed.y}\n  renderCircle(xy)\n  let xy2 = {x:xy.x-d.speed.x*5, y:xy.y-d.speed.y*5};\n  var scale = grandScale;\n  var xx = scale * xy2.x + padding;\n  var yy = scale * xy2.y + padding;\n  ctx.clearRect(xx, yy, scale-1, scale-1);\n\n}\nrender = ()=>{\n  quants = windowManager.sharedData.fetch('quants');\n\n  matrixFunc = windowManager.sharedData.fetch('matrixFunc');\n\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n  ctx.strokeStyle = \"#222\";\n  drawGrid()\n  ctx.stroke();\n\n  \n  matrixFunc.forEach(renderRect)\n\n  ctx.fillStyle=\"white\";\n  ctx.strokeStyle = \"white\";\n  quants.forEach((d)=>{\n    renderCircle(d)\n    //renderCircle2(d)\n  })\n\n  //ctx.fillStyle=\"#cddc39\";\n  if(hoverxy)\n    renderRect(hoverxy);\n\n  //fns = _.functions(matrixFunc);\n\n  //preout.innerHTML = van_dump(matrixFunc).map(q=>q.x+' '+q.y).join('\\n')\n\n\n}\nrepeat = t => {\n  render(t); \n  requestAnimationFrame(repeat);\n}\nrequestAnimationFrame(repeat);\n\n\n\n\n\n\n\n\n","_id":"jLRReagFHZSXbz1g"}
{"key":"toolbar_scroll_handler","source":"\nif(window._mWheelHandler)\n  document.body.removeEventListener(\"mousewheel\",window._mWheelHandler);\n //document.querySelector('.boz-header').innerText = 'AWS'\n \n//{x: 1206, y: 345, width: 320, height: 43}\n//cw.setSize(200,200);\n//cw.setPosition(1370,40)\n// cw.setAlwaysOnTop(true);\n//cw.setIgnoreMouseEvents(!true);\nWM = remote.require('electron-window-manager');\nwindow._mWheelHandler = (e)=>{\n\n  let {deltaX, deltaY} = e;\n//  let out = JSON.stringify({deltaX, deltaY},null,2);\n  let out = `deltaX = ${deltaX},<br/>deltaY = ${deltaY}`;\n  \n  exw = [\"ALL_WINDOW_SCROLL\", \n         //\"codeList\", \n         \"showCodeList\", \n         \"toolbar\", \n         //\"listknows\", \n         \"showTime\", \n         \"fulloverlay\"];\n\n  warr = _(remote.getGlobal('getAllWin')())\n    .chain()\n    .filter(w=>!exw.includes(w))\n    .map(w=>windowManager.get(w))\n    .each(function(w){\n      let [wx,wy] = w.object.getPosition();\n      w.object.setPosition(wx - deltaX, wy - deltaY);\n    })\n\n};\n\n//document\n\ndocument.body.addEventListener(\"mousewheel\", window._mWheelHandler, false);\n\n\n\n\n","_id":"klIgSTexKHZYWOBD"}
{"key":"codeList","source":"//document.body.style.background = 'ghostwhite'\nopenEditor = function (key){\n  //createMin(key).execute(`Knows.run('${key}')`);\n\tcreateEditor('editor_'+key, 'editCode', key)\n}\n\nrunCode = function (key){\n  \n  Database.run(key)\n}\n\ndocument.querySelector('.boz-header').innerText = 'codelist';\nDatabase.getDb().find({ key: { $exists: true } }).sort({key:1}).exec(function (err, docs) {\n  //justShowResult(_.zip(_(docs).pluck('key'),_(docs).pluck('source')).join('\\n--\\n'))\n  //console.log(docs) \n  //return\n  var list = _(docs).chain()\n\t.map(function(v,k){\n    return `<span class=\"nav-group-item knows-item\">\n<span class=\"icon icon-tools\" onclick=\"openEditor('${v.key}')\"></span>\n<span class=\"icon icon-play\" onclick=\"runCode('${v.key}')\"></span>\n${v.key}</span>`;})\n  .value().join('\\n');\n  \n  document.getElementById('content')\n    .innerHTML = `<style>\n.knows-item {font-size:12px; margin:2px 0; background: #ddd; padding: 2px 5px 2px 5px;}\n.knows-item .icon {margin-right: 0px; color: #009EBD;}\n</style>\n<nav class=\"nav-group\" \nstyle=\"overflow: scroll;\">${list}</nav>`\n\n})\n","_id":"nGblsiugAkoWhndQ"}
{"key":"editkopen","source":"\n\njust.setName(opt);\n\njust.run('kedit');\n'loading...'\n\n","_id":"o8sCpP7YGONIxyPg"}
{"key":"R_Interface","source":"\ngw = new BrowserWindow({ width: 10, height: 10,\n                        webPreferences: {\n                          zoomFactor: 2.0,\n                          nodeIntegration: false\n                        },\n                        x:0,\n                        y:0,\n                        movable:true,\n                        alwaysOnTop:true,\n                        transparent: true,\n                        skipTaskbar:true,\n                        frame: false\n                       });\ngw.on('closed', function() {\n  gw = null;\n});\ngw.loadURL('F:/ajr/round_interface/index.html');\ngw.show();\n\n","_id":"p3E0BgVnDZhh5MCu"}
{"key":"open_aska_4d","source":"\nfunction get_code(n){\nvar words = jetpack.read('G:/JSON/Aska_memorys_words_00.json', 'json')\nvar numbers = 0;\n words.map((v,index)=>{if(v[1] == n)n = index})\n n+=1\n n = words[n][1]\n  return n\n}\nfunction get_code_new(n){\nvar words = jetpack.read('G:/Games/aska.json','json')\nvar numbers = 0;\n \n var code_x = 0;\n  words.map((v, index)=>{return v.map((v)=>{if(v == n){code_x = index}return v})})\n\n  if(code_x != 0){\n    n = words[code_x][1]\n  }\n  return n\n}\n\n////////////////////////////////////////////////////////\n\n\n  editor.setValue(get_code_new(opt))\n  //cw.setPosition(2300,200)\n  just.setName(opt)\n  ","_id":"piBu4Fp9KXaNCPZk"}
{"key":"dir","source":"//document.body.style.background = 'ghostwhite'\nclickitem = function (key){\n  //createMin(key).execute(`Knows.run('${key}')`);\n\tcreateEditor('editor_'+key, 'editkopen', key)\n}\n\ndocument.querySelector('.boz-header').innerText = 'dir'\nKnows.getDb().find({ key: { $exists: true } }).sort({key:1}).exec(render);// function (err, docs) {\n  //justShowResult(_.zip(_(docs).pluck('key'),_(docs).pluck('source')).join('\\n--\\n'))\n  //console.log(docs) \n  //return\nfunction render (err, docs){\n  var list = _(docs).chain()\n\t.map(function(v,k){\n    return `<span class=\"nav-group-item knows-item\"\nonclick=\"clickitem('${v.key}')\">\n<span class=\"icon icon-cd\"></span>\n# ${v.key}</span>`;})\n  .value().join('\\n');\n  \n  document.getElementById('content')\n    .innerHTML = `<style>\n.knows-item {font-size:12px; margin:2px 0; background: #ddd; padding: 2px 10px 2px 5px;}\n.knows-item .icon {margin-right: 0px; color: #009EBD;}\n</style>\n<nav class=\"nav-group\" \nstyle=\"overflow: scroll;\">${list}</nav>`\n\n}\n\ndd = Knows.getDb().getAllData()\nrender(0,dd)","_id":"qfuDy0MdKCHGOHpl"}
{"key":"getfocuswin","source":"/*if(typeof wwe == 'undefined'){\n\tjustShowResult('<b style=\"color:#FF5722;\">non faraon</b>', true)\n}else{\na = _(windowManager.windows)\n  .chain()\n  .map(function(v,k){return [v.object.id, k]})\n\t.object()\n\t.value()\njustShowResult(aa1 +'\\n<b style=\"color:#FF5722;\">'+\n               van_dump(a)+'</b>', true)\n}/**/\n\nwarr = _(windowManager.windows)\n  .chain()\n  .map(function(v,k){return [v.object.id, k]})\n\t.object()\n\t.value()\n\nremote.app.once('browser-window-focus', function(e, w){\n\tjustShowResult('<b style=\"color:green;\">'+w.id +' : '+ warr[w.id]+'</b>', true)\n});\njustShowResult('<b style=\"color:blue;\">Waiting for focus on any window</b>', true)\n","_id":"rtXcJj99XC3KqVZ3"}
{"key":"d3quadtree","source":"cw.setPosition(40, 40)\ncw.setSize(400, 300)\ncw.setAlwaysOnTop(!true)\nd3 = require('d3')\ncb = cw.getBounds()\ndocument.body.innerText = ''\n\nvar width = cb.width,\n    height = cb.height;\n\nvar data = d3.range(1000).map(function() {\n  return [Math.random() * width, Math.random() * height];\n});\n\nvar quadtree = d3.geom.quadtree()\n.extent([[-1, -1], [width + 1, height + 1]])\n(data);\n\nvar color = d3.scale.linear()\n.domain([0, 8])  // max depth of quadtree\n.range([\"#efe\", \"#060\"]);\n\nvar svg = d3.select(\"body\").append(\"div\")\n.attr(\"width\", width)\n.attr(\"height\", height)\n.on(\"click\", function (d) {\n  var xy = d3.mouse(d3.selectAll('svg')[0][0]);\n  svg.selectAll(\"#pt\")\n    .attr(\"cx\", xy[0])\n    .attr(\"cy\", xy[1]);\n  clicked();\n});\n\nvar svg = d3.select(\"body\").append(\"svg\")\n.attr(\"width\", width)\n.attr(\"height\", height)\n.on(\"click\", function (d) {\n  var xy = d3.mouse(d3.selectAll('svg')[0][0]);\n  svg.selectAll(\"#pt\")\n    .attr(\"cx\", xy[0])\n    .attr(\"cy\", xy[1]);\n  clicked();\n});\n\nvar rect = svg.selectAll(\".node\")\n.data(nodes(quadtree))\n.enter().append(\"rect\")\n.attr(\"class\", \"node\")\n.attr(\"x\", function(d) { return d.x1; })\n.attr(\"y\", function(d) { return d.y1; })\n.attr(\"width\", function(d) { return d.x2 - d.x1; })\n.attr(\"height\", function(d) { return d.y2 - d.y1; });\n\nvar point = svg.selectAll(\".point\")\n.data(data)\n.enter().append(\"circle\")\n.attr(\"class\", \"point\")\n.attr(\"cx\", function(d) { return d[0]; })\n.attr(\"cy\", function(d) { return d[1]; })\n.attr(\"r\", 3);\n\nsvg.append(\"circle\")\n  .attr(\"id\", \"pt\")\n  .attr(\"r\", 3)\n  .attr(\"cx\", width/2)\n  .attr(\"cy\", height/2)\n  .style(\"fill\", \"yellow\");\n\n// PDS Collect a list of nodes to draw rectangles, adding extent and depth data\nfunction nodes(quadtree) {\n  var nodes = [];\n  quadtree.depth = 0; // root\n  quadtree.visit(function(node, x1, y1, x2, y2) {\n    node.x1 = x1;\n    node.y1 = y1;\n    node.x2 = x2;\n    node.y2 = y2;\n    nodes.push(node);\n    for (var i=0; i<4; i++) {\n      if (node.nodes[i]) node.nodes[i].depth = node.depth+1;\n    }\n  });\n  return nodes;\n}\n\n\n// calculate euclidean distance of two points with coordinates: a(ax, ay) and b(bx, by)\nfunction euclidDistance(ax, ay, bx, by){\n  return Math.sqrt(Math.pow(ax-bx, 2) + Math.pow(ay-by, 2));\n}\n\n// calculate mindist between searchpoint and rectangle\nfunction mindist(x, y, x1, y1, x2, y2){\n  var dx1 = x - x1, dx2 = x - x2, dy1 = y - y1, dy2 = y - y2;\n\n  if (dx1*dx2 < 0) { // x is between x1 and x2\n    if (dy1*dy2 < 0) { // (x,y) is inside the rectangle\n      return 0; // return 0 as point is in rect\n    }\n    return Math.min(Math.abs(dy1),Math.abs(dy2));\n  }\n  if (dy1*dy2 < 0) { // y is between y1 and y2\n    // we don't have to test for being inside the rectangle, it's already tested.\n    return Math.min(Math.abs(dx1),Math.abs(dx2));\n  }\n  return Math.min( Math.min(euclidDistance(x,y,x1,y1),euclidDistance(x,y,x2,y2)), Math.min(euclidDistance(x,y,x1,y2),euclidDistance(x,y,x2,y1)) );\n}\n\n\n// Find the nodes within the specified rectangle.\nfunction knearest(bestqueue, resultqueue, x, y, k) {\n  // sort children according to their mindist/dist to searchpoint\n  bestqueue.sort(function(a, b){\n    // add minidst to nodes if not there already\n    [a, b].forEach(function(val, idx, array){\n      if(val.mindist == undefined){\n        val.scanned = true;\n        if(val.leaf){\n          val.point.scanned=true;\n          val.mindist = euclidDistance(x, y, val.x, val.y);\n        }else{\n          val.mindist = mindist(x, y, val.x1, val.y1, val.x2, val.y2);\n        }\n      }\n    });\n    return b.mindist - a.mindist;\n  });\n\n  // add nearest leafs if any\n  for (var i=bestqueue.length-1; i>=0; i--){\n    var elem = bestqueue[i];\n    if(elem.leaf){\n      elem.point.selected = true;\n      bestqueue.pop();\n      resultqueue.push(elem);\n    }else{\n      break;\n    }\n    if(resultqueue.length >=k){\n      break;\n    }\n  }\n\n  // check if enough points found\n  if(resultqueue.length >=k || bestqueue.length == 0){\n    // return if k neighbors found\n    return;\n  }else{\n    // add child nodes to bestqueue and recurse\n    var vistitednode = bestqueue.pop();\n    vistitednode.visited = true;\n    // add nodes to queue\n    vistitednode.nodes.forEach(function(val, idx, array){\n      bestqueue.push(val);\n    });\n    // recursion\n    knearest(bestqueue, resultqueue, x, y, k);\n  }\n}\n\n\nfunction clicked() {\n  pt = d3.selectAll('#pt');\n  var x = +pt.attr('cx'), y = +pt.attr('cy');\n\n  // TODO these values should be stored seperately so that points don't have to be visited after each query\n  // idea assign unique ids to quadtree nodes and have a separate mindist array\n  point.each(function(d) { d.scanned = d.selected = false; d.mindist = undefined; });\n  rect.each(function(d) { d.visited = false;  d.mindist = undefined;});\n\n  //get nearest neighbors\n  var bestqueue = new Array(quadtree);\n  var resultqueue = [];\n  knearest(bestqueue, resultqueue, x, y, 10);\n\n  point.classed(\"scanned\", function(d) { return d.scanned; });\n  point.classed(\"selected\", function(d) { return d.selected; });\n  rect.style('fill', function(d) { return d.visited ? color(d.depth) : 'none'; });\n}\n\nclicked();\n\n\n","_id":"uFDBwjiXKXsFqOgl"}
{"key":"min_4","source":"\nq = !(typeof q == 'boolean') || !q\n//cw.setIgnoreMouseEvents(!true)\ncw.setPosition(3000, 0)\ncw.setSize(600, screen.height)\n\nwn = 0\ntpl = jade.compile(`\nstyle\n  :stylus\n    .aa\n      font-size: 30px\n    body\n      background: #222\n      //opacity: .3\n      //zoom: 3\n    .scre\n      width: 600px\n      //height: 100px\n    .wxyp\n      position: absolute\n      width: 100%\n      //background: rgba(30,233,99,1)\n      color: black\n      background: #9E9E9E\n      margin: 0 5px\n      & span\n        width: 100px\n        text-overflow: ellipsis\n    .dblrow    \n      //background: #607D8B\n      //font-family: monospace;\n      display: inline-block\n      line-height: 1em\n      position: relative;\n\n      & .sub, & .sup\n        display: block;  \n        position: relative;\n        top: -0.65em;\n        font-size: 0.85em;\n        line-height: 0;\n        margin: 0 2px;\n      \n      & .sub\n        top: 0.35em;\n\n.dd\n  - each f in files\n    //- b = w.object.getBounds()\n    - wn++\n    .wxyp.file(style=\"top:#{wn*450}px; left:#{0}px;\")\n      img.scre(src=\"#{f}\")\n      span.icon.icon-cd.icon-text #{f}\n.aa ∆spirin Ʌspirin ⅄spirin ${screen} ddd\n`);\n\nif(typeof files==\"undefined\"){\n files = jetpack.find(remote.app.getHomeDir()+'/Desktop/', \n                     { matching: 'Screen Shot*'});\n}  \ntxt = tpl({files:files})\nsetContent(txt)","_id":"uScreW4kLFvCzcV5"}
{"key":"minxxin","source":"//document.body.style.background = 'ghostwhite'\n\nKnows.getDb().find({ key: { $exists: true } }, function (err, docs) {\n  //justShowResult(_.zip(_(docs).pluck('key'),_(docs).pluck('source')).join('\\n--\\n'))\n  //console.log(docs) \n  //return\n  var list = _(docs).chain()\n\t.map(function(v,k){\n    return `<a class=\"nav-group-item knows-item\"\nonclick=\"createEditor('editor_${v.key}', 'editkopen', '${v.key}')\">\n<span class=\"icon icon-cd\"></span>\n${v.key}</a>`;})\n  .value().join('\\n');\n  \n  document.getElementById('content')\n    .innerHTML = `<style>\n.knows-item {margin:2px 0; background: #dfd; padding: 2px 10px 2px 5px;}\n.knows-item .icon {color: #009EBD;}\n</style>\n<nav class=\"nav-group\" \nstyle=\"overflow: scroll;\">${list}</nav>`\n\n})\n","_id":"wnqeIlbxqTRXF6AO"}
{"key":"editCode","source":"\njust.setName(opt);\n\nDatabase.getDb().findOne({key:opt}).exec(function(err,data){\n\t\tstr = data.source\n\t\teditor.setValue(str) //editor.getValue()+'\\n'+\n\t})\n\n\n","_id":"xLL8CiFwDZSUOSrV"}
{"key":"openMfuncEdit","source":"\ncreateEditor('editor_'+opt, 'editMatrixFunc', opt)\n\n","_id":"xrDAalH8Nv4ses9A"}
{"key":"ASKA4D_GO","source":"\nfunction get_code(n){\n  let A4D = jetpack.read(appPath+'/ASKA_4D.json', 'json')\n  A4D.map((v,index)=>{if(v[0] == n)n = index})\n  n = A4D[n][1]\n  return n\n}\n////////////////////////////////////////////////////////////////\nfunction get_code_new(n){\n  var words = jetpack.read('G:/Games/aska.json','json')\n  var numbers = 0;\n\n  var code_x = 0;\n  words.map((v, index)=>{return v.map((v)=>{if(v == n){code_x = index}return v})})\n\n  if(code_x != 0){\n    n = words[code_x][1]\n  }\n  return n\n}\n\n////////////////////////////////////////////////////////\nlet robot = require('robotjs');\nlet position = robot.getMousePos()\neditor.setValue(get_code(opt))\ncw.setPosition(position.x,position.y)\njust.setName(opt)\n\n\n","_id":"yqL7YXT0EsXA9V0O"}
